<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>A Structured Self-attentive Sentence Embedding 论文笔记</title>
      <link href="/post/e76a9f9c.html"/>
      <url>/post/e76a9f9c.html</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h1><p>论文地址：<a href="https://arxiv.org/abs/1703.03130" target="_blank" rel="noopener">https://arxiv.org/abs/1703.03130</a></p><p>本篇论文提出了一种基于<strong>自注意力机制</strong>（自注意力机制是注意力机制的改进，其减少了对外部信息的依赖，更擅长捕捉数据或特征的内部相关性）的<strong>sentence embedding</strong>。</p><p>sentence embedding模型用 2-D matrix 来表示一句话的embedding（而不是传统的vector），matrix中的每一行表示了句子中的不同的部分 。基于sentence embedding模型，论文还提出自注意力机制和一种特殊的正则化项的方法。对于该模型，一个附带的作用就是可以用一种简单的方法把句子中被encode到embedding的特殊的部分可视化出来。</p><p>作者在三个公开数据集上进行实验，并且取得了不错的效果。</p><hr><h1 id="self-attention机制"><a class="markdownIt-Anchor" href="#self-attention机制"></a> Self-attention机制</h1><p>For some tasks people propose to use attention mechanism on top of the CNN or LSTM model to introduce extra source of information to guide the extraction of sentence embedding. However, for some other tasks like sentiment classiﬁcation, this is not directly applicable since there is no such extra information: the model is only given one single sentence as input.</p><p>意思是，对于一些任务，我们经常会使用CNN或者LSTM模型再加上注意力机制去引入额外的信息用来辅助sentence embedding的抽取。</p><p>但是，对于一些其他的任务，比如情感分类任务，上面说的模型就不能很好的应用了，因为这类任务输入的仅仅是一句话，没有额外的信息可以抽取。</p><p>这种情况下，最常用的解决方法是add a max pooling or averaging step across all time steps，或者提取the hidden representation at the last time step as the encoded embedding。</p><p>我们假设在 recurrent model 的所有时间步长上携带语义是相对困难和不必要的，所以为这些序列模型提出了一种自注意力机制（self-attention mechanism）来代替 max pooling or averaging step 。</p><p><strong>self-attention 的好处</strong></p><p>不同于之前的方法，这种自注意力机制可以提取句子中的不同方面，用多个向量来表示。</p><p>In addition, due to its direct access to hidden representations from previous time steps, it relieves some long-term memorization burden from LSTM.</p><p>As a side effect coming together with our proposed self-attentive sentence embedding, interpreting the extracted embedding becomes very easy and explicit.</p><hr><h1 id="模型的详细介绍"><a class="markdownIt-Anchor" href="#模型的详细介绍"></a> 模型的详细介绍</h1><p>论文提出的模型由两部分组成，一部分是biLSTM，另一部分是self-attention mechanism（它为LSTM的隐藏层状态提供了一组summation weight vectors）。这些summation weight vectors与LSTM的隐藏状态进行点乘，得到的加权后的隐藏状态被视为句子的embedding。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/A%20Structured%20Self-attentive%20Sentence%20Embedding/%E5%9B%BE%E7%89%87/01.png" alt="模型结构图"></p><p>Figure 1 展示了sentence model应用与情感分析任务，模型中结合了全连接层和softmax层。</p><p>假设我们有一个包含n个词的句子，它被表示为一个序列的word embedding：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=(w_1,w_2,...,w_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为一个向量(vector)表示为一个d维word embedding（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(1,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span>），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>表示它是句子中的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个词。因此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>可表示为一个2-D matrix（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(n,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span>）。</p><p>为了获得两个相邻词之间的依赖，我们将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>送到biLSTM中进行处理:</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/A%20Structured%20Self-attentive%20Sentence%20Embedding/%E5%9B%BE%E7%89%87/02.png" alt></p><p>设隐藏层的个数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>，则我们得到一个新的隐藏层状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>，它的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mn>2</mn><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(n,2u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault">u</span><span class="mclose">)</span></span></span></span>，这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>u</mi></mrow><annotation encoding="application/x-tex">2u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">u</span></span></span></span>是两个双向的LSTM的隐藏状态合并而来的。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>h</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H=(h_1,h_2,...,h_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>我们的最终目的是将一个句子变成一个固定size的embedding。<strong>We achieve that by choosing a linear combination of the n LSTM hidden vectors in H. Computing the linear combination requires the self-attention mechanism.</strong></p><p><strong>自注意力机制的任务就是将所有的LSTM隐藏状态合并成的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>作为一个输入，然后输出一个权重向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span></strong>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>s</mi><mn>2</mn></mrow></msub><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>s</mi><mn>1</mn></mrow></msub><msup><mi>H</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a=softmax(w_{s2}tanh(W_{s1}H^T))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mrow><mi>s</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">W_{s1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个权重矩阵，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>a</mi></msub><mo separator="true">,</mo><mn>2</mn><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(d_a,2u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault">u</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>s</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">w_{s2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个参数向量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>d</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(1,d_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">d_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个超参数，我们可以自由设置。</p><p>计算详细流程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>s</mi><mn>1</mn></mrow></msub><mo>∗</mo><msup><mi>H</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>a</mi></msub><mo separator="true">,</mo><mn>2</mn><mi>u</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>2</mn><mi>u</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>a</mi></msub><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>W</mi><msub><mi>s</mi><mn>2</mn></msub></msub><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>a</mi></msub><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>d</mi><mi>a</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>d</mi><mi>a</mi></msub><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size(W_{s1}*H^T)=(d_a,2u)*(2u,n)=(d_a,n)  \\size(W_{s_2})*(d_a,n)=(1,d_a)*(d_a,n)=(1,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size(a)=(1,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>就是我们要找的一组linear combination参数。最后我们将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>进行点乘，我们也就得到了最终的句向量表达。而这中vector representation往往会关注句子的一个特殊的部分（如一组特殊的相关单词或短语），但是对于长句子，我们需要关注多个部分来反应整个句子的语义。</p><p>因此我们需要进行多次关注。具体做法是将上面的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mrow><mi>s</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">W_{s2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的维度进行扩展，如扩展成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><msub><mi>d</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(r,d_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的矩阵，这就相当于对句子进行了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>次不同部分的关注操作。最后经过运算，我们得到一个权重矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(r,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>s</mi><mn>2</mn></mrow></msub><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>s</mi><mn>1</mn></mrow></msub><msup><mi>H</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A=softmax(w_{s2}tanh(W_{s1}H^T))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>最后得到的 sentence embedding 为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mn>2</mn><mi>u</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=(r,2u)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault">u</span><span class="mclose">)</span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mi>A</mi><mi>H</mi></mrow><annotation encoding="application/x-tex">M=AH</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span></span></p><p>注：该模型是有监督的：</p><p>As a downside of our proposed model, the current training method heavily relies on downstream applications, thus we are not able to train it in an unsupervised way. <strong>The major obstacle towards enabling unsupervised learning in this model is that during decoding, we don’t know as prior how the different rows in the embedding should be divided and reorganized.</strong> Exploring all those possible divisions by using a neural network could easily end up with overﬁtting. Although we can still do unsupervised learning on the proposed model by using a sequential decoder on top of the sentence embedding, it merits more to ﬁnd some other structures as a decoder.</p><hr><h1 id="惩罚项"><a class="markdownIt-Anchor" href="#惩罚项"></a> 惩罚项</h1><p>如果r次的关注操作得到的是相同或者相似的权重，那么就会产生冗余问题。因此我们需要一个惩罚项去保证每次的关注操作得到的是不同的权重向量。</p><p>惩罚项使用的是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">(</mo><mi>A</mi><msup><mi>A</mi><mi>T</mi></msup><mo>−</mo><mi>I</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mi>F</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">P=||(AA^T-I)||_{F}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>是单位矩阵，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>表示的是Frobenius 范数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>R</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mi>F</mi></msub></mrow><annotation encoding="application/x-tex">||R||_F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示为矩阵A的各项元素的绝对值平方的总和，再开方。</p><p>如果权重参数学习得一样，那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">AA^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>的值会变大，整个惩罚项就会变大，这样就起到了防止权重参数一样的结果。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/A%20Structured%20Self-attentive%20Sentence%20Embedding/%E5%9B%BE%E7%89%87/03.png" alt></p><hr><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>Self-Attention在本论文模型的作用就是获得一个权重矩阵参数，然后将这个参数与所有隐藏层的集合H相乘，就得到了一个sentence embedding，而sentence embedding中包含了对句子中一些比较重要的部分聚焦（或者说关注）。惩罚项的部分是为了多次聚焦（关注）得到的向量不能相同或者相似。</p>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> self-attention </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Skip-Gram简单实现</title>
      <link href="/post/972242bd.html"/>
      <url>/post/972242bd.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">dtype = torch.FloatTensor</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3 Words Sentence</span></span><br><span class="line">sentences = [ <span class="string">"i like dog"</span>, <span class="string">"i like cat"</span>, <span class="string">"i like animal"</span>,</span><br><span class="line">              <span class="string">"dog cat animal"</span>, <span class="string">"apple cat dog like"</span>, <span class="string">"dog fish milk like"</span>,</span><br><span class="line">              <span class="string">"dog cat eyes like"</span>, <span class="string">"i like apple"</span>, <span class="string">"apple i hate"</span>,</span><br><span class="line">              <span class="string">"apple i movie book music like"</span>, <span class="string">"cat dog hate"</span>, <span class="string">"cat dog like"</span>]</span><br><span class="line"></span><br><span class="line">word_sequence = <span class="string">" "</span>.join(sentences).split()</span><br><span class="line">print(word_sequence)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&apos;i&apos;, &apos;like&apos;, &apos;dog&apos;, &apos;i&apos;, &apos;like&apos;, &apos;cat&apos;, &apos;i&apos;, &apos;like&apos;, &apos;animal&apos;, &apos;dog&apos;, &apos;cat&apos;, &apos;animal&apos;, &apos;apple&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;like&apos;, &apos;dog&apos;, &apos;fish&apos;, &apos;milk&apos;, &apos;like&apos;, &apos;dog&apos;, &apos;cat&apos;, &apos;eyes&apos;, &apos;like&apos;, &apos;i&apos;, &apos;like&apos;, &apos;apple&apos;, &apos;apple&apos;, &apos;i&apos;, &apos;hate&apos;, &apos;apple&apos;, &apos;i&apos;, &apos;movie&apos;, &apos;book&apos;, &apos;music&apos;, &apos;like&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;hate&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;like&apos;]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">word_list = <span class="string">" "</span>.join(sentences).split()</span><br><span class="line"><span class="comment"># 过滤掉重复的单词</span></span><br><span class="line">word_list = list(set(word_list))</span><br><span class="line"></span><br><span class="line">print(word_list)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&apos;movie&apos;, &apos;eyes&apos;, &apos;music&apos;, &apos;dog&apos;, &apos;milk&apos;, &apos;book&apos;, &apos;cat&apos;, &apos;like&apos;, &apos;animal&apos;, &apos;i&apos;, &apos;apple&apos;, &apos;fish&apos;, &apos;hate&apos;]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">word_dict = &#123;w: i <span class="keyword">for</span> i, w <span class="keyword">in</span> enumerate(word_list)&#125;</span><br><span class="line"></span><br><span class="line">print(word_dict)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&apos;movie&apos;: 0, &apos;eyes&apos;: 1, &apos;music&apos;: 2, &apos;dog&apos;: 3, &apos;milk&apos;: 4, &apos;book&apos;: 5, &apos;cat&apos;: 6, &apos;like&apos;: 7, &apos;animal&apos;: 8, &apos;i&apos;: 9, &apos;apple&apos;: 10, &apos;fish&apos;: 11, &apos;hate&apos;: 12&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Word2Vec Parameter</span></span><br><span class="line">batch_size = <span class="number">20</span></span><br><span class="line">embedding_size = <span class="number">2</span></span><br><span class="line">voc_size = len(word_list)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_batch</span><span class="params">(data, size)</span>:</span></span><br><span class="line">  random_inputs = []</span><br><span class="line">  random_labels = []</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># np.random.choice 参数意思分别 是从 range(len(data)) 中以概率P，随机选择 size 个, p没有指定的时候相当于是一致的分布.</span></span><br><span class="line">  <span class="comment"># replacement 代表的意思是抽样之后还放不放回去，如果是False的话，那么出来的三个数都不一样，</span></span><br><span class="line">  <span class="comment"># 如果是True的话， 有可能会出现重复的，因为前面的抽的放回去了。</span></span><br><span class="line">  random_index = np.random.choice(range(len(data)), size, replace=<span class="literal">False</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> random_index:</span><br><span class="line">    <span class="comment"># np.eye()生成对角矩阵</span></span><br><span class="line">    <span class="comment"># np.eye(voc_size)[data[i][0]] 相当于one-hot编码？</span></span><br><span class="line">    random_inputs.append(np.eye(voc_size)[data[i][<span class="number">0</span>]])  <span class="comment"># target</span></span><br><span class="line">    random_labels.append(data[i][<span class="number">1</span>])  <span class="comment"># context word</span></span><br><span class="line">    </span><br><span class="line">  <span class="keyword">return</span> random_inputs, random_labels</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Make skip gram of one size window</span></span><br><span class="line">skip_grams = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(word_sequence) - <span class="number">1</span>):</span><br><span class="line">  <span class="comment"># target是目标词的索引值</span></span><br><span class="line">  target = word_dict[word_sequence[i]]</span><br><span class="line">  <span class="comment"># context是target上下文的索引值</span></span><br><span class="line">  context = [word_dict[word_sequence[i - <span class="number">1</span>]], word_dict[word_sequence[i + <span class="number">1</span>]]]</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> w <span class="keyword">in</span> context:</span><br><span class="line">    skip_grams.append([target, w])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Model</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Word2Vec</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">    super(Word2Vec, self).__init__()</span><br><span class="line">    </span><br><span class="line">    self.W = nn.Parameter(<span class="number">-2</span> * torch.rand(voc_size, embedding_size) + <span class="number">1</span>).type(dtype)</span><br><span class="line">    self.WT = nn.Parameter(<span class="number">-2</span> * torch.rand(embedding_size, voc_size) + <span class="number">1</span>).type(dtype)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, X)</span>:</span>  <span class="comment"># X : [batch_size, voc_size]</span></span><br><span class="line">    <span class="comment"># hidden_layer : [batch_size, embedding_size]</span></span><br><span class="line">    hidden_layer = torch.matmul(X, self.W)</span><br><span class="line">    <span class="comment"># output_layer : [batch_size, voc_size]</span></span><br><span class="line">    output_layer = torch.matmul(hidden_layer, self.WT)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> output_layer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model = Word2Vec()</span><br><span class="line"></span><br><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = optim.Adam(model.parameters(), lr=<span class="number">0.001</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Training</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">  </span><br><span class="line">  input_batch, target_batch = random_batch(skip_grams, batch_size)</span><br><span class="line">  </span><br><span class="line">  input_batch = Variable(torch.Tensor(input_batch))</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># target_batch : [batch_size] (LongTensor, not one-hot)</span></span><br><span class="line">  target_batch = Variable(torch.LongTensor(target_batch))</span><br><span class="line">  </span><br><span class="line">  optimizer.zero_grad()</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># output : [batch_size, voc_size]</span></span><br><span class="line">  output = model(input_batch)</span><br><span class="line">  </span><br><span class="line">  loss = criterion(output, target_batch)</span><br><span class="line">  <span class="keyword">if</span> (epoch + <span class="number">1</span>)%<span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'Epoch:'</span>, <span class="string">'%04d'</span> % (epoch + <span class="number">1</span>), <span class="string">'cost ='</span>, <span class="string">'&#123;:.6f&#125;'</span>.format(loss))</span><br><span class="line">    </span><br><span class="line">  loss.backward()</span><br><span class="line">  optimizer.step()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Epoch: 1000 cost = 1.997100</span><br><span class="line">Epoch: 2000 cost = 1.859332</span><br><span class="line">Epoch: 3000 cost = 1.929157</span><br><span class="line">Epoch: 4000 cost = 1.923238</span><br><span class="line">Epoch: 5000 cost = 1.614998</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 可视化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, label <span class="keyword">in</span> enumerate(word_list):</span><br><span class="line">    W, WT = model.parameters()</span><br><span class="line">    x,y = float(W[i][<span class="number">0</span>]), float(W[i][<span class="number">1</span>])</span><br><span class="line">    plt.scatter(x, y)</span><br><span class="line">    plt.annotate(label, xy=(x, y), xytext=(<span class="number">5</span>, <span class="number">2</span>), textcoords=<span class="string">'offset points'</span>, ha=<span class="string">'right'</span>, va=<span class="string">'bottom'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Skip-Gram%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87/skip-gram.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkipGram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习之CNN笔记</title>
      <link href="/post/f4e09fe1.html"/>
      <url>/post/f4e09fe1.html</url>
      
        <content type="html"><![CDATA[<h1 id="卷积神经网络"><a class="markdownIt-Anchor" href="#卷积神经网络"></a> 卷积神经网络</h1><h2 id="整体结构"><a class="markdownIt-Anchor" href="#整体结构"></a> 整体结构</h2><p>在MLP中，相邻层的所有神经元之间都有连接，这称为全连接（fully-connected）。另外，我们用Affine层实现了全连接层。如果使用这个Affine层，一个5层的全连接的神经网络就可以通过图1所示的网络结 构来实现。</p><p>如图1所示，全连接的神经网络中， Affine层后面跟着激活函数ReLU 层（或者 Sigmoid 层）。这里堆叠了 4 层“Affine-ReLU”组合，然后第 5 层是 Affine层， 最后由Softmax层输出最终结果（概率）。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE1.png" alt="基于全连接层（Aﬃne层）的网络的例子"></p><p>图2是CNN的一个例子。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE2.png" alt="基于CNN的网络的例子：新增了Convolution层和Pooling层（用灰色的方块表示）"></p><p>如 图 2 所 示， CNN 中 新 增 了 Convolution 层 和 Pooling 层。 CNN 的 层的连接顺序是“Convolution - ReLU - （ Pooling） ”（Pooling 层有时会被省 略）。这可以理解为之前的“Affi ne - ReLU” 连接被替换成 了“Convolution ReLU - （ Pooling） ”连接。</p><p>还需要注意的是，在图 2 的 CNN 中，靠近输出的层中使用了之前 的“Affi ne - ReLU” 组合。此外，最后的输出层中使用了之前的“Affi ne Softmax” 组合。这些都是一般的CNN中比较常见的结构。</p><p> </p><hr><h2 id="卷积层"><a class="markdownIt-Anchor" href="#卷积层"></a> 卷积层</h2><h3 id="全连接层存在的问题"><a class="markdownIt-Anchor" href="#全连接层存在的问题"></a> 全连接层存在的问题</h3><p>全连接的神经网络中使用了全连接层（Affine层）。在全连接 层中，相邻层的神经元全部连接在一起，输出的数量可以任意决定。</p><p>**全连接层存在什么问题呢？那就是数据的形状被“忽视”了。比如，输入数据是图像时，图像通常是高、长、通道方向上的3维形状。但是，向全连接层输入时，需要将3维数据拉平为1维数据。**实际上，前面提到的使用 了 MNIST 数据集的例子中，输入图像就是 1 通道、高 28 像素、长 28 像素 的（1, 28, 28）形状，但却被排成1列，以784个数据的形式输入到最开始的 Affine层。</p><p>图像是3维形状，这个形状中应该含有重要的空间信息。比如，空间上邻近的像素为相似的值、RBG的各个通道之间分别有密切的关联性、相距 较远的像素之间没有什么关联等，3维形状中可能隐藏有值得提取的本质模 式。但是，因为全连接层会忽视形状，将全部的输入数据作为相同的神经元 （同一维度的神经元）处理，所以无法利用与形状相关的信息。</p><p>而<strong>卷积层可以保持形状不变。当输入数据是图像时，卷积层会以 3 维数据的形式接收输入数据，并同样以3 维数据的形式输出至下一层。因此， 在CNN 中，可以（有可能）正确理解图像等具有形状的数据。</strong></p><p>另外， CNN 中，有时将卷积层的输入输出数据称为特征图（feature map） 。其中，卷积层的输入数据称为输入特征图（input feature map） ，输出 数据称为输出特征图（output feature map） 。</p><p> </p><h3 id="卷积运算"><a class="markdownIt-Anchor" href="#卷积运算"></a> 卷积运算</h3><p>卷积层进行的处理就是卷积运算。卷积运算相当于图像处理中的“滤波 器运算”。在介绍卷积运算时，我们来看一个具体的例子。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE3.png" alt="图3.卷积运算的例子"></p><p>其中那个（一个圈里面一个*号）符号表示卷积运算。</p><p>如图3所示，卷积运算对输入数据应用滤波器。在这个例子中，输入数据是有高长方向的形状的数据，滤波器也一样，有高长方向上的维度。假设用（height, width） 表示数据和滤波器的形状，则在本例中，输入大小是 (4, 4)，滤波器大小是(3, 3)，输出大小是(2, 2)。另外，有的文献中也会用“核” 这个词来表示这里所说的“滤波器”。</p><p>对于输入数据，卷积运算以一定间隔滑动滤波器的窗口并应用。这里所 说的窗口是指图4中灰色的3 × 3的部分。如图4所示，将各个位置上滤 波器的元素和输入的对应元素相乘，然后再求和（有时将这个计算称为乘积 累加运算）。然后，将这个结果保存到输出的对应位置。将这个过程在所有 位置都进行一遍，就可以得到卷积运算的输出。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE4-1.png" alt="图4-1.卷积运算的计算顺序"></p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE4-2.png" alt="图4-2.卷积运算的计算顺序"></p><p>在全连接的神经网络中，除了权重参数，还存在偏置。 CNN中， 滤波 器的参数就对应之前的权重。并且， CNN中也存在偏置。 图3的卷积运算 的例子一直展示到了应用滤波器的阶段。包含偏置的卷积运算的处理流如图 5所示。</p><p>如图5所示，向应用了滤波器的数据加上了偏置。偏置通常只有1个 （1 × 1）（本例中，相对于应用了滤波器的4个数据，偏置只有1个），这个值 会被加到应用了滤波器的所有元素上。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE5.png" alt="图5"></p><p> </p><h3 id="填充"><a class="markdownIt-Anchor" href="#填充"></a> 填充</h3><p>在进行卷积层的处理之前，有时要向输入数据的周围填入固定的数据（比 如0等），这称为填充（padding），是卷积运算中经常会用到的处理。比如， 在图6的例子中，对大小为(4, 4)的输入数据应用了幅度为1的填充。“幅 度为1的填充”是指用幅度为1像素的0填充周围。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE6.png" alt="图6"></p><p>卷积运算的填充处理：向输入数据的周围填入0（图中用虚线表示填充，并省略了 填充的内容“0”）</p><p>如图6所示，通过填充，大小为(4, 4)的输入数据变成了(6, 6)的形状。 然后，应用大小为(3, 3)的滤波器，生成了大小为(4, 4)的输出数据。这个例 子中将填充设成了1，不过填充的值也可以设置成2、3等任意的整数。在图5 的例子中，如果将填充设为2，则输入数据的大小变为(8, 8)；如果将填充设 为3，则大小变为(10, 10)。</p><p>**使用填充主要是为了调整输出的大小。<strong>比如，对大小为(4, 4)的输入 数据应用(3, 3)的滤波器时， 输出大小变为(2, 2)， 相当于输出大小 比输入大小缩小了2个元素。这在反复进行多次卷积运算的深度网 络中会成为问题。为什么呢？因为</strong>如果每次进行卷积运算都会缩小 空间，那么在某个时刻输出大小就有可能变为1，导致无法再应用 卷积运算。**为了避免出现这样的情况，就要使用填充。在刚才的例 子中，将填充的幅度设为1，那么相对于输入大小(4, 4)， 输出大小 也保持为原来的(4, 4)。 因此，卷积运算就可以在保持空间大小不变 的情况下将数据传给下一层。</p><p> </p><h3 id="步幅"><a class="markdownIt-Anchor" href="#步幅"></a> 步幅</h3><p>应用滤波器的位置间隔称为步幅（stride）。之前的例子中步幅都是1，如 果将步幅设为2，则如图7所示，应用滤波器的窗口的间隔变为2个元素。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE7.png" alt="图7.步幅为2的卷积运算的例子"></p><p>在图7的例子中，对输入大小为(7, 7)的数据，以步幅2应用了滤波器。 通过将步幅设为2，输出大小变为(3, 3)。像这样，步幅可以指定应用滤波器 的间隔。</p><p>综上，增大步幅后，输出大小会变小。而增大填充后，输出大小会变大。 如果将这样的关系写成算式，会如何呢？接下来，我们看一下对于填充和步 幅，如何计算输出大小。</p><p>这里，假设输入大小为(H, W)，滤波器大小为(FH, FW)，输出大小为 (OH, OW)，填充为P，步幅为S。此时，输出大小可通过以下公式进行计算。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>H</mi><mo>=</mo><mfrac><mrow><mi>H</mi><mo>+</mo><mn>2</mn><mi>P</mi><mo>−</mo><mi>F</mi><mi>H</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mi>O</mi><mi>W</mi><mo>=</mo><mfrac><mrow><mi>H</mi><mo>+</mo><mn>2</mn><mi>P</mi><mo>−</mo><mi>F</mi><mi>W</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">OH=\frac{H+2P-FH}{S}+1 \\OW=\frac{H+2P-FW}{S}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>现在，我们使用这个算式，试着做几个计算。</p><p><strong>例1：图6的例子</strong></p><p>输入大小：(4, 4)；填充：1；步幅：1；滤波器大小：(3, 3)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>H</mi><mo>=</mo><mfrac><mrow><mn>4</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>1</mn><mo>−</mo><mn>3</mn></mrow><mn>1</mn></mfrac><mo>+</mo><mn>1</mn><mo>=</mo><mn>4</mn><mspace linebreak="newline"></mspace><mi>O</mi><mi>W</mi><mo>=</mo><mfrac><mrow><mn>4</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>1</mn><mo>−</mo><mn>3</mn></mrow><mn>1</mn></mfrac><mo>+</mo><mn>1</mn><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">OH=\frac{4+2*1-3}{1}+1=4 \\OW=\frac{4+2*1-3}{1}+1=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span></span></p><p><strong>例2：图7的例子</strong></p><p>输入大小：(7, 7)；填充：0；步幅：2；滤波器大小：(3, 3)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>H</mi><mo>=</mo><mfrac><mrow><mn>7</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>0</mn><mo>−</mo><mn>3</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn><mo>=</mo><mn>3</mn><mspace linebreak="newline"></mspace><mi>O</mi><mi>W</mi><mo>=</mo><mfrac><mrow><mn>7</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>0</mn><mo>−</mo><mn>3</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">OH=\frac{7+2*0-3}{2}+1=3 \\OW=\frac{7+2*0-3}{2}+1=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span></span></p><p><strong>例3</strong></p><p>输入大小：(28, 31)；填充：2；步幅：3；滤波器大小：(5, 5)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>H</mi><mo>=</mo><mfrac><mrow><mn>28</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mo>−</mo><mn>5</mn></mrow><mn>3</mn></mfrac><mo>+</mo><mn>1</mn><mo>=</mo><mn>10</mn><mspace linebreak="newline"></mspace><mi>O</mi><mi>W</mi><mo>=</mo><mfrac><mrow><mn>31</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mo>−</mo><mn>5</mn></mrow><mn>3</mn></mfrac><mo>+</mo><mn>1</mn><mo>=</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">OH=\frac{28+2*2-5}{3}+1=10 \\OW=\frac{31+2*2-5}{3}+1=11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span></span></p><p>如这些例子所示，通过在上述公式中代入值，就可以计算输出大小。这 里需要注意的是，虽然只要代入值就可以计算输出大小，但是所设定的值必 须使公式中的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>H</mi><mo>+</mo><mn>2</mn><mi>P</mi><mo>−</mo><mi>F</mi><mi>H</mi></mrow><mi>S</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{H+2P-FH}{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>H</mi><mo>+</mo><mn>2</mn><mi>P</mi><mo>−</mo><mi>F</mi><mi>W</mi></mrow><mi>S</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{H+2P-FW}{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>分别可以除尽。当输出大小无法 除尽时（结果是小数时），需要采取报错等对策。顺便说一下，根据深度学习 的框架的不同，当值无法除尽时，有时会向最接近的整数四舍五入，不进行 报错而继续运行。</p><p> </p><h3 id="3维数据的卷积运算"><a class="markdownIt-Anchor" href="#3维数据的卷积运算"></a> 3维数据的卷积运算</h3><p>之前的卷积运算的例子都是以有高、长方向的2维形状为对象的。但是， 图像是3维数据，除了高、长方向之外，还需要处理通道方向。这里，我们按 照与之前相同的顺序，看一下对加上了通道方向的3维数据进行卷积运算的例子。</p><p>图8是卷积运算的例子，图9是计算顺序。这里以3通道的数据为例， 展示了卷积运算的结果。和2维数据时（图3的例子）相比，可以发现纵深 方向（通道方向）上特征图增加了。通道方向上有多个特征图时，会按通道 进行输入数据和滤波器的卷积运算，并将结果相加，从而得到输出。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE8.png" alt="图8.对3维数据进行卷积运算的例子"></p><p>下面是3维数据进行卷积运算的计算顺序。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE9-1.png" alt="图9-1"></p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE9-2.png" alt="图9-2"></p><p>需要注意的是，在3维数据的卷积运算中，输入数据和滤波器的通道数 要设为相同的值。在这个例子中，输入数据和滤波器的通道数一致，均为3。 滤波器大小可以设定为任意值（不过，每个通道的滤波器大小要全部相同）。 这个例子中滤波器大小为(3, 3)，但也可以设定为(2, 2)、(1, 1)、(5, 5)等任 意值。再强调一下，<strong>通道数只能设定为和输入数据的通道数相同的值</strong>（本例 中为3）。</p><p> </p><h3 id="结合方块思考"><a class="markdownIt-Anchor" href="#结合方块思考"></a> 结合方块思考</h3><p>将数据和滤波器结合长方体的方块来考虑，3维数据的卷积运算会很 容易理解。方块是如图10所示的3维长方体。<strong>把3维数据表示为多维数组时，书写顺序为（channel, height, width）</strong> 。比如，通道数为 C、高度为 H、 长度为W的数据的形状可以写成（C, H, W） 。<strong>滤波器也一样，要按（channel, height, width） 的顺序书写</strong>。比如，通道数为 C、滤波器高度为 FH （Filter Height） 、长度为FW（Filter Width） 时，可以写成（C, FH, FW） 。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE10.png" alt="图10.结合方块思考卷积运算。请注意方块的形状"></p><p>在这个例子中，数据输出是1张特征图。所谓1张特征图，换句话说， 就是通道数为1的特征图。那么，如果要在通道方向上也拥有多个卷积运算的输出，该怎么做呢？为此，就需要用到多个滤波器（权重）。用图表示的话， 如图11所示。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE11.png" alt="图11.基于多个滤波器的卷积运算的例子"></p><p>图11中，通过应用FN个滤波器，输出特征图也生成了FN个。如果 将这FN个特征图汇集在一起，就得到了形状为(FN, OH, OW)的方块。将 这个方块传给下一层，就是CNN的处理流。</p><p>如图 11 所示，关于卷积运算的滤波器，也必须考虑滤波器的数量。因此，作为4维数据，滤波器的权重数据要按(output_channel, input_ channel, height, width) 的顺序书写。比如，通道数为 3、大小为 5 × 5 的滤波器有20个时，可以写成(20, 3, 5, 5)。</p><p>卷积运算中（和全连接层一样）存在偏置。在图11的例子中，如果进 一步追加偏置的加法运算处理，则结果如下面的图12所示。</p><p>图 12 中，每个通道只有一个偏置。这里，偏置的形状是 (FN, 1, 1)， 滤波器的输出结果的形状是(FN, OH, OW)。这两个方块相加时，要对滤波 器的输出结果(FN, OH, OW)按通道加上相同的偏置值。另外，不同形状的 方块相加时，可以基于NumPy的广播功能轻松实现。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE12.png" alt="图12.卷积运算的处理流（追加了偏置项）"></p><p> </p><h3 id="批处理"><a class="markdownIt-Anchor" href="#批处理"></a> 批处理</h3><p>神经网络的处理中进行了将输入数据打包的批处理。之前的全连接神经 网络的实现也对应了批处理，通过批处理，能够实现处理的高效化和学习时 对mini-batch的对应。</p><p>我们希望卷积运算也同样对应批处理。为此，需要将在各层间传递的数 据保存为4维数据。具体地讲，就是按(batch_num, channel, height, width) 的顺序保存数据。比如，将图12中的处理改成对N个数据进行批处理时， 数据的形状如图13所示。</p><p>图13的批处理版的数据流中，在各个数据的开头添加了批用的维度。 像这样，数据作为4维的形状在各层间传递。这里需要注意的是，网络间传 递的是4维数据，对这N个数据进行了卷积运算。也就是说，批处理将N次 的处理汇总成了1次进行。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE13.png" alt="图13.卷积运算的处理流（批处理）"></p><p> </p><hr><h2 id="池化层"><a class="markdownIt-Anchor" href="#池化层"></a> 池化层</h2><p>池化是缩小高、长方向上的空间的运算。比如，如图14所示，进行将 2 × 2的区域集约成1个元素的处理，缩小空间大小。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE14.png" alt="图14.Max池化的处理顺序"></p><p>图14的例子是按步幅2进行2 × 2的Max池化时的处理顺序。“Max 池化”是获取最大值的运算，“2 × 2”表示目标区域的大小。如图所示，从 2 × 2的区域中取出最大的元素。此外，这个例子中将步幅设为了2，所以 2 × 2的窗口的移动间隔为2个元素。另外，一般来说，池化的窗口大小会 和步幅设定成相同的值。比如，3 × 3的窗口的步幅会设为3，4 × 4的窗口 的步幅会设为4等。</p><p>除了Max池化之外，还有Average池化等。相对于Max池化是从 目标区域中取出最大值，Average池化则是计算目标区域的平均值。 在图像识别领域，主要使用Max池化。</p><p><strong>池化层的特征</strong></p><ul><li><p><strong>没有要学习的参数</strong></p><p>池化层和卷积层不同，没有要学习的参数。池化只是从目标区域中取最大值（或者平均值），所以不存在要学习的参数。</p></li><li><p><strong>通道数不发生变化</strong></p><p>经过池化运算，输入数据和输出数据的通道数不会发生变化。如图15 所示，计算是按通道独立进行的。</p></li></ul><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE15.png" alt="图15.池化中通道数不变"></p><ul><li><p><strong>对微小的位置变化具有鲁棒性（健壮）</strong></p><p>输入数据发生微小偏差时，池化仍会返回相同的结果。因此，池化对 输入数据的微小偏差具有鲁棒性。比如，3 × 3的池化的情况下，如图 16 所示，池化会吸收输入数据的偏差（根据数据的不同，结果有可 能不一致）。</p></li></ul><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/CNN%E5%9B%BE/%E5%9B%BE16.png" alt="图16"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-IMDB电影评论情感分析</title>
      <link href="/post/a5b86241.html"/>
      <url>/post/a5b86241.html</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch-情感分析"><a class="markdownIt-Anchor" href="#pytorch-情感分析"></a> Pytorch-情感分析</h1><h2 id="第一步导入imdb电影数据集只有训练集和测试集"><a class="markdownIt-Anchor" href="#第一步导入imdb电影数据集只有训练集和测试集"></a> 第一步：导入IMDB电影数据集，只有训练集和测试集</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torchtext <span class="keyword">import</span> data</span><br><span class="line"></span><br><span class="line">SEED = <span class="number">1234</span></span><br><span class="line"></span><br><span class="line">torch.manual_seed(SEED)  <span class="comment"># 为CPU设置随机种子</span></span><br><span class="line">torch.cuda.manual_seed(SEED)  <span class="comment">#为GPU设置随机种子</span></span><br><span class="line"><span class="comment"># 在程序刚开始加这条语句可以提升一点训练速度，没什么额外开销</span></span><br><span class="line">torch.backends.cudnn.deterministic = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先，我们要创建两个Field 对象：这两个对象包含了我们打算如何预处理文本数据的信息。</span></span><br><span class="line"><span class="comment"># spaCy:英语分词器,类似于NLTK库，如果没有传递tokenize参数，则默认只是在空格上拆分字符串。</span></span><br><span class="line"><span class="comment"># torchtext.data.Field : 用来定义字段的处理方法（文本字段，标签字段）</span></span><br><span class="line">TEXT = data.Field(tokenize=<span class="string">'spacy'</span>)</span><br><span class="line"><span class="comment">#LabelField是Field类的一个特殊子集，专门用于处理标签。 </span></span><br><span class="line">LABEL = data.LabelField(dtype=torch.float)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载IMDB电影评论数据集</span></span><br><span class="line"><span class="keyword">from</span> torchtext <span class="keyword">import</span> datasets</span><br><span class="line">train_data, test_data = datasets.IMDB.splits(TEXT, LABEL)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">downloading aclImdb_v1.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aclImdb_v1.tar.gz: 100%|██████████| 84.1M/84.1M [00:07&lt;00:00, 11.1MB/s]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看数据集</span></span><br><span class="line">print(vars(train_data.examples[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&apos;text&apos;: [&apos;This&apos;, &apos;is&apos;, &apos;one&apos;, &apos;of&apos;, &apos;the&apos;, &apos;finest&apos;, &apos;films&apos;, &apos;to&apos;, &apos;come&apos;, &apos;out&apos;, &apos;of&apos;, &apos;Hong&apos;, &apos;Kong&apos;, &quot;&apos;s&quot;, &quot;&apos;&quot;, &apos;New&apos;, &apos;Wave&apos;, &quot;&apos;&quot;, &apos;that&apos;, &apos;began&apos;, &apos;with&apos;, &apos;Tsui&apos;, &apos;Hark&apos;, &quot;&apos;s&quot;, &apos;&quot;&apos;, &apos;ZU&apos;, &apos;:&apos;, &apos;Warriors&apos;, &apos;of&apos;, &apos;Magic&apos;, &apos;Mountain&apos;, &apos;&quot;&apos;, &apos;.&apos;, &apos;Tsui&apos;, &apos;set&apos;, &apos;a&apos;, &apos;tone&apos;, &apos;for&apos;, &apos;the&apos;, &apos;New&apos;, &apos;Wave&apos;, &quot;&apos;s&quot;, &apos;approach&apos;, &apos;to&apos;, &apos;the&apos;, &apos;martial&apos;, &apos;arts&apos;, &apos;film&apos;, &apos;that&apos;, &apos;pretty&apos;, &apos;much&apos;, &apos;all&apos;, &apos;the&apos;, &apos;directors&apos;, &apos;of&apos;, &apos;the&apos;, &apos;New&apos;, &apos;Wave&apos;, &apos;(&apos;, &apos;Jackie&apos;, &apos;Chan&apos;, &apos;,&apos;, &apos;Sammo&apos;, &apos;Hung&apos;, &apos;,&apos;, &apos;Wong&apos;, &apos;Jing&apos;, &apos;,&apos;, &apos;Ching&apos;, &apos;Siu&apos;, &apos;Tung&apos;, &apos;,&apos;, &apos;etc&apos;, &apos;.&apos;, &apos;)&apos;, &apos;accepted&apos;, &apos;from&apos;, &apos;then&apos;, &apos;on&apos;, &apos;as&apos;, &apos;a&apos;, &apos;given&apos;, &apos;;&apos;, &apos;namely&apos;, &apos;,&apos;, &apos;the&apos;, &apos;approach&apos;, &apos;to&apos;, &apos;such&apos;, &apos;films&apos;, &apos;thenceforth&apos;, &apos;would&apos;, &apos;need&apos;, &apos;more&apos;, &apos;than&apos;, &apos;a&apos;, &apos;touch&apos;, &apos;of&apos;, &apos;irony&apos;, &apos;,&apos;, &apos;if&apos;, &apos;not&apos;, &apos;outright&apos;, &apos;comedy&apos;, &apos;.&apos;, &apos;&quot;&apos;, &apos;Burning&apos;, &apos;Paradise&apos;, &apos;&quot;&apos;, &apos;put&apos;, &apos;a&apos;, &apos;stop&apos;, &apos;to&apos;, &apos;all&apos;, &apos;that&apos;, &apos;,&apos;, &apos;and&apos;, &apos;with&apos;, &apos;a&apos;, &apos;vengeance.&lt;br&apos;, &apos;/&gt;&lt;br&apos;, &apos;/&gt;It&apos;, &quot;&apos;s&quot;, &apos;not&apos;, &apos;that&apos;, &apos;there&apos;, &apos;is&apos;, &quot;n&apos;t&quot;, &apos;humor&apos;, &apos;here&apos;, &apos;;&apos;, &apos;but&apos;, &apos;it&apos;, &apos;is&apos;, &apos;a&apos;, &apos;purely&apos;, &apos;human&apos;, &apos;humor&apos;, &apos;,&apos;, &apos;as&apos;, &apos;with&apos;, &apos;the&apos;, &apos;aged&apos;, &apos;Buddhist&apos;, &apos;priest&apos;, &apos;at&apos;, &apos;the&apos;, &apos;beginning&apos;, &apos;who&apos;, &apos;somehow&apos;, &apos;manages&apos;, &apos;a&apos;, &apos;quick&apos;, &apos;feel&apos;, &apos;of&apos;, &apos;the&apos;, &apos;nubile&apos;, &apos;young&apos;, &apos;prostitute&apos;, &apos;while&apos;, &apos;hiding&apos;, &apos;in&apos;, &apos;a&apos;, &apos;bundle&apos;, &apos;of&apos;, &apos;straw&apos;, &apos;.&apos;, &apos;But&apos;, &apos;this&apos;, &apos;is&apos;, &apos;just&apos;, &apos;as&apos;, &apos;humans&apos;, &apos;are&apos;, &apos;,&apos;, &apos;not&apos;, &apos;even&apos;, &apos;Buddhist&apos;, &apos;priests&apos;, &apos;can&apos;, &apos;be&apos;, &apos;saints&apos;, &apos;all&apos;, &apos;the&apos;, &apos;time.&lt;br&apos;, &apos;/&gt;&lt;br&apos;, &apos;/&gt;When&apos;, &apos;irony&apos;, &apos;is&apos;, &apos;at&apos;, &apos;last&apos;, &apos;introduced&apos;, &apos;into&apos;, &apos;the&apos;, &apos;film&apos;, &apos;,&apos;, &apos;it&apos;, &apos;is&apos;, &apos;the&apos;, &apos;nastiest&apos;, &apos;possible&apos;, &apos;,&apos;, &apos;emanating&apos;, &apos;from&apos;, &apos;the&apos;, &quot;&apos;&quot;, &apos;abbot&apos;, &quot;&apos;&quot;, &apos;of&apos;, &apos;Red&apos;, &apos;Lotus&apos;, &apos;Temple&apos;, &apos;,&apos;, &apos;who&apos;, &apos;is&apos;, &apos;a&apos;, &apos;study&apos;, &apos;in&apos;, &apos;pure&apos;, &apos;nihilism&apos;, &apos;such&apos;, &apos;as&apos;, &apos;has&apos;, &apos;never&apos;, &apos;been&apos;, &apos;recorded&apos;, &apos;on&apos;, &apos;film&apos;, &apos;before&apos;, &apos;.&apos;, &apos;He&apos;, &apos;is&apos;, &apos;the&apos;, &apos;very&apos;, &apos;incarnation&apos;, &apos;of&apos;, &apos;Milton&apos;, &quot;&apos;s&quot;, &apos;Satan&apos;, &apos;from&apos;, &apos;&quot;&apos;, &apos;Paradise&apos;, &apos;Lost&apos;, &apos;&quot;&apos;, &apos;:&apos;, &apos;&quot;&apos;, &apos;Better&apos;, &apos;to&apos;, &apos;rule&apos;, &apos;in&apos;, &apos;Hell&apos;, &apos;than&apos;, &apos;serve&apos;, &apos;in&apos;, &apos;heaven&apos;, &apos;!&apos;, &apos;&quot;&apos;, &apos;And&apos;, &apos;if&apos;, &apos;he&apos;, &apos;ca&apos;, &quot;n&apos;t&quot;, &apos;get&apos;, &apos;to&apos;, &apos;Satan&apos;, &quot;&apos;s&quot;, &apos;hell&apos;, &apos;soon&apos;, &apos;enough&apos;, &apos;,&apos;, &apos;he&apos;, &quot;&apos;ll&quot;, &apos;turn&apos;, &apos;the&apos;, &apos;world&apos;, &apos;around&apos;, &apos;him&apos;, &apos;into&apos;, &apos;a&apos;, &apos;living&apos;, &apos;hell&apos;, &apos;he&apos;, &apos;can&apos;, &apos;rule.&lt;br&apos;, &apos;/&gt;&lt;br&apos;, &apos;/&gt;That&apos;, &quot;&apos;s&quot;, &apos;the&apos;, &apos;motif&apos;, &apos;underscoring&apos;, &apos;the&apos;, &apos;brutal&apos;, &apos;violence&apos;, &apos;of&apos;, &apos;much&apos;, &apos;of&apos;, &apos;the&apos;, &apos;imagery&apos;, &apos;here&apos;, &apos;:&apos;, &apos;It&apos;, &quot;&apos;s&quot;, &apos;not&apos;, &apos;that&apos;, &apos;the&apos;, &apos;Abbot&apos;, &apos;just&apos;, &apos;wants&apos;, &apos;to&apos;, &apos;kill&apos;, &apos;people&apos;, &apos;;&apos;, &apos;he&apos;, &apos;wants&apos;, &apos;them&apos;, &apos;to&apos;, &apos;despair&apos;, &apos;,&apos;, &apos;to&apos;, &apos;feel&apos;, &apos;utterly&apos;, &apos;hopeless&apos;, &apos;,&apos;, &apos;to&apos;, &apos;accept&apos;, &apos;his&apos;, &apos;nihilism&apos;, &apos;as&apos;, &apos;all&apos;, &apos;-&apos;, &apos;encompassing&apos;, &apos;reality&apos;, &apos;.&apos;, &apos;Thus&apos;, &apos;there&apos;, &quot;&apos;s&quot;, &apos;a&apos;, &apos;definite&apos;, &apos;sense&apos;, &apos;pervading&apos;, &apos;the&apos;, &apos;Red&apos;, &apos;Temple&apos;, &apos;scenes&apos;, &apos;that&apos;, &apos;there&apos;, &apos;just&apos;, &apos;might&apos;, &apos;not&apos;, &apos;be&apos;, &apos;any&apos;, &apos;other&apos;, &apos;reality&apos;, &apos;outside&apos;, &apos;of&apos;, &apos;the&apos;, &apos;Temple&apos;, &apos;itself&apos;, &apos;-&apos;, &apos;it&apos;, &apos;has&apos;, &apos;become&apos;, &apos;all&apos;, &apos;there&apos;, &apos;is&apos;, &apos;to&apos;, &apos;the&apos;, &apos;universe&apos;, &apos;,&apos;, &apos;and&apos;, &apos;the&apos;, &apos;Abbot&apos;, &apos;,&apos;, &apos;claiming&apos;, &apos;mastery&apos;, &apos;of&apos;, &apos;infinite&apos;, &apos;power&apos;, &apos;,&apos;, &apos;is&apos;, &apos;in&apos;, &apos;charge.&lt;br&apos;, &apos;/&gt;&lt;br&apos;, &apos;/&gt;Of&apos;, &apos;course&apos;, &apos;,&apos;, &apos;fortunately&apos;, &apos;,&apos;, &apos;the&apos;, &apos;film&apos;, &apos;does&apos;, &quot;n&apos;t&quot;, &apos;end&apos;, &apos;there&apos;, &apos;.&apos;, &apos;Though&apos;, &apos;there&apos;, &apos;are&apos;, &apos;losses&apos;, &apos;,&apos;, &apos;the&apos;, &apos;human&apos;, &apos;will&apos;, &apos;to&apos;, &apos;be&apos;, &apos;just&apos;, &apos;ordinarily&apos;, &apos;human&apos;, &apos;at&apos;, &apos;last&apos;, &apos;prevails&apos;, &apos;.&apos;, &apos;(&apos;, &apos;If&apos;, &apos;you&apos;, &apos;want&apos;, &apos;to&apos;, &apos;know&apos;, &apos;how&apos;, &apos;,&apos;, &apos;see&apos;, &apos;the&apos;, &apos;film&apos;, &apos;!&apos;, &apos;)&apos;, &apos;Yet&apos;, &apos;there&apos;, &apos;is&apos;, &apos;no&apos;, &apos;doubt&apos;, &apos;that&apos;, &apos;,&apos;, &apos;in&apos;, &apos;viewing&apos;, &apos;this&apos;, &apos;film&apos;, &apos;,&apos;, &apos;we&apos;, &apos;visit&apos;, &apos;hell&apos;, &apos;.&apos;, &apos;Hopefully&apos;, &apos;,&apos;, &apos;we&apos;, &apos;do&apos;, &apos;not&apos;, &apos;witness&apos;, &apos;our&apos;, &apos;own&apos;, &apos;afterlives&apos;, &apos;;&apos;, &apos;but&apos;, &apos;we&apos;, &apos;certainly&apos;, &apos;feel&apos;, &apos;chastened&apos;, &apos;by&apos;, &apos;the&apos;, &apos;experience&apos;, &apos;-&apos;, &apos;and&apos;, &apos;somehow&apos;, &apos;better&apos;, &apos;for&apos;, &apos;it&apos;, &apos;over&apos;, &apos;all&apos;, &apos;.&apos;], &apos;label&apos;: &apos;pos&apos;&#125;</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第二步将训练集划分为训练集和验证集"><a class="markdownIt-Anchor" href="#第二步将训练集划分为训练集和验证集"></a> 第二步：将训练集划分为训练集和验证集</h2><ol><li>由于我们现在只有train/test这两个分类，所以我们需要创建一个新的validation set。我们可以使用.split()创建新的分类。</li><li>默认的数据分割是 70、30，如果我们声明split_ratio，可以改变split之间的比例，split_ratio=0.8表示80%的数据是训练集，20%是验证集。</li><li>我们还声明random_state这个参数，确保我们每次分割的数据集都是一样的。</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认split_ratio=0.7</span></span><br><span class="line">train_data, valid_data = train_data.split(random_state=random.seed(SEED))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">f'Number of training examples: <span class="subst">&#123;len(train_data)&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'Number of validation examples: <span class="subst">&#123;len(valid_data)&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'Number of testing examples: <span class="subst">&#123;len(test_data)&#125;</span>'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Number of training examples: 17500</span><br><span class="line">Number of validation examples: 7500</span><br><span class="line">Number of testing examples: 25000</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第三步用训练集建立vocabulary把每个单词映射到一个数字"><a class="markdownIt-Anchor" href="#第三步用训练集建立vocabulary把每个单词映射到一个数字"></a> 第三步：用训练集建立vocabulary，把每个单词映射到一个数字。</h2><ul><li>我们使用最常见的25k个单词来构建我们的单词表，用<code>max_size</code>这个参数可以做到这一点。</li><li>所有其他的单词都用<code>&lt;unk&gt;</code>来表示。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从预训练的词向量（vectors）中，将当前(corpus语料库)词汇表的词向量抽取出来，构成当前 corpus 的 Vocab（词汇表）</span></span><br><span class="line"><span class="comment"># 预训练的 vectors 来自glove模型，每个单词有100维。glove模型训练的词向量参数来自很大的语料库</span></span><br><span class="line"><span class="comment"># 而我们的电影评论的语料库小一点，所以词向量需要更新，glove的词向量适合用做初始化参数。</span></span><br><span class="line">TEXT.build_vocab(train_data, max_size=<span class="number">25000</span>, vectors=<span class="string">"glove.6B.100d"</span>, unk_init=torch.Tensor.normal_)</span><br><span class="line">LABEL.build_vocab(train_data)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.vector_cache/glove.6B.zip: 862MB [00:44, 19.5MB/s]                           </span><br><span class="line">100%|█████████▉| 399664/400000 [00:19&lt;00:00, 20291.20it/s]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">f'Unique tokens in TEXT vocabulary: <span class="subst">&#123;len(TEXT.vocab)&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'Unique tokens in LABEL vocabulary: <span class="subst">&#123;len(LABEL.vocab)&#125;</span>'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Unique tokens in TEXT vocabulary: 25002</span><br><span class="line">Unique tokens in LABEL vocabulary: 2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(LABEL.vocab.itos)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&apos;neg&apos;, &apos;pos&apos;]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(LABEL.vocab.stoi)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaultdict(&lt;function _default_unk_index at 0x7fb5205c2a60&gt;, &#123;&apos;neg&apos;: 0, &apos;pos&apos;: 1&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(TEXT.vocab.stoi)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaultdict(&lt;function _default_unk_index at 0x7fb5205c2a60&gt;, &#123;&apos;&lt;unk&gt;&apos;: 0, &apos;&lt;pad&gt;&apos;: 1, &apos;the&apos;: 2, &apos;,&apos;: 3, &apos;.&apos;: 4, &apos;and&apos;: 5, &apos;a&apos;: 6, &apos;of&apos;: 7, &apos;to&apos;: 8, &apos;is&apos;: 9, &apos;in&apos;: 10, &apos;I&apos;: 11, &apos;it&apos;: 12, &apos;that&apos;: 13, &apos;&quot;&apos;: 14, &quot;&apos;s&quot;: 15, &apos;this&apos;: 16, &apos;-&apos;: 17, &apos;/&gt;&lt;br&apos;: 18, &apos;was&apos;: 19, &apos;as&apos;: 20, &apos;with&apos;: 21, &apos;movie&apos;: 22, &apos;for&apos;: 23, &apos;film&apos;: 24, &apos;The&apos;: 25, &apos;but&apos;: 26, &apos;(&apos;: 27, &apos;)&apos;: 28, &quot;n&apos;t&quot;: 29, &apos;on&apos;: 30, &apos;you&apos;: 31, &apos;are&apos;: 32, &apos;not&apos;: 33, &apos;have&apos;: 34, &apos;his&apos;: 35, &apos;be&apos;: 36, &apos;he&apos;: 37, &apos;one&apos;: 38, &apos;at&apos;: 39, &apos;by&apos;: 40, &apos;all&apos;: 41, &apos;!&apos;: 42, &apos;an&apos;: 43, &apos;who&apos;: 44, &apos;they&apos;: 45, &apos;from&apos;: 46, &apos;like&apos;: 47, &apos;so&apos;: 48, &apos;her&apos;: 49, &quot;&apos;&quot;: 50, &apos;about&apos;: 51, &apos;or&apos;: 52, &apos;has&apos;: 53, &apos;It&apos;: 54, &apos;out&apos;: 55, &apos;just&apos;: 56, &apos;do&apos;: 57, &apos;?&apos;: 58, &apos;some&apos;: 59, &apos;good&apos;: 60, &apos;more&apos;: 61, &apos;very&apos;: 62, &apos;would&apos;: 63, &apos;up&apos;: 64, &apos;what&apos;: 65, &apos;This&apos;: 66, &apos;there&apos;: 67, &apos;time&apos;: 68, &apos;can&apos;: 69, &apos;when&apos;: 70, &apos;which&apos;: 71, &apos;had&apos;: 72, &apos;she&apos;: 73, &apos;if&apos;: 74, &apos;only&apos;: 75, &apos;story&apos;: 76, &apos;really&apos;: 77, &apos;were&apos;: 78, &apos;their&apos;: 79, &apos;see&apos;: 80, &apos;no&apos;: 81, &apos;even&apos;: 82, &apos;my&apos;: 83, &apos;me&apos;: 84, &apos;did&apos;: 85, &apos;does&apos;: 86, &apos;...&apos;: 87, &apos;than&apos;: 88, &apos;:&apos;: 89, &apos;much&apos;: 90, &apos;could&apos;: 91, &apos;been&apos;: 92, &apos;get&apos;: 93, &apos;into&apos;: 94, &apos;we&apos;: 95, &apos;well&apos;: 96, &apos;bad&apos;: 97, &apos;people&apos;: 98, &apos;will&apos;: 99, &apos;because&apos;: 100, ......,&apos;chieftain&apos;: 24995, &apos;child.&lt;br&apos;: 24996, &apos;childbirth&apos;: 24997, &apos;chilly&apos;: 24998, &apos;chime&apos;: 24999, &apos;chinese&apos;: 25000, &apos;chokes&apos;: 25001&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 语料库单词频率越高，索引越靠前。前两个默认为unk和pad。</span></span><br><span class="line">print(TEXT.vocab.itos)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&apos;&lt;unk&gt;&apos;, &apos;&lt;pad&gt;&apos;, &apos;the&apos;, &apos;,&apos;, &apos;.&apos;, &apos;and&apos;, &apos;a&apos;, &apos;of&apos;, &apos;to&apos;, &apos;is&apos;, &apos;in&apos;, &apos;I&apos;, &apos;it&apos;, &apos;that&apos;, &apos;&quot;&apos;, &quot;&apos;s&quot;, &apos;this&apos;, &apos;-&apos;, &apos;/&gt;&lt;br&apos;, &apos;was&apos;, &apos;as&apos;, &apos;with&apos;, &apos;movie&apos;, &apos;for&apos;, &apos;film&apos;, &apos;The&apos;, &apos;but&apos;, &apos;(&apos;, &apos;)&apos;, &quot;n&apos;t&quot;, &apos;on&apos;, &apos;you&apos;, &apos;are&apos;, &apos;not&apos;, &apos;have&apos;, &apos;his&apos;, &apos;be&apos;, &apos;he&apos;, &apos;one&apos;, &apos;at&apos;, &apos;by&apos;, &apos;all&apos;, &apos;!&apos;, &apos;an&apos;, &apos;who&apos;, &apos;they&apos;, &apos;from&apos;, &apos;like&apos;, &apos;so&apos;, &apos;her&apos;, &quot;&apos;&quot;, &apos;about&apos;, &apos;or&apos;, &apos;has&apos;, &apos;It&apos;, &apos;out&apos;, &apos;just&apos;, &apos;do&apos;, &apos;?&apos;, &apos;some&apos;, &apos;good&apos;, &apos;more&apos;, &apos;very&apos;, &apos;would&apos;, &apos;up&apos;, &apos;what&apos;, &apos;This&apos;, &apos;there&apos;, &apos;time&apos;, &apos;can&apos;, &apos;when&apos;, &apos;which&apos;, &apos;had&apos;, &apos;she&apos;, &apos;if&apos;, &apos;only&apos;, &apos;story&apos;,....... ]</span><br></pre></td></tr></table></figure><p>25002多出来的2就是<code>&lt;unk&gt;</code>和<code>&lt;pad&gt;</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(TEXT.vocab.freqs.most_common(<span class="number">20</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[(&apos;the&apos;, 200806), (&apos;,&apos;, 190507), (&apos;.&apos;, 163859), (&apos;and&apos;, 108678), (&apos;a&apos;, 108379), (&apos;of&apos;, 99904), (&apos;to&apos;, 92850), (&apos;is&apos;, 75910), (&apos;in&apos;, 60829), (&apos;I&apos;, 54227), (&apos;it&apos;, 53199), (&apos;that&apos;, 48835), (&apos;&quot;&apos;, 43297), (&quot;&apos;s&quot;, 42758), (&apos;this&apos;, 41960), (&apos;-&apos;, 36735), (&apos;/&gt;&lt;br&apos;, 35706), (&apos;was&apos;, 34813), (&apos;as&apos;, 29872), (&apos;with&apos;, 29443)]</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第四步创建iterators每个iteration都会返回一个batch的样本"><a class="markdownIt-Anchor" href="#第四步创建iterators每个iteration都会返回一个batch的样本"></a> 第四步：创建iterators，每个iteration都会返回一个batch的样本。</h2><ul><li>我们会使用<code>BucketIterator</code>。<code>BucketIterator</code>会把长度差不多的句子放到同一个batch中，确保每个batch中不出现太多的padding。</li><li>严格来说，我们这份notebook中的模型代码都有一个问题，也就是我们把<code>&lt;pad&gt;</code>也当做了模型的输入进行训练。更好的做法是在模型中把由<code>&lt;pad&gt;</code>产生的输出给消除掉。在这这里我们简单处理，直接把<code>&lt;pad&gt;</code>也用作模型输入了。由于<code>&lt;pad&gt;</code>数量不多，模型的效果也不差。</li><li>如果我们有GPU，还可以指定每个iteration返回的tensor都在GPU上。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">BATCH_SIZE = <span class="number">64</span></span><br><span class="line"></span><br><span class="line">device = torch.device(<span class="string">'cuda'</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">'cpu'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于把样本划分batch，知识多做了一步，把相等长度的单词尽可能的划分到一个batch，不够长的就用padding。</span></span><br><span class="line">train_iterator, valid_iterator, test_iterator = data.BucketIterator.splits(</span><br><span class="line">    (train_data, valid_data, test_data),</span><br><span class="line">    batch_size = BATCH_SIZE,</span><br><span class="line">    device = device</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">next(iter(train_iterator)).label</span><br><span class="line">next(iter(train_iterator)).text</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[  66,  603, 2228,  ..., 1863,    0,   66],</span><br><span class="line">        [  22,  533,    3,  ...,    2,    9,    9],</span><br><span class="line">        [  19,  119,  106,  ..., 1449,   33,    6],</span><br><span class="line">        ...,</span><br><span class="line">        [   1,    1,    1,  ...,    1,    1,    1],</span><br><span class="line">        [   1,    1,    1,  ...,    1,    1,    1],</span><br><span class="line">        [   1,    1,    1,  ...,    1,    1,    1]], device=&apos;cuda:0&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 多运行一次可以发现一条评论的单词长度会变</span></span><br><span class="line">next(iter(train_iterator))</span><br><span class="line">next(iter(train_iterator)).text</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[2458,   11,    0,  ...,   11,  171, 9535],</span><br><span class="line">        [   6,   34, 4148,  ...,   34,   31, 1697],</span><br><span class="line">        [ 403,   92, 1139,  ...,  124,  213,  133],</span><br><span class="line">        ...,</span><br><span class="line">        [   1,    1,    1,  ...,    1,    1,    1],</span><br><span class="line">        [   1,    1,    1,  ...,    1,    1,    1],</span><br><span class="line">        [   1,    1,    1,  ...,    1,    1,    1]], device=&apos;cuda:0&apos;)</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第五步创建-word-averaging-模型"><a class="markdownIt-Anchor" href="#第五步创建-word-averaging-模型"></a> 第五步：创建 Word Averaging 模型</h2><ul><li>我们首先介绍一个简单的Word Averaging模型。这个模型非常简单，我们把每个单词都通过<code>Embedding</code>层投射成word embedding vector，然后把一句话中的所有word vector做个平均，就是整个句子的vector表示了。接下来把这个sentence vector传入一个<code>Linear</code>层，做分类即可。</li><li>我们使用<a href="https://pytorch.org/docs/stable/nn.html?highlight=avg_pool2d#torch.nn.functional.avg_pool2d" target="_blank" rel="noopener"><code>avg_pool2d</code></a>来做average pooling。我们的目标是把sentence length那个维度平均成1，然后保留embedding这个维度。</li><li><code>avg_pool2d</code>的kernel size是 (<code>embedded.shape[1]</code>, 1)，所以句子长度的那个维度会被压扁。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WordAVGModel</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, vocab_size, embedding_dim, output_dim, pad_idx)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化参数</span></span><br><span class="line">    super().__init__()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># embedding的作用就是将每个单词变成一个词向量</span></span><br><span class="line">    <span class="comment"># vocab_size=词汇表长度，embedding_dim=每个单词的维度</span></span><br><span class="line">    <span class="comment"># padding_idx：如果提供的话，输出遇到此下标时用零填充。这里如果遇到padding的单词就用0填充。</span></span><br><span class="line">    self.embedding = nn.Embedding(vocab_size, embedding_dim, padding_idx=pad_idx)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># output_dim输出的维度，一个数就可以了，=1</span></span><br><span class="line">    self.fc = nn.Linear(embedding_dim, output_dim)</span><br><span class="line">    </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, text)</span>:</span>  <span class="comment"># text维度为(sent_len, 1)</span></span><br><span class="line">    embedded = self.embedding(text)</span><br><span class="line">    <span class="comment"># text 下面会指定，为一个batch的数据</span></span><br><span class="line">    <span class="comment"># embedded = [sent_len, batch_size, emb_dim]</span></span><br><span class="line">    <span class="comment"># sen_len 一条评论的单词数</span></span><br><span class="line">    <span class="comment"># batch_size 一个batch有多少条评论</span></span><br><span class="line">    <span class="comment"># emb_dim 一个单词的维度</span></span><br><span class="line">    <span class="comment"># 假设[sent_len, batch_size, emb_dim] = (1000, 64, 100)</span></span><br><span class="line">    <span class="comment"># 则进行运算: (text: 1000, 64, 25000)*(self.embedding: 1000, 25000, 100) = (1000, 64, 100)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># [batch_size, sent_len, emb_dim] 更换顺序</span></span><br><span class="line">    embedded = embedded.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># [batch_size, embedding_dim]把单词长度的维度压扁为1，并降维</span></span><br><span class="line">    <span class="comment"># embedded 为input_size，(embedded.shape[1], 1)) 为kernel_size</span></span><br><span class="line">    <span class="comment"># squeeze(1)表示删除索引为1的那个维度</span></span><br><span class="line">    pooled = F.avg_pool2d(embedded, (embedded.shape[<span class="number">1</span>], <span class="number">1</span>)).squeeze(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># (batch_size, embedding_dim)*(embedding_dim, output_dim) = (batch_size, output_dim)</span></span><br><span class="line">    <span class="keyword">return</span> self.fc(pooled)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INPUT_DIM = len(TEXT.vocab)  <span class="comment"># 25002</span></span><br><span class="line">EMBEDDING_DIM = <span class="number">100</span></span><br><span class="line">OUTPUT_DIM = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PAD_IDX = 1 为pad的索引</span></span><br><span class="line">PAD_IDX = TEXT.vocab.stoi[TEXT.pad_token]</span><br><span class="line"></span><br><span class="line">model = WordAVGModel(INPUT_DIM, EMBEDDING_DIM, OUTPUT_DIM, PAD_IDX)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(PAD_IDX)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 统计参数数量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_parameters</span><span class="params">(model)</span>:</span></span><br><span class="line">  <span class="comment"># numel()函数：返回数组中元素的个数</span></span><br><span class="line">  <span class="keyword">return</span> sum(p.numel() <span class="keyword">for</span> p <span class="keyword">in</span> model.parameters() <span class="keyword">if</span> p.requires_grad)</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'The model has <span class="subst">&#123;count_parameters(model):,&#125;</span> trainable parameters'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The model has 2,500,301 trainable parameters</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第六步初始化参数"><a class="markdownIt-Anchor" href="#第六步初始化参数"></a> 第六步：初始化参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把上面vectors="glove.6B.100d"取出的词向量作为初始化参数</span></span><br><span class="line"><span class="comment"># 数量为25000*100个参数，25000个单词，每个单词的词向量维度为100</span></span><br><span class="line">pretrained_embeddings = TEXT.vocab.vectors</span><br><span class="line">model.embedding.weight.data.copy_(pretrained_embeddings)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[-0.1117, -0.4966,  0.1631,  ...,  1.2647, -0.2753, -0.1325],</span><br><span class="line">        [-0.8555, -0.7208,  1.3755,  ...,  0.0825, -1.1314,  0.3997],</span><br><span class="line">        [-0.0382, -0.2449,  0.7281,  ..., -0.1459,  0.8278,  0.2706],</span><br><span class="line">        ...,</span><br><span class="line">        [ 0.2455, -0.0385, -0.4767,  ..., -0.2939, -0.0752,  0.0441],</span><br><span class="line">        [ 0.4327,  0.3958,  0.5878,  ..., -1.1461,  0.2348, -0.2359],</span><br><span class="line">        [-0.3970,  0.4024,  1.0612,  ..., -0.0136, -0.3363,  0.6442]],</span><br><span class="line">       device=&apos;cuda:0&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">UNK_IDX = TEXT.vocab.stoi[TEXT.unk_token]  <span class="comment"># UNK_IDX = 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 词汇表25002个单词，前两个unk和pad也需要初始化，把它们初始化为0</span></span><br><span class="line">model.embedding.weight.data[UNK_IDX] = torch.zeros(EMBEDDING_DIM)</span><br><span class="line">model.embedding.weight.data[PAD_IDX] = torch.zeros(EMBEDDING_DIM)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model.embedding.weight.data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],</span><br><span class="line">        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],</span><br><span class="line">        [-0.0382, -0.2449,  0.7281,  ..., -0.1459,  0.8278,  0.2706],</span><br><span class="line">        ...,</span><br><span class="line">        [ 0.2455, -0.0385, -0.4767,  ..., -0.2939, -0.0752,  0.0441],</span><br><span class="line">        [ 0.4327,  0.3958,  0.5878,  ..., -1.1461,  0.2348, -0.2359],</span><br><span class="line">        [-0.3970,  0.4024,  1.0612,  ..., -0.0136, -0.3363,  0.6442]])</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第七步训练模型"><a class="markdownIt-Anchor" href="#第七步训练模型"></a> 第七步：训练模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义优化器</span></span><br><span class="line">optimizer = optim.Adam(model.parameters())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义损失函数，这个BCEWithLogitsLoss特殊情况，二分类损失函数</span></span><br><span class="line">criterion = nn.BCEWithLogitsLoss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 送到GPU上去</span></span><br><span class="line">model = model.to(device)</span><br><span class="line">criterion = criterion.to(device)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算预测的准确率</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_accuracy</span><span class="params">(preds, y)</span>:</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  Returns accuracy per batch, i.e. if you get 8/10 right, this returns 0.8, NOT 8</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># .round函数 四舍五入，rounded_preds要么为0，要么为1</span></span><br><span class="line">  <span class="comment"># neg为0, pos为1</span></span><br><span class="line">  rounded_preds = torch.round(torch.sigmoid(preds))</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># convert into float for division</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  a = torch.tensor([1, 1])</span></span><br><span class="line"><span class="string">  b = torch.tensor([1, 1])</span></span><br><span class="line"><span class="string">  print(a == b)</span></span><br><span class="line"><span class="string">  output: tensor([1, 1], dtype=torch.uint8)</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  a = torch.tensor([1, 0])</span></span><br><span class="line"><span class="string">  b = torch.tensor([1, 1])</span></span><br><span class="line"><span class="string">  print(a == b)</span></span><br><span class="line"><span class="string">  output: tensor([1, 0], dtype=torch.uint8)</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  correct = (rounded_preds == y).float()</span><br><span class="line">  acc = correct.sum() / len(correct)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> acc</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train</span><span class="params">(model, iterator, optimizer, criterion)</span>:</span></span><br><span class="line">  </span><br><span class="line">  epoch_loss = <span class="number">0</span></span><br><span class="line">  epoch_acc = <span class="number">0</span></span><br><span class="line">  total_len = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># model.train()代表了训练模式</span></span><br><span class="line">  <span class="comment"># model.train() ：启用 BatchNormalization 和 Dropout</span></span><br><span class="line">  <span class="comment"># model.eval() ：不启用 BatchNormalization 和 Dropout</span></span><br><span class="line">  model.train() </span><br><span class="line">  </span><br><span class="line">  <span class="comment"># iterator为train_iterator</span></span><br><span class="line">  <span class="keyword">for</span> batch <span class="keyword">in</span> iterator:</span><br><span class="line">    <span class="comment"># 梯度清零，加这步防止梯度叠加</span></span><br><span class="line">    optimizer.zero_grad()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># batch.text 就是上面forward函数的参数text</span></span><br><span class="line">    <span class="comment"># 压缩维度，不然跟 batch.label 维度对不上</span></span><br><span class="line">    predictions = model(batch.text).squeeze(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    loss = criterion(predictions, batch.label)</span><br><span class="line">    acc = binary_accuracy(predictions, batch.label)</span><br><span class="line">    </span><br><span class="line">    loss.backward()  <span class="comment"># 反向传播</span></span><br><span class="line">    optimizer.step() <span class="comment"># 梯度下降</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># loss.item() 以及本身除以了 len(batch.label)</span></span><br><span class="line">    <span class="comment"># 所以得再乘一次，得到一个batch的损失，累加得到所有样本损失</span></span><br><span class="line">    epoch_loss += loss.item() * len(batch.label)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># (acc.item(): 一个batch的正确率) * batch数 = 正确数</span></span><br><span class="line">    <span class="comment"># train_iterator 所有batch的正确数累加</span></span><br><span class="line">    epoch_acc += acc.item() * len(batch.label)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 计算 train_iterator 所有样本的数量，应该是17500</span></span><br><span class="line">    total_len += len(batch.label)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># epoch_loss / total_len ：train_iterator所有batch的损失</span></span><br><span class="line">  <span class="comment"># epoch_acc / total_len ：train_iterator所有batch的正确率</span></span><br><span class="line">  <span class="keyword">return</span> epoch_loss / total_len, epoch_acc / total_len</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不用优化器了</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate</span><span class="params">(model, iterator, criterion)</span>:</span></span><br><span class="line">  </span><br><span class="line">  epoch_loss = <span class="number">0</span></span><br><span class="line">  epoch_acc = <span class="number">0</span></span><br><span class="line">  total_len = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 转成测试模式，冻结dropout层或其他层</span></span><br><span class="line">  model.eval() </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    <span class="comment"># iterator为valid_iterator</span></span><br><span class="line">    <span class="keyword">for</span> batch <span class="keyword">in</span> iterator:</span><br><span class="line">      </span><br><span class="line">      <span class="comment"># 没有反向传播和梯度下降</span></span><br><span class="line">      </span><br><span class="line">      predictions = model(batch.text).squeeze(<span class="number">1</span>)</span><br><span class="line">      loss = criterion(predictions, batch.label)</span><br><span class="line">      acc = binary_accuracy(predictions, batch.label)</span><br><span class="line"></span><br><span class="line">      epoch_loss += loss.item() * len(batch.label)</span><br><span class="line">      epoch_acc += acc.item() * len(batch.label)</span><br><span class="line">      total_len += len(batch.label)</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 调回训练模式</span></span><br><span class="line">  model.train()</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> epoch_loss / total_len, epoch_acc / total_len</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看每个epoch的时间</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">epoch_time</span><span class="params">(start_time, end_time)</span>:</span>  </span><br><span class="line">    elapsed_time = end_time - start_time</span><br><span class="line">    elapsed_mins = int(elapsed_time / <span class="number">60</span>)</span><br><span class="line">    elapsed_secs = int(elapsed_time - (elapsed_mins * <span class="number">60</span>))</span><br><span class="line">    <span class="keyword">return</span> elapsed_mins, elapsed_secs</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第八步查看模型运行结果"><a class="markdownIt-Anchor" href="#第八步查看模型运行结果"></a> 第八步：查看模型运行结果</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N_EPOCHS = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">best_valid_loss = float(<span class="string">'inf'</span>)  <span class="comment"># 初试的验证集loss设置为无穷大</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(N_EPOCHS):</span><br><span class="line">  start_time = time.time()</span><br><span class="line">  </span><br><span class="line">  train_loss, train_acc = train(model, train_iterator, optimizer, criterion)</span><br><span class="line">  valid_loss, valid_acc = evaluate(model, valid_iterator, criterion)</span><br><span class="line">  </span><br><span class="line">  end_time = time.time()</span><br><span class="line">  </span><br><span class="line">  epoch_mins, epoch_secs = epoch_time(start_time, end_time)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 只要模型效果变好，就存模型(参数)</span></span><br><span class="line">  <span class="keyword">if</span> valid_loss &lt; best_valid_loss:</span><br><span class="line">    best_valid_loss = valid_loss</span><br><span class="line">    torch.save(model.state_dict(), <span class="string">'wordavg-model.pt'</span>)</span><br><span class="line">    </span><br><span class="line">  print(<span class="string">f'Epoch: <span class="subst">&#123;epoch+<span class="number">1</span>:<span class="number">02</span>&#125;</span> | Epoch Time: <span class="subst">&#123;epoch_mins&#125;</span>m <span class="subst">&#123;epoch_secs&#125;</span>s'</span>)</span><br><span class="line">  print(<span class="string">f'\tTrain Loss: <span class="subst">&#123;train_loss:<span class="number">.3</span>f&#125;</span> | Train Acc: <span class="subst">&#123;train_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br><span class="line">  print(<span class="string">f'\t Val. Loss: <span class="subst">&#123;valid_loss:<span class="number">.3</span>f&#125;</span> | Val. Acc: <span class="subst">&#123;valid_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Epoch: 01 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.577 | Train Acc: 71.55%</span><br><span class="line"> Val. Loss: 0.461 | Val. Acc: 80.96%</span><br><span class="line">Epoch: 02 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.467 | Train Acc: 83.26%</span><br><span class="line"> Val. Loss: 0.375 | Val. Acc: 85.43%</span><br><span class="line">Epoch: 03 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.402 | Train Acc: 87.45%</span><br><span class="line"> Val. Loss: 0.350 | Val. Acc: 87.33%</span><br><span class="line">Epoch: 04 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.359 | Train Acc: 89.32%</span><br><span class="line"> Val. Loss: 0.356 | Val. Acc: 88.07%</span><br><span class="line">Epoch: 05 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.327 | Train Acc: 90.38%</span><br><span class="line"> Val. Loss: 0.361 | Val. Acc: 88.72%</span><br><span class="line">Epoch: 06 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.298 | Train Acc: 91.18%</span><br><span class="line"> Val. Loss: 0.373 | Val. Acc: 89.03%</span><br><span class="line">Epoch: 07 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.274 | Train Acc: 92.34%</span><br><span class="line"> Val. Loss: 0.382 | Val. Acc: 89.37%</span><br><span class="line">Epoch: 08 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.253 | Train Acc: 92.87%</span><br><span class="line"> Val. Loss: 0.395 | Val. Acc: 89.49%</span><br><span class="line">Epoch: 09 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.235 | Train Acc: 93.58%</span><br><span class="line"> Val. Loss: 0.410 | Val. Acc: 89.61%</span><br><span class="line">Epoch: 10 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.220 | Train Acc: 94.21%</span><br><span class="line"> Val. Loss: 0.421 | Val. Acc: 89.75%</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="第九步预测结果"><a class="markdownIt-Anchor" href="#第九步预测结果"></a> 第九步：预测结果</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用保存的模型参数预测数据</span></span><br><span class="line">model.load_state_dict(torch.load(<span class="string">"wordavg-model.pt"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;All keys matched successfully&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># spacy是分词工具，跟NLTK类似</span></span><br><span class="line"><span class="keyword">import</span> spacy  </span><br><span class="line">nlp = spacy.load(<span class="string">'en'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict_sentiment</span><span class="params">(sentence)</span>:</span></span><br><span class="line">  <span class="comment"># 分词</span></span><br><span class="line">  tokenized = [tok.text <span class="keyword">for</span> tok <span class="keyword">in</span> nlp.tokenizer(sentence)]</span><br><span class="line">  <span class="comment"># sentence 的索引</span></span><br><span class="line">  indexed = [TEXT.vocab.stoi[t] <span class="keyword">for</span> t <span class="keyword">in</span> tokenized]</span><br><span class="line">  </span><br><span class="line">  tensor = torch.LongTensor(indexed).to(device)  <span class="comment"># seq_len</span></span><br><span class="line">  tensor = tensor.unsqueeze(<span class="number">1</span>)   <span class="comment"># seq_len * batch_size (1)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># tensor与text一样的tensor</span></span><br><span class="line">  prediction = torch.sigmoid(model(tensor))</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> prediction.item()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">predict_sentiment(<span class="string">"I love this film bad"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9.618100193620194e-06</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">predict_sentiment(<span class="string">"This film is great"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.0</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_loss, test_acc = evaluate(model, test_iterator, criterion)</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'Test Loss: <span class="subst">&#123;test_loss:<span class="number">.3</span>f&#125;</span> | Test Acc: <span class="subst">&#123;test_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Test Loss: 0.391 | Test Acc: 86.04%</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="rnn模型bilstm"><a class="markdownIt-Anchor" href="#rnn模型bilstm"></a> RNN模型（BiLSTM）</h2><ul><li>下面我们尝试把模型换成一个<strong>recurrent neural network</strong> (RNN)。RNN经常会被用来encode一个sequence<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><mtext>RNN</mtext><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_t = \text{RNN}(x_t, h_{t-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">RNN</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></li><li>我们使用最后一个hidden state <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">h_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来表示整个句子。</li><li>然后我们把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">h_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通过一个线性变换<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>，然后用来预测句子的情感。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RNN</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, vocab_size, embedding_dim, hidden_dim, output_dim,</span></span></span><br><span class="line"><span class="function"><span class="params">               n_layers, bidirectional, dropout, pad_idx)</span>:</span></span><br><span class="line">    </span><br><span class="line">    super().__init__()</span><br><span class="line">    self.embedding = nn.Embedding(vocab_size, embedding_dim, padding_idx=pad_idx)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># embedding_dim: 每个词向量的维度</span></span><br><span class="line">    <span class="comment"># hidden_dim: 隐藏层的维度</span></span><br><span class="line">    <span class="comment"># num_layers: 神经网络深度，纵向深度</span></span><br><span class="line">    <span class="comment"># bidrectional: 是否双向循环RNN</span></span><br><span class="line">    <span class="comment"># dropout是指在深度学习网络的训练过程中，对于神经网络单元，按照一定的概率将其暂时从网络中丢弃。</span></span><br><span class="line">    <span class="comment"># 经过交叉验证，隐含节点dropout率等于0.5的时候效果最好，原因是0.5的时候dropout随机生成的网络结构最多。</span></span><br><span class="line">    self.rnn = nn.LSTM(embedding_dim, hidden_dim, num_layers=n_layers,</span><br><span class="line">                       bidirectional=bidirectional, dropout=dropout)</span><br><span class="line">    </span><br><span class="line">    self.fc = nn.Linear(hidden_dim*<span class="number">2</span>, output_dim)  <span class="comment"># *2是因为BiLSTM</span></span><br><span class="line">    self.dropout = nn.Dropout(dropout)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, text)</span>:</span></span><br><span class="line">    embedded = self.dropout(self.embedding(text)) <span class="comment"># [sent len, batch size, emb dim]</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># output = [sent len, batch size, hid dim * num directions]</span></span><br><span class="line">    <span class="comment"># hidden = [num layers * num directions, batch size, hid dim]</span></span><br><span class="line">    <span class="comment"># cell = [num layers * num directions, batch size, hid dim]</span></span><br><span class="line">    output, (hidden, cell) = self.rnn(embedded)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># concat the final forward (hidden[-2,:,:]) and backward (hidden[-1,:,:]) hidden layers</span></span><br><span class="line">    <span class="comment"># and apply dropout</span></span><br><span class="line">    <span class="comment"># [batch size, hid dim * num directions], 横着拼接的</span></span><br><span class="line">    <span class="comment"># 倒数第一个和倒数第二个是BiLSTM最后要保留的状态</span></span><br><span class="line">    hidden = self.dropout(torch.cat((hidden[<span class="number">-2</span>, :, :], hidden[<span class="number">-1</span>, :, :]), dim=<span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> self.fc(hidden.squeeze)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INPUT_DIM = len(TEXT.vocab)  <span class="comment"># 25002</span></span><br><span class="line">EMBEDDING_DIM = <span class="number">100</span></span><br><span class="line">HIDDEN_DIM = <span class="number">256</span></span><br><span class="line">OUTPUT_DIM = <span class="number">1</span></span><br><span class="line">N_LAYERS = <span class="number">2</span></span><br><span class="line">BIDIRECTIONAL = <span class="literal">True</span></span><br><span class="line">DROPOUT = <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PAD_IDX = 1 为pad的索引</span></span><br><span class="line">PAD_IDX = TEXT.vocab.stoi[TEXT.pad_token]</span><br><span class="line"></span><br><span class="line">model = RNN(INPUT_DIM, EMBEDDING_DIM, HIDDEN_DIM, OUTPUT_DIM,</span><br><span class="line">            N_LAYERS, BIDIRECTIONAL, DROPOUT, PAD_IDX)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">f'The model has <span class="subst">&#123;count_parameters(model):,&#125;</span> trainable parameters'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The model has 4,810,857 trainable parameters</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="初始化参数"><a class="markdownIt-Anchor" href="#初始化参数"></a> 初始化参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pretrained_embeddings = TEXT.vocab.vectors</span></span><br><span class="line">model.embedding.weight.data.copy_(pretrained_embeddings)</span><br><span class="line"></span><br><span class="line">UNK_IDX = TEXT.vocab.stoi[TEXT.unk_token]  <span class="comment"># UNK_IDX = 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 词汇表25002个单词，前两个unk和pad也需要初始化，把它们初始化为0</span></span><br><span class="line">model.embedding.weight.data[UNK_IDX] = torch.zeros(EMBEDDING_DIM)</span><br><span class="line">model.embedding.weight.data[PAD_IDX] = torch.zeros(EMBEDDING_DIM)</span><br><span class="line"></span><br><span class="line">print(model.embedding.weight.data)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],</span><br><span class="line">        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],</span><br><span class="line">        [-0.0382, -0.2449,  0.7281,  ..., -0.1459,  0.8278,  0.2706],</span><br><span class="line">        ...,</span><br><span class="line">        [ 0.2455, -0.0385, -0.4767,  ..., -0.2939, -0.0752,  0.0441],</span><br><span class="line">        [ 0.4327,  0.3958,  0.5878,  ..., -1.1461,  0.2348, -0.2359],</span><br><span class="line">        [-0.3970,  0.4024,  1.0612,  ..., -0.0136, -0.3363,  0.6442]],</span><br><span class="line">       device=&apos;cuda:0&apos;)</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="训练rnn模型"><a class="markdownIt-Anchor" href="#训练rnn模型"></a> 训练RNN模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># import torch.optim as optim</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义优化器</span></span><br><span class="line">optimizer = optim.Adam(model.parameters())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义损失函数，这个BCEWithLogitsLoss特殊情况，二分类损失函数</span></span><br><span class="line"><span class="comment"># criterion = nn.BCEWithLogitsLoss()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 送到GPU上去</span></span><br><span class="line">model = model.to(device)</span><br><span class="line"><span class="comment"># criterion = criterion.to(device)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N_EPOCHS = <span class="number">10</span></span><br><span class="line">best_valid_loss = float(<span class="string">'inf'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(N_EPOCHS):</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    train_loss, train_acc = train(model, train_iterator, optimizer, criterion)</span><br><span class="line">    valid_loss, valid_acc = evaluate(model, valid_iterator, criterion)</span><br><span class="line">    </span><br><span class="line">    end_time = time.time()</span><br><span class="line"></span><br><span class="line">    epoch_mins, epoch_secs = epoch_time(start_time, end_time)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> valid_loss &lt; best_valid_loss:</span><br><span class="line">        best_valid_loss = valid_loss</span><br><span class="line">        torch.save(model.state_dict(), <span class="string">'lstm-model.pt'</span>)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">f'Epoch: <span class="subst">&#123;epoch+<span class="number">1</span>:<span class="number">02</span>&#125;</span> | Epoch Time: <span class="subst">&#123;epoch_mins&#125;</span>m <span class="subst">&#123;epoch_secs&#125;</span>s'</span>)</span><br><span class="line">    print(<span class="string">f'\tTrain Loss: <span class="subst">&#123;train_loss:<span class="number">.3</span>f&#125;</span> | Train Acc: <span class="subst">&#123;train_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br><span class="line">    print(<span class="string">f'\t Val. Loss: <span class="subst">&#123;valid_loss:<span class="number">.3</span>f&#125;</span> |  Val. Acc: <span class="subst">&#123;valid_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Epoch: 01 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.594 | Train Acc: 70.69%</span><br><span class="line"> Val. Loss: 0.493 |  Val. Acc: 78.31%</span><br><span class="line">Epoch: 02 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.502 | Train Acc: 82.04%</span><br><span class="line"> Val. Loss: 0.373 |  Val. Acc: 84.53%</span><br><span class="line">Epoch: 03 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.440 | Train Acc: 85.97%</span><br><span class="line"> Val. Loss: 0.363 |  Val. Acc: 86.17%</span><br><span class="line">Epoch: 04 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.391 | Train Acc: 88.27%</span><br><span class="line"> Val. Loss: 0.342 |  Val. Acc: 87.73%</span><br><span class="line">Epoch: 05 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.357 | Train Acc: 89.50%</span><br><span class="line"> Val. Loss: 0.350 |  Val. Acc: 88.20%</span><br><span class="line">Epoch: 06 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.325 | Train Acc: 90.49%</span><br><span class="line"> Val. Loss: 0.360 |  Val. Acc: 88.60%</span><br><span class="line">Epoch: 07 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.299 | Train Acc: 91.28%</span><br><span class="line"> Val. Loss: 0.376 |  Val. Acc: 88.88%</span><br><span class="line">Epoch: 08 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.276 | Train Acc: 92.13%</span><br><span class="line"> Val. Loss: 0.382 |  Val. Acc: 89.25%</span><br><span class="line">Epoch: 09 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.256 | Train Acc: 92.91%</span><br><span class="line"> Val. Loss: 0.396 |  Val. Acc: 89.45%</span><br><span class="line">Epoch: 10 | Epoch Time: 0m 6s</span><br><span class="line">Train Loss: 0.239 | Train Acc: 93.41%</span><br><span class="line"> Val. Loss: 0.410 |  Val. Acc: 89.60%</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="预测结果"><a class="markdownIt-Anchor" href="#预测结果"></a> 预测结果</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model.load_state_dict(torch.load(<span class="string">'lstm-model.pt'</span>))</span><br><span class="line">test_loss, test_acc = evaluate(model, test_iterator, criterion)</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'Test Loss: <span class="subst">&#123;test_loss:<span class="number">.3</span>f&#125;</span> | Test Acc: <span class="subst">&#123;test_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Test Loss: 0.381 | Test Acc: 86.31%</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="cnn模型"><a class="markdownIt-Anchor" href="#cnn模型"></a> CNN模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CNN</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, vocab_size, embedding_dim, n_filters, filter_sizes,</span></span></span><br><span class="line"><span class="function"><span class="params">               output_dim, dropout, pad_idx)</span>:</span></span><br><span class="line">    super().__init__()</span><br><span class="line">    </span><br><span class="line">    self.embedding = nn.Embedding(vocab_size, embedding_dim, padding_idx=pad_idx)</span><br><span class="line">    self.convs = nn.ModuleList([</span><br><span class="line">        nn.Conv2d(in_channels = <span class="number">1</span>, out_channels = n_filters,</span><br><span class="line">                  kernel_size = (fs, embedding_dim))</span><br><span class="line">        <span class="keyword">for</span> fs <span class="keyword">in</span> filter_sizes</span><br><span class="line">    ])</span><br><span class="line">    </span><br><span class="line">    self.fc = nn.Linear(len(filter_sizes) * n_filters, output_dim)</span><br><span class="line">    self.dropout = nn.Dropout(dropout)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, text)</span>:</span></span><br><span class="line">    text = text.permute(<span class="number">1</span>, <span class="number">0</span>)        <span class="comment"># [batch size, sent len]</span></span><br><span class="line">    embedded = self.embedding(text)  <span class="comment"># [batch size, sent len, emb dim]</span></span><br><span class="line">    embedded = embedded.unsqueeze(<span class="number">1</span>) <span class="comment"># [batch size, 1, sent len, emb dim]</span></span><br><span class="line">    conved = [F.relu(conv(embedded)).squeeze(<span class="number">3</span>) <span class="keyword">for</span> conv <span class="keyword">in</span> self.convs]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># conv_n = [batch size, n_filters, sent len - filter_sizes[n]]</span></span><br><span class="line">    </span><br><span class="line">    pooled = [F.max_pool1d(conv, conv.shape[<span class="number">2</span>]).squeeze(<span class="number">2</span>) <span class="keyword">for</span> conv <span class="keyword">in</span> conved]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># pooled_n = [batch size, n_filters]</span></span><br><span class="line">    </span><br><span class="line">    cat = self.dropout(torch.cat(pooled, dim=<span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># cat = [batch size, n_filters * len(filter_sizes)]</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> self.fc(cat)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INPUT_DIM = len(TEXT.vocab)</span><br><span class="line">EMBEDDING_DIM = <span class="number">100</span></span><br><span class="line">N_FILTERS = <span class="number">100</span></span><br><span class="line">FILTER_SIZES = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">OUTPUT_DIM = <span class="number">1</span></span><br><span class="line">DROPOUT = <span class="number">0.5</span></span><br><span class="line">PAD_IDX = TEXT.vocab.stoi[TEXT.pad_token]</span><br><span class="line"></span><br><span class="line">model = CNN(INPUT_DIM, EMBEDDING_DIM, N_FILTERS, FILTER_SIZES, OUTPUT_DIM, DROPOUT, PAD_IDX)</span><br><span class="line">model.embedding.weight.data.copy_(pretrained_embeddings)</span><br><span class="line"></span><br><span class="line">UNK_IDX = TEXT.vocab.stoi[TEXT.unk_token]</span><br><span class="line">model.embedding.weight.data[UNK_IDX] = torch.zeros(EMBEDDING_DIM)</span><br><span class="line">model.embedding.weight.data[PAD_IDX] = torch.zeros(EMBEDDING_DIM)</span><br><span class="line">model = model.to(device)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">optimizer = optim.Adam(model.parameters())</span><br><span class="line">criterion = nn.BCEWithLogitsLoss()</span><br><span class="line">criterion = criterion.to(device)</span><br><span class="line"></span><br><span class="line">N_EPOCHS = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">best_valid_loss = float(<span class="string">'inf'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(N_EPOCHS):</span><br><span class="line"></span><br><span class="line">    start_time = time.time()</span><br><span class="line">    </span><br><span class="line">    train_loss, train_acc = train(model, train_iterator, optimizer, criterion)</span><br><span class="line">    valid_loss, valid_acc = evaluate(model, valid_iterator, criterion)</span><br><span class="line">    </span><br><span class="line">    end_time = time.time()</span><br><span class="line"></span><br><span class="line">    epoch_mins, epoch_secs = epoch_time(start_time, end_time)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> valid_loss &lt; best_valid_loss:</span><br><span class="line">        best_valid_loss = valid_loss</span><br><span class="line">        torch.save(model.state_dict(), <span class="string">'CNN-model.pt'</span>)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">f'Epoch: <span class="subst">&#123;epoch+<span class="number">1</span>:<span class="number">02</span>&#125;</span> | Epoch Time: <span class="subst">&#123;epoch_mins&#125;</span>m <span class="subst">&#123;epoch_secs&#125;</span>s'</span>)</span><br><span class="line">    print(<span class="string">f'\tTrain Loss: <span class="subst">&#123;train_loss:<span class="number">.3</span>f&#125;</span> | Train Acc: <span class="subst">&#123;train_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br><span class="line">    print(<span class="string">f'\t Val. Loss: <span class="subst">&#123;valid_loss:<span class="number">.3</span>f&#125;</span> |  Val. Acc: <span class="subst">&#123;valid_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Epoch: 01 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.653 | Train Acc: 61.07%</span><br><span class="line"> Val. Loss: 0.504 |  Val. Acc: 78.20%</span><br><span class="line">Epoch: 02 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.427 | Train Acc: 80.60%</span><br><span class="line"> Val. Loss: 0.352 |  Val. Acc: 84.85%</span><br><span class="line">Epoch: 03 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.306 | Train Acc: 87.18%</span><br><span class="line"> Val. Loss: 0.315 |  Val. Acc: 86.56%</span><br><span class="line">Epoch: 04 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.221 | Train Acc: 91.37%</span><br><span class="line"> Val. Loss: 0.303 |  Val. Acc: 87.43%</span><br><span class="line">Epoch: 05 | Epoch Time: 0m 31s</span><br><span class="line">Train Loss: 0.161 | Train Acc: 93.86%</span><br><span class="line"> Val. Loss: 0.319 |  Val. Acc: 87.47%</span><br><span class="line">Epoch: 06 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.114 | Train Acc: 95.86%</span><br><span class="line"> Val. Loss: 0.347 |  Val. Acc: 87.21%</span><br><span class="line">Epoch: 07 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.078 | Train Acc: 97.43%</span><br><span class="line"> Val. Loss: 0.355 |  Val. Acc: 87.41%</span><br><span class="line">Epoch: 08 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.055 | Train Acc: 98.30%</span><br><span class="line"> Val. Loss: 0.386 |  Val. Acc: 87.33%</span><br><span class="line">Epoch: 09 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.041 | Train Acc: 98.85%</span><br><span class="line"> Val. Loss: 0.412 |  Val. Acc: 87.48%</span><br><span class="line">Epoch: 10 | Epoch Time: 0m 30s</span><br><span class="line">Train Loss: 0.031 | Train Acc: 99.08%</span><br><span class="line"> Val. Loss: 0.440 |  Val. Acc: 87.23%</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model.load_state_dict(torch.load(<span class="string">'CNN-model.pt'</span>))</span><br><span class="line">test_loss, test_acc = evaluate(model, test_iterator, criterion)</span><br><span class="line">print(<span class="string">f'Test Loss: <span class="subst">&#123;test_loss:<span class="number">.3</span>f&#125;</span> | Test Acc: <span class="subst">&#123;test_acc*<span class="number">100</span>:<span class="number">.2</span>f&#125;</span>%'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Test Loss: 0.334 | Test Acc: 85.49%</span><br></pre></td></tr></table></figure><p> </p><hr><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><ol><li><a href="https://github.com/bentrevett/pytorch-sentiment-analysis" target="_blank" rel="noopener">https://github.com/bentrevett/pytorch-sentiment-analysis</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-MLP</title>
      <link href="/post/fc895aa3.html"/>
      <url>/post/fc895aa3.html</url>
      
        <content type="html"><![CDATA[<h1 id="多层感知机"><a class="markdownIt-Anchor" href="#多层感知机"></a> 多层感知机</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pylab <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">".."</span>) </span><br><span class="line"><span class="keyword">import</span> d2lzh_pytorch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><h2 id="激活函数"><a class="markdownIt-Anchor" href="#激活函数"></a> 激活函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xyplot</span><span class="params">(x_vals, y_vals, name)</span>:</span></span><br><span class="line">    d2l.set_figsize(figsize=(<span class="number">5</span>, <span class="number">2.5</span>))</span><br><span class="line">    d2l.plt.plot(x_vals.detach().numpy(), y_vals.detach().numpy())</span><br><span class="line">    d2l.plt.xlabel(<span class="string">'x'</span>)</span><br><span class="line">    d2l.plt.ylabel(name + <span class="string">'(x)'</span>)</span><br></pre></td></tr></table></figure><h3 id="relu函数"><a class="markdownIt-Anchor" href="#relu函数"></a> ReLU函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.arange(<span class="number">-8.0</span>, <span class="number">8.0</span>, <span class="number">0.1</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">y = x.relu()</span><br><span class="line">xyplot(x, y, <span class="string">'relu'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/06_MLP/output_5_0.svg" alt></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y.sum().backward()</span><br><span class="line">xyplot(x, x.grad, <span class="string">'grad of relu'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/06_MLP/output_6_0.svg" alt></p><h3 id="sigmoid函数"><a class="markdownIt-Anchor" href="#sigmoid函数"></a> sigmoid函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = x.sigmoid()</span><br><span class="line">xyplot(x, y, <span class="string">'sigmoid'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/06_MLP/output_8_0.svg" alt></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x.grad.zero_()</span><br><span class="line">y.sum().backward()</span><br><span class="line">xyplot(x, x.grad, <span class="string">'grad of sigmoid'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/06_MLP/output_9_0.svg" alt></p><h3 id="tanh函数"><a class="markdownIt-Anchor" href="#tanh函数"></a> tanh函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = x.tanh()</span><br><span class="line">xyplot(x, y, <span class="string">'tanh'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/06_MLP/output_11_0.svg" alt></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x.grad.zero_()</span><br><span class="line">y.sum().backward()</span><br><span class="line">xyplot(x, x.grad, <span class="string">'grad of tanh'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/06_MLP/output_12_0.svg" alt></p><h1 id="多层感知机从零开始实现"><a class="markdownIt-Anchor" href="#多层感知机从零开始实现"></a> 多层感知机从零开始实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">".."</span>) <span class="comment"># 为了导入上层目录的d2lzh_pytorch</span></span><br><span class="line"><span class="keyword">import</span> d2lzh_pytorch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><h2 id="获取和读取数据"><a class="markdownIt-Anchor" href="#获取和读取数据"></a> 获取和读取数据</h2><p>这里继续使用Fashion-MNIST数据集。我们将使用多层感知机对图像进行分类。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">batch_size = <span class="number">256</span></span><br><span class="line">train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)</span><br></pre></td></tr></table></figure><h2 id="定义模型参数"><a class="markdownIt-Anchor" href="#定义模型参数"></a> 定义模型参数</h2><p>Fashion-MNIST数据集中图像形状为 28×28 ，类别数为10。本节中我们依然使用长度为<br>28×28=784 的向量表示每一张图像。因此，输入个数为784，输出个数为10。实验中，我们<br>设超参数隐藏单元个数为256。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_inputs, num_outputs, num_hiddens = <span class="number">784</span>, <span class="number">10</span>, <span class="number">256</span></span><br><span class="line"></span><br><span class="line">W1 = torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">0.01</span>, (num_inputs, num_hiddens)), dtype=torch.float)</span><br><span class="line">b1 = torch.zeros(num_hiddens, dtype=torch.float)</span><br><span class="line">W2 = torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">0.01</span>, (num_hiddens, num_outputs)), dtype=torch.float)</span><br><span class="line">b2 = torch.zeros(num_outputs, dtype=torch.float)</span><br><span class="line"></span><br><span class="line">params = [W1, b1, W2, b2]</span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> params:</span><br><span class="line">    param.requires_grad_(requires_grad=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="定义激活函数"><a class="markdownIt-Anchor" href="#定义激活函数"></a> 定义激活函数</h2><p>这里我们使用基础的<code>max</code>函数来实现ReLU，而非直接调用<code>relu</code>函数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">relu</span><span class="params">(X)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> torch.max(input=X, other=torch.tensor(<span class="number">0.0</span>))</span><br></pre></td></tr></table></figure><h2 id="定义模型"><a class="markdownIt-Anchor" href="#定义模型"></a> 定义模型</h2><p>同softmax回归一样，我们通过<code>view</code>函数将每张原始图像改成长度为num_inputs的<br>向量。然后我们实现上一节中多层感知机的计算表达式。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">net</span><span class="params">(X)</span>:</span></span><br><span class="line">    X = X.view((<span class="number">-1</span>, num_inputs))</span><br><span class="line">    H = relu(torch.matmul(X, W1) + b1)</span><br><span class="line">    <span class="keyword">return</span> torch.matmul(H, W2) + b2</span><br></pre></td></tr></table></figure><h2 id="定义损失函数"><a class="markdownIt-Anchor" href="#定义损失函数"></a> 定义损失函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">loss = torch.nn.CrossEntropyLoss()</span><br></pre></td></tr></table></figure><h2 id="训练模型"><a class="markdownIt-Anchor" href="#训练模型"></a> 训练模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_epochs, lr = <span class="number">5</span>, <span class="number">100</span></span><br><span class="line">d2l.train_ch3(net, train_iter, test_iter, loss, num_epochs, batch_size, params, lr)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">epoch 1, loss 0.0028, train acc 0.727, test acc 0.787</span><br><span class="line">epoch 2, loss 0.0019, train acc 0.823, test acc 0.829</span><br><span class="line">epoch 3, loss 0.0017, train acc 0.844, test acc 0.826</span><br><span class="line">epoch 4, loss 0.0015, train acc 0.855, test acc 0.841</span><br><span class="line">epoch 5, loss 0.0014, train acc 0.864, test acc 0.847</span><br></pre></td></tr></table></figure><h1 id="多层感知机简洁实现"><a class="markdownIt-Anchor" href="#多层感知机简洁实现"></a> 多层感知机简洁实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> init</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">".."</span>)</span><br><span class="line"><span class="keyword">import</span> d2lzh_pytorch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><h2 id="定义模型-2"><a class="markdownIt-Anchor" href="#定义模型-2"></a> 定义模型</h2><p>和softmax回归唯一的不同在于，我们多加了一个全连接层作为隐藏层。它的隐藏单元个数<br>为256，并使用ReLU函数作为激活函数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_inputs, num_outputs, num_hiddens = <span class="number">784</span>, <span class="number">10</span>, <span class="number">256</span></span><br><span class="line"></span><br><span class="line">net = nn.Sequential(</span><br><span class="line">    d2l.FlattenLayer(),</span><br><span class="line">    nn.Linear(num_inputs, num_hiddens),</span><br><span class="line">    nn.ReLU(),</span><br><span class="line">    nn.Linear(num_hiddens, num_outputs),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> params <span class="keyword">in</span> net.parameters():</span><br><span class="line">    init.normal_(params, mean=<span class="number">0</span>, std=<span class="number">0.01</span>)</span><br></pre></td></tr></table></figure><h2 id="读取数据并训练模型"><a class="markdownIt-Anchor" href="#读取数据并训练模型"></a> 读取数据并训练模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">batch_size = <span class="number">256</span></span><br><span class="line">train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)</span><br><span class="line">loss = torch.nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line">optimizer = torch.optim.SGD(net.parameters(), lr=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">num_epochs = <span class="number">5</span></span><br><span class="line">d2l.train_ch3(net, train_iter, test_iter, loss, num_epochs, batch_size, <span class="literal">None</span>, <span class="literal">None</span>, optimizer)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">epoch 1, loss 0.0031, train acc 0.701, test acc 0.717</span><br><span class="line">epoch 2, loss 0.0019, train acc 0.821, test acc 0.817</span><br><span class="line">epoch 3, loss 0.0017, train acc 0.842, test acc 0.835</span><br><span class="line">epoch 4, loss 0.0015, train acc 0.855, test acc 0.824</span><br><span class="line">epoch 5, loss 0.0014, train acc 0.864, test acc 0.849</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MLP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-Softmax-Regression</title>
      <link href="/post/eade7da1.html"/>
      <url>/post/eade7da1.html</url>
      
        <content type="html"><![CDATA[<h1 id="softmax回归从零开始实现"><a class="markdownIt-Anchor" href="#softmax回归从零开始实现"></a> softmax回归从零开始实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">"./"</span>)  <span class="comment"># 为了导入上层目录的d21zh_pytorch</span></span><br><span class="line"><span class="keyword">import</span> d2lzh_pytorch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br><span class="line">print(torchvision.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br><span class="line">0.3.0</span><br></pre></td></tr></table></figure><h2 id="获取和读取数据"><a class="markdownIt-Anchor" href="#获取和读取数据"></a> 获取和读取数据</h2><p>我们将使用Fashion-MNIST数据集，并设置批量大小为256。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">batch_size = <span class="number">256</span></span><br><span class="line">train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(len(train_iter))</span><br><span class="line">print(len(test_iter))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">235</span><br><span class="line">40</span><br></pre></td></tr></table></figure><h2 id="初始化模型参数"><a class="markdownIt-Anchor" href="#初始化模型参数"></a> 初始化模型参数</h2><p>跟线性回归中的例子一样，我们将使用向量表示每个样本。已知每个样本输入是高和宽均为28像素的图像。模型的输入向量的长度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>28</mn><mo>×</mo><mn>28</mn><mo>=</mo><mn>784</mn></mrow><annotation encoding="application/x-tex">28×28=784</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">8</span><span class="mord">4</span></span></span></span>：该向量的每个元素对应图像中每个像素。由于图像有10个类别，单层神经网络输出层的输出个数为10，因此softmax回归的权重和偏差参数分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>784</mn><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">784×10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">8</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">1×10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>的矩阵。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_inputs = <span class="number">784</span></span><br><span class="line">num_outputs = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">W = torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">0.01</span>, (num_inputs, num_outputs)), dtype=torch.float)</span><br><span class="line">b = torch.zeros(num_outputs, dtype=torch.float)</span><br></pre></td></tr></table></figure><p>同之前一样，我们要为模型参数附上梯度。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">W.requires_grad_(requires_grad=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[ 0.0104, -0.0037, -0.0224,  ...,  0.0010,  0.0153, -0.0008],</span><br><span class="line">        [-0.0163, -0.0011, -0.0055,  ..., -0.0029, -0.0138,  0.0031],</span><br><span class="line">        [-0.0127,  0.0162, -0.0061,  ...,  0.0093, -0.0120,  0.0107],</span><br><span class="line">        ...,</span><br><span class="line">        [ 0.0113,  0.0018,  0.0202,  ...,  0.0008, -0.0034, -0.0122],</span><br><span class="line">        [ 0.0012, -0.0020, -0.0089,  ...,  0.0071, -0.0186, -0.0137],</span><br><span class="line">        [-0.0007,  0.0047, -0.0128,  ...,  0.0095,  0.0062,  0.0013]],</span><br><span class="line">       requires_grad=True)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">b.requires_grad_(requires_grad=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], requires_grad=True)</span><br></pre></td></tr></table></figure><p>在介绍如何定义softmax回归之前，我们先描述一下对如何对多维tensor按维度操作。在下面的例子中，给定一个tensor矩阵X。我们可以只对其中同一列（axis=0）或同一行（axis=1）的元素求和，并在结果中保留行和列这两个维度（keepdims=True）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = torch.tensor([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">print(X.sum(dim=<span class="number">0</span>, keepdim=<span class="literal">True</span>))</span><br><span class="line">print(X.sum(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[5, 7, 9]])</span><br><span class="line">tensor([[ 6],</span><br><span class="line">        [15]])</span><br></pre></td></tr></table></figure><h2 id="实现softmax运算"><a class="markdownIt-Anchor" href="#实现softmax运算"></a> 实现softmax运算</h2><p>在下面的函数中，矩阵<code>X</code>的行数是样本数，列数是输出个数。为了表达样本预测各个输出的概率，softmax运算会先通过<code>exp</code>函数对每个元素做指数运算，再对<code>exp</code>矩阵同行元素求和，最后令矩阵每行各元素与该行元素之和相除。这样一来，最终得到的矩阵每行元素和为1且非负。因此，该矩阵每行都是合法的概率分布。softmax运算的输出矩阵中的任意一行元素代表了一个样本在各个输出类别上的预测概率。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">softmax</span><span class="params">(X)</span>:</span></span><br><span class="line">    X_exp = X.exp()</span><br><span class="line">    partition = X_exp.sum(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>)  <span class="comment"># 保持行的维度</span></span><br><span class="line">    <span class="keyword">return</span> X_exp / partition   <span class="comment"># 这里应用了广播机制</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X = torch.rand((<span class="number">2</span>, <span class="number">5</span>))   <span class="comment"># rand() [0,1]之间均匀分布</span></span><br><span class="line">X_prob = softmax(X)</span><br><span class="line">print(X_prob, X_prob.sum(dim=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[0.1248, 0.2464, 0.2456, 0.1720, 0.2112],</span><br><span class="line">        [0.2505, 0.1476, 0.2373, 0.1775, 0.1871]]) tensor([1.0000, 1.0000])</span><br></pre></td></tr></table></figure><h2 id="定义模型"><a class="markdownIt-Anchor" href="#定义模型"></a> 定义模型</h2><p>这里通过<code>view</code>函数将每张原始图像改成长度为<code>num_inputs</code>的向量。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">net</span><span class="params">(X)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> softmax(torch.mm(X.view((<span class="number">-1</span>, num_inputs)), W) + b)</span><br></pre></td></tr></table></figure><h2 id="定义损失函数"><a class="markdownIt-Anchor" href="#定义损失函数"></a> 定义损失函数</h2><p>为了得到标签的预测概率，我们可以使用<code>gather</code>函数。在下面的例子中，变量<code>y_hat</code>是2个样本在3个类别的预测概率，变量y是这2个样本的标签类别。通过使用<code>gather</code>函数，我们得到了2个样本的标签的预测概率。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y_hat = torch.tensor([[<span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">0.6</span>], [<span class="number">0.3</span>, <span class="number">0.2</span>, <span class="number">0.5</span>]])</span><br><span class="line">y = torch.LongTensor([<span class="number">0</span>, <span class="number">2</span>])</span><br><span class="line">y_hat.gather(<span class="number">1</span>, y.view(<span class="number">-1</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[0.1000],</span><br><span class="line">        [0.5000]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cross_entropy</span><span class="params">(y_hat, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> -torch.log(y_hat.gather(<span class="number">1</span>, y.view(<span class="number">-1</span>, <span class="number">1</span>)))</span><br></pre></td></tr></table></figure><h2 id="计算分类准确率"><a class="markdownIt-Anchor" href="#计算分类准确率"></a> 计算分类准确率</h2><p>其中<code>y_hat.argmax(dim=1)</code>返回矩阵y_hat每行中最大元素的索引，且返回结果与变量y形状相同。相等条件判断式<code>(y_hat.argmax(dim=1) == y)</code>是一个值为0（相等为假）或1（相等为真）的tensor。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">accuracy</span><span class="params">(y_hat, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (y_hat.argmax(dim=<span class="number">1</span>) == y).float().mean().item()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(accuracy(y_hat, y))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.5</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本函数已保存在d2lzh_pytorch包中方便以后使用。该函数将被逐步改进：它的完整实现将在“图像增广”一节中描述</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_accuracy</span><span class="params">(data_iter, net)</span>:</span></span><br><span class="line">    acc_sum, n = <span class="number">0.0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter:</span><br><span class="line">        acc_sum += (net(X).argmax(dim=<span class="number">1</span>) == y).float().sum().item()</span><br><span class="line">        <span class="comment"># print("acc_sum: ",acc_sum)</span></span><br><span class="line">        n += y.shape[<span class="number">0</span>]   <span class="comment"># y.shape[0]表示y的行数</span></span><br><span class="line">        <span class="comment"># print("y.shape[0]: ", y.shape[0])</span></span><br><span class="line">    <span class="keyword">return</span> acc_sum / n</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(evaluate_accuracy(test_iter, net))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.1117</span><br></pre></td></tr></table></figure><h2 id="训练模型"><a class="markdownIt-Anchor" href="#训练模型"></a> 训练模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 迭代周期数num_epochs和学习率lr</span></span><br><span class="line">num_epochs, lr = <span class="number">5</span>, <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本函数已保存在d2lzh_pytorch包中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train_ch3</span><span class="params">(net, train_iter, test_iter, loss, num_epochs, batch_size,</span></span></span><br><span class="line"><span class="function"><span class="params">             params=None, lr=None, optimizer=None)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(num_epochs):</span><br><span class="line">        train_l_sum, train_acc_sum, n = <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> X, y <span class="keyword">in</span> train_iter:</span><br><span class="line">            y_hat = net(X)</span><br><span class="line">            l = loss(y_hat, y).sum()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 梯度清零</span></span><br><span class="line">            <span class="keyword">if</span> optimizer <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                optimizer.zero_grad()</span><br><span class="line">            <span class="keyword">elif</span> params <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> params[<span class="number">0</span>].grad <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">for</span> param <span class="keyword">in</span> params:</span><br><span class="line">                    param.grad.data.zero_()</span><br><span class="line">                    </span><br><span class="line">            l.backward()</span><br><span class="line">            <span class="keyword">if</span> optimizer <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                d2l.sgd(params, lr, batch_size)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                optimizer.step()   <span class="comment"># "softmax回归的简洁实现"一节将用到</span></span><br><span class="line">                </span><br><span class="line">            train_l_sum += l.item()</span><br><span class="line">            train_acc_sum += (y_hat.argmax(dim=<span class="number">1</span>) == y).sum().item()</span><br><span class="line">            n += y.shape[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        test_acc = evaluate_accuracy(test_iter, net)</span><br><span class="line">        print(<span class="string">'epoch %d, loss %.4f, train acc %.3f, test acc %.3f'</span></span><br><span class="line">              % (epoch + <span class="number">1</span>, train_l_sum / n, train_acc_sum / n, test_acc))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">train_ch3(net, train_iter, test_iter, cross_entropy, num_epochs, batch_size, [W, b], lr)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">epoch 1, loss 0.7802, train acc 0.751, test acc 0.792</span><br><span class="line">epoch 2, loss 0.5707, train acc 0.812, test acc 0.811</span><br><span class="line">epoch 3, loss 0.5258, train acc 0.826, test acc 0.809</span><br><span class="line">epoch 4, loss 0.5024, train acc 0.831, test acc 0.820</span><br><span class="line">epoch 5, loss 0.4850, train acc 0.838, test acc 0.826</span><br></pre></td></tr></table></figure><h2 id="预测"><a class="markdownIt-Anchor" href="#预测"></a> 预测</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X, y = iter(test_iter).next()</span><br><span class="line"></span><br><span class="line">true_labels = d2l.get_fashion_mnist_labels(y.numpy())</span><br><span class="line">pred_labels = d2l.get_fashion_mnist_labels(net(X).argmax(dim=<span class="number">1</span>).numpy())</span><br><span class="line">titles = [true + <span class="string">'\n'</span> + pred <span class="keyword">for</span> true, pred <span class="keyword">in</span> zip(true_labels, pred_labels)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="softmax回归简洁实现"><a class="markdownIt-Anchor" href="#softmax回归简洁实现"></a> softmax回归简洁实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> init</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">".."</span>) </span><br><span class="line"><span class="keyword">import</span> d2lzh_pytorch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><h2 id="获取和读取数据-2"><a class="markdownIt-Anchor" href="#获取和读取数据-2"></a> 获取和读取数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">batch_size = <span class="number">256</span></span><br><span class="line">train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(len(train_iter))</span><br><span class="line">print(len(test_iter))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">235</span><br><span class="line">40</span><br></pre></td></tr></table></figure><h2 id="定义和初始化模型"><a class="markdownIt-Anchor" href="#定义和初始化模型"></a> 定义和初始化模型</h2><p>softmax回归的输出层是一个全连接层。因此，我们添加一个输出个数为10的全连接层。我们使用均值为0、标准差为0.01的正态分布随机初始化模型的权重参数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_inputs = <span class="number">784</span></span><br><span class="line">num_outputs = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># class LinearNet(nn.Module):</span></span><br><span class="line"><span class="comment">#     def __init__(self, num_inputs, num_outputs):</span></span><br><span class="line"><span class="comment">#         super(LinearNet, self).__init__()</span></span><br><span class="line"><span class="comment">#         self.linear = nn.Linear(num_inputs, num_outputs)</span></span><br><span class="line"><span class="comment">#     def forward(self, x): # x shape: (batch, 1, 28, 28)</span></span><br><span class="line"><span class="comment">#         y = self.linear(x.view(x.shape[0], -1))</span></span><br><span class="line"><span class="comment">#         return y</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># net = LinearNet(num_inputs, num_outputs)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlattenLayer</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(FlattenLayer, self).__init__()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span>    <span class="comment"># x shape: (batch, *, *, ...)</span></span><br><span class="line">        <span class="keyword">return</span> x.view(x.shape[<span class="number">0</span>], <span class="number">-1</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line">net = nn.Sequential(</span><br><span class="line">    <span class="comment"># FlattenLayer(),</span></span><br><span class="line">    <span class="comment"># nn.Linear(num_inputs, num_outputs)</span></span><br><span class="line">    OrderedDict(</span><br><span class="line">        [</span><br><span class="line">            (<span class="string">'fatten'</span>, FlattenLayer()), </span><br><span class="line">            (<span class="string">'linear'</span>, nn.Linear(num_inputs, num_outputs))</span><br><span class="line">        ]</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">init.normal_(net.linear.weight, mean=<span class="number">0</span>, std=<span class="number">0.01</span>)</span><br><span class="line">init.constant_(net.linear.bias, val=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Parameter containing:</span><br><span class="line">tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], requires_grad=True)</span><br></pre></td></tr></table></figure><h2 id="softmax和交叉熵损失函数"><a class="markdownIt-Anchor" href="#softmax和交叉熵损失函数"></a> softmax和交叉熵损失函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">loss = nn.CrossEntropyLoss()</span><br></pre></td></tr></table></figure><h2 id="定义优化算法"><a class="markdownIt-Anchor" href="#定义优化算法"></a> 定义优化算法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">optimizer = torch.optim.SGD(net.parameters(), lr=<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><h2 id="训练模型-2"><a class="markdownIt-Anchor" href="#训练模型-2"></a> 训练模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_epochs = <span class="number">5</span></span><br><span class="line">d2l.train_ch3(net, train_iter, test_iter, loss, num_epochs, batch_size, <span class="literal">None</span>, <span class="literal">None</span>, optimizer)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">epoch 1, loss 0.0031, train acc 0.749, test acc 0.779</span><br><span class="line">epoch 2, loss 0.0022, train acc 0.814, test acc 0.791</span><br><span class="line">epoch 3, loss 0.0021, train acc 0.826, test acc 0.809</span><br><span class="line">epoch 4, loss 0.0020, train acc 0.832, test acc 0.812</span><br><span class="line">epoch 5, loss 0.0019, train acc 0.837, test acc 0.829</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SoftmaxRegression </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-Fashion-MNIST</title>
      <link href="/post/d5e92e8c.html"/>
      <url>/post/d5e92e8c.html</url>
      
        <content type="html"><![CDATA[<h1 id="图像分类数据集"><a class="markdownIt-Anchor" href="#图像分类数据集"></a> 图像分类数据集</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">".."</span>) <span class="comment"># 为了导入上层目录的d2lzh_pytorch</span></span><br><span class="line"><span class="keyword">import</span> d2lzh_pytorch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br><span class="line">print(torchvision.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br><span class="line">0.3.0</span><br></pre></td></tr></table></figure><h2 id="获取数据集"><a class="markdownIt-Anchor" href="#获取数据集"></a> 获取数据集</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mnist_train = torchvision.datasets.FashionMNIST(root=<span class="string">'~/GitLearning/PytorchLearning/Datasets/FashionMNIST'</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>, transform=transforms.ToTensor())</span><br><span class="line">mnist_test = torchvision.datasets.FashionMNIST(root=<span class="string">'~/GitLearning/PytorchLearning/Datasets/FashionMNIST'</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>, transform=transforms.ToTensor())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(type(mnist_train))</span><br><span class="line">print(len(mnist_train), len(mnist_test))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;class &apos;torchvision.datasets.mnist.FashionMNIST&apos;&gt;</span><br><span class="line">60000 10000</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">feature, label = mnist_train[<span class="number">0</span>]</span><br><span class="line">print(feature.shape, feature.dtype)   <span class="comment"># Channel x Height X Width</span></span><br><span class="line">print(label)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">torch.Size([1, 28, 28]) torch.float32</span><br><span class="line">9</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mnist_PIL = torchvision.datasets.FashionMNIST(root=<span class="string">'~/GitLearning/PytorchLearning/Datasets/FashionMNIST'</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>)</span><br><span class="line">PIL_feature, label = mnist_PIL[<span class="number">0</span>]</span><br><span class="line">print(PIL_feature)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;PIL.Image.Image image mode=L size=28x28 at 0x12E7F7BE0&gt;</span><br></pre></td></tr></table></figure><p>Fashion-MNIST中一共包括了10个类别，分别为t-shirt（T恤）、trouser（裤子）、pullover（套衫）、dress（连衣裙）、coat（外套）、sandal（凉鞋）、shirt（衬衫）、sneaker（运动鞋）、bag（包）和ankle boot（短靴）。以下函数可以将数值标签转成相应的文本标签。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本函数已保存在d2lzh包中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_fashion_mnist_labels</span><span class="params">(labels)</span>:</span></span><br><span class="line">    text_labels = [<span class="string">'t-shirt'</span>, <span class="string">'trouser'</span>, <span class="string">'pullover'</span>, <span class="string">'dress'</span>, <span class="string">'coat'</span>,</span><br><span class="line">                   <span class="string">'sandal'</span>, <span class="string">'shirt'</span>, <span class="string">'sneaker'</span>, <span class="string">'bag'</span>, <span class="string">'ankle boot'</span>]</span><br><span class="line">    <span class="keyword">return</span> [text_labels[int(i)] <span class="keyword">for</span> i <span class="keyword">in</span> labels]</span><br></pre></td></tr></table></figure><p>下面定义一个可以在一行里画出多张图像和对应标签的函数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本函数已保存在d2lzh包中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_fashion_mnist</span><span class="params">(images, labels)</span>:</span></span><br><span class="line">    d2l.use_svg_display()</span><br><span class="line">    <span class="comment"># 这里的_表示我们忽略（不使用）的变量</span></span><br><span class="line">    _, figs = plt.subplots(<span class="number">1</span>, len(images), figsize=(<span class="number">12</span>, <span class="number">12</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> f, img, lbl <span class="keyword">in</span> zip(figs, images, labels):</span><br><span class="line">        f.imshow(img.view((<span class="number">28</span>, <span class="number">28</span>)).numpy())</span><br><span class="line">        f.set_title(lbl)</span><br><span class="line">        f.axes.get_xaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line">        f.axes.get_yaxis().set_visible(<span class="literal">False</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p>现在，我们看一下训练数据集中前10个样本的图像内容和文本标签。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X, y = [], []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    X.append(mnist_train[i][<span class="number">0</span>])</span><br><span class="line">    y.append(mnist_train[i][<span class="number">1</span>])</span><br><span class="line">show_fashion_mnist(X, get_fashion_mnist_labels(y))</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/04_Fashion-MNIST/output_12_0.svg" alt></p><h2 id="读取小批量"><a class="markdownIt-Anchor" href="#读取小批量"></a> 读取小批量</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">batch_size = <span class="number">256</span></span><br><span class="line"><span class="keyword">if</span> sys.platform.startswith(<span class="string">'win'</span>):</span><br><span class="line">    num_workers = <span class="number">0</span>  <span class="comment"># 0表示不用额外的进程来加速读取数据</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    num_workers = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">train_iter = torch.utils.data.DataLoader(mnist_train, batch_size=batch_size, shuffle=<span class="literal">True</span>, num_workers=num_workers)</span><br><span class="line">test_iter = torch.utils.data.DataLoader(mnist_test, batch_size=batch_size, shuffle=<span class="literal">False</span>, num_workers=num_workers)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">start = time.time()</span><br><span class="line"><span class="keyword">for</span> X, y <span class="keyword">in</span> train_iter:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">print(<span class="string">'%.2f sec'</span> % (time.time() - start))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.34 sec</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MNIST </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到Github失败问题</title>
      <link href="/post/72ac9e7e.html"/>
      <url>/post/72ac9e7e.html</url>
      
        <content type="html"><![CDATA[<p>失败提示如下图：</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Git/Hexo%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5%E5%9B%BE/hexodfailed.png" alt></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br></pre></td></tr></table></figure><p>然后发现ping <a href="http://www.github.com" target="_blank" rel="noopener">www.github.com</a> 也ping不通，但是可以ping通 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Git/Hexo%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5%E5%9B%BE/pinggithubfailed.jpg" alt></p><p>解决办法：</p><p>打开终端输入 sudo vim /etc/hosts</p><p>输入密码（本机密码）</p><p>然后加入（按一下键盘的 i 键，才能输入）</p><p>127.0.0.1 <a href="http://github.com" target="_blank" rel="noopener">github.com</a><br>151.101.185.194 <a href="http://github.global.ssl.fastly.net" target="_blank" rel="noopener">github.global.ssl.fastly.net</a></p><p>保存退出:wq</p><p>然后再ping <a href="http://www.github.com" target="_blank" rel="noopener">www.github.com</a> 就能成功了。</p><p>但是 hexo d 部署还是出现上面的问题。</p><p>解决办法：</p><p>打开<code>.ssh</code>文件夹下的<code>config</code>文件，添加以下内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  HostName ssh.github.com</span><br><span class="line">  Port 443</span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">  IdentityFile ~/.ssh/iwwenbo_rsa</span><br></pre></td></tr></table></figure><p>然后再 hexo d 部署一下就成功了。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署失败 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-Linear-Regression</title>
      <link href="/post/7f30013.html"/>
      <url>/post/7f30013.html</url>
      
        <content type="html"><![CDATA[<h1 id="线性回归"><a class="markdownIt-Anchor" href="#线性回归"></a> 线性回归</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = torch.ones(<span class="number">1000</span>)</span><br><span class="line">b = torch.ones(<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>将这两个向量按元素逐一做标量加法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">start = time()</span><br><span class="line">c = torch.zeros(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    c[i] = a[i] + b[i]</span><br><span class="line">print(time() - start)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.014781951904296875</span><br></pre></td></tr></table></figure><p>将这两个向量直接做矢量加法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">start = time()</span><br><span class="line">d = a + b</span><br><span class="line">print(time() - start)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.0003459453582763672</span><br></pre></td></tr></table></figure><p><strong>结果很明显，后者比前者更省时。因此，我们应该尽可能采用矢量计算，以提升计算效率。</strong></p><p>广播机制例子：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = torch.ones(<span class="number">3</span>)</span><br><span class="line">b = <span class="number">10</span></span><br><span class="line">print(a + b)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([11., 11., 11.])</span><br></pre></td></tr></table></figure><h1 id="线性回归从零开始实现"><a class="markdownIt-Anchor" href="#线性回归从零开始实现"></a> 线性回归从零开始实现</h1><p>设房屋的面积为 x1 ，房龄为 x2 ，售出价格为 y 。我们需要建立基于输入 x1 和 x2 来计算输出 y 的表达式，也就是模型（model）。顾名思义，线性回归假设输出与各个输入之间是线性关系：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>w</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>w</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">ŷ =x_1w_1+x_2w_2+b,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span></span></span></span></span></p><p>其中 w1 和 w2 是权重（weight）， b 是偏差（bias），且均为标量。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> IPython <span class="keyword">import</span> display</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br><span class="line">torch.set_default_tensor_type(<span class="string">'torch.FloatTensor'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><h2 id="生成数据集"><a class="markdownIt-Anchor" href="#生成数据集"></a> 生成数据集</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_inputs = <span class="number">2</span></span><br><span class="line">num_examples = <span class="number">1000</span></span><br><span class="line">true_w = [<span class="number">2</span>, <span class="number">-3.4</span>]</span><br><span class="line">true_b = <span class="number">4.2</span></span><br><span class="line">features = torch.randn(num_examples, num_inputs)</span><br><span class="line">labels = true_w[<span class="number">0</span>] * features[:, <span class="number">0</span>] + true_w[<span class="number">1</span>] * features[:, <span class="number">1</span>] + true_b</span><br><span class="line">labels += torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">0.01</span>, size=labels.size()), dtype=torch.float)</span><br><span class="line"></span><br><span class="line"><span class="comment"># torch.tensor(np.random.normal(0, 0.01, size=labels.size()), dtype=torch.float)</span></span><br><span class="line"><span class="comment"># 是增加的随机噪声，噪声代表了数据集中无意义的干扰</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意，features的每一行是一个长度为2的向量，而labels的每一行是一个长度为1的向量（标量）。</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(features[<span class="number">0</span>], labels[<span class="number">0</span>])</span><br><span class="line">print(labels.size())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([1.0796, 0.3098]) tensor(5.3111)</span><br><span class="line">torch.Size([1000])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_svg_display</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 用矢量图显示</span></span><br><span class="line">    display.set_matplotlib_formats(<span class="string">'svg'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_figsize</span><span class="params">(figsize=<span class="params">(<span class="number">3.5</span>, <span class="number">2.5</span>)</span>)</span>:</span></span><br><span class="line">    use_svg_display()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置图的尺寸</span></span><br><span class="line">    plt.rcParams[<span class="string">'figure.figsize'</span>] = figsize</span><br><span class="line">    </span><br><span class="line"><span class="comment"># # 在../d2lzh_pytorch里面添加上面两个函数后就可以这样导入</span></span><br><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># sys.path.append("..")</span></span><br><span class="line"><span class="comment"># from d2lzh_pytorch import * </span></span><br><span class="line"></span><br><span class="line">set_figsize()</span><br><span class="line">plt.scatter(features[:, <span class="number">1</span>].numpy(), labels.numpy(), <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/PytorchLearning/03_Linear-Regression/output_16_0.svg" alt></p><h2 id="读取数据"><a class="markdownIt-Anchor" href="#读取数据"></a> 读取数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">在训练模型的时候，我们需要遍历数据集并不断读取小批量数据样本。</span></span><br><span class="line"><span class="string">这里我们定义一个函数：它每次返回batch_size（批量大小）个随机样本的特征和标签。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本函数已保存在d21zh中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">data_iter</span><span class="params">(batch_size, features, labels)</span>:</span></span><br><span class="line">    num_examples = len(features)</span><br><span class="line">    indices = list(range(num_examples))</span><br><span class="line">    random.shuffle(indices)  <span class="comment"># 样本的读取顺序是随机的</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, num_examples, batch_size):</span><br><span class="line">        <span class="comment"># 最后一次可能不足一个batch</span></span><br><span class="line">        j = torch.LongTensor(indices[i: min(i + batch_size, num_examples)])</span><br><span class="line">        <span class="keyword">yield</span> features.index_select(<span class="number">0</span>, j), labels.index_select(<span class="number">0</span>, j)</span><br></pre></td></tr></table></figure><p>让我们读取第一个小批量数据样本并打印。每个批量的特征形状为(10, 2)，分别对应批量大小和输入个数；标签形状为批量大小。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">batch_size = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter(batch_size, features, labels):</span><br><span class="line">    print(X, <span class="string">'\n'</span>, y)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[ 0.0758, -0.3826],</span><br><span class="line">        [-0.0732, -2.8249],</span><br><span class="line">        [-0.7557,  0.7309],</span><br><span class="line">        [-0.6299, -0.1189],</span><br><span class="line">        [-0.9627,  0.0947],</span><br><span class="line">        [ 1.3580,  1.2370],</span><br><span class="line">        [-0.3616,  0.3718],</span><br><span class="line">        [-0.5052, -1.4169],</span><br><span class="line">        [-1.4944, -1.5984],</span><br><span class="line">        [-0.2773, -0.4932]]) </span><br><span class="line"> tensor([ 5.6482, 13.6693,  0.2113,  3.3605,  1.9548,  2.7224,  2.2263,  7.9824,</span><br><span class="line">         6.6399,  5.3169])</span><br></pre></td></tr></table></figure><h2 id="初始化模型参数"><a class="markdownIt-Anchor" href="#初始化模型参数"></a> 初始化模型参数</h2><p>我们将权重初始化成均值为0、标准差为0.01的正态随机数，偏差则初始化成0。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w = torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">0.01</span>, (num_inputs, <span class="number">1</span>)), dtype=torch.float)</span><br><span class="line">b = torch.zeros(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>之后的模型训练中，需要对这些参数求梯度来迭代参数的值，因此我们需要创建它们的梯度。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w.requires_grad_(requires_grad=<span class="literal">True</span>)</span><br><span class="line">b.requires_grad_(requires_grad=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([0.], requires_grad=True)</span><br></pre></td></tr></table></figure><h2 id="定义模型"><a class="markdownIt-Anchor" href="#定义模型"></a> 定义模型</h2><p>使用<code>mm()</code>函数做矩阵乘法</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本函数已保存在d21zh包中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linreg</span><span class="params">(X, w, b)</span>:</span>   </span><br><span class="line">    <span class="keyword">return</span> torch.mm(X, w) + b</span><br></pre></td></tr></table></figure><h2 id="定义损失函数"><a class="markdownIt-Anchor" href="#定义损失函数"></a> 定义损失函数</h2><p>我们需要把真实值 <code>y</code> 变形成预测值 <code>y_hat</code> 的形状。以下函数返回的结果也将和 <code>y_hat</code> 的形状相同。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本函数已保存在pytorch_d2lzh包中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">squared_loss</span><span class="params">(y_hat, y)</span>:</span>  </span><br><span class="line">    <span class="keyword">return</span> (y_hat - y.view(y_hat.size())) ** <span class="number">2</span> /<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="定义优化算法"><a class="markdownIt-Anchor" href="#定义优化算法"></a> 定义优化算法</h2><p>以下的<code>sgd</code>函数实现了小批量随机梯度下降算法。它通过不断迭代模型参数来优化损失函数。这里自动求梯度模块计算得来的梯度是一个批量样本的梯度和。我们将它除以批量大小来得到平均值。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本函数已保存在pytorch_d2lzh包中方便以后使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sgd</span><span class="params">(params, lr, batch_size)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> param <span class="keyword">in</span> params:</span><br><span class="line">        <span class="comment"># 注意这里更改param时用的param.data</span></span><br><span class="line">        param.data -= lr * param.grad / batch_size</span><br></pre></td></tr></table></figure><h2 id="训练模型"><a class="markdownIt-Anchor" href="#训练模型"></a> 训练模型</h2><p>在训练中，我们将多次迭代模型参数。在每次迭代中，我们根据当前读取的小批量数据样本（特征<code>X</code>和标签<code>y</code>），通过调用反向函数<code>backward</code>计算小批量随机梯度，并调用优化算法<code>sgd</code>迭代模型参数。由于我们之前设批量大小<code>batch_size</code>为10，每个小批量的损失<code>l</code>的形状为(10, 1)。回忆一下“自动求梯度”一节。由于变量<code>l</code>并不是一个标量，运行<code>l.backward()</code>将对<code>l</code>中元素求和得到新的变量，再求该变量有关模型参数的梯度。</p><p>在一个迭代周期（epoch）中，我们将完整遍历一遍<code>data_iter</code>函数，并对训练数据集中所有样本都使用一次（假设样本数能够被批量大小整除）。这里的迭代周期个数<code>num_epochs</code>和学习率<code>lr</code>都是超参数，分别设3和0.03。在实践中，大多超参数都需要通过反复试错来不断调节。虽然迭代周期数设得越大模型可能越有效，但是训练时间可能过长。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lr = <span class="number">0.03</span></span><br><span class="line">num_epochs = <span class="number">3</span></span><br><span class="line">net = linreg</span><br><span class="line">loss = squared_loss</span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练模型一共需要num_epochs个迭代周期</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(num_epochs): </span><br><span class="line">    <span class="comment"># 在每一个迭代周期中，会使用训练数据集中所有样本一次（假设样本数能够被批量大小整除）。</span></span><br><span class="line">    <span class="comment"># X和y分别是小批量样本的特征和标签</span></span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter(batch_size, features, labels):</span><br><span class="line">        l = loss(net(X, w, b), y).sum()  <span class="comment"># l是有关小批量X和y的损失</span></span><br><span class="line">        l.backward()   <span class="comment"># 小批量的损失对模型参数求梯度</span></span><br><span class="line">        sgd([w, b], lr, batch_size)  <span class="comment"># 使用小批量随机梯度下降迭代模型参数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 不要忘了梯度清零</span></span><br><span class="line">        w.grad.data.zero_()</span><br><span class="line">        b.grad.data.zero_()</span><br><span class="line">        </span><br><span class="line">    train_l = loss(net(features, w, b), labels)</span><br><span class="line">    print(<span class="string">'epoch %d, loss %f'</span> % (epoch + <span class="number">1</span>, train_l.mean().item()))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">epoch 1, loss 0.000051</span><br><span class="line">epoch 2, loss 0.000051</span><br><span class="line">epoch 3, loss 0.000050</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(true_w, <span class="string">'\n'</span>, w)</span><br><span class="line">print(true_b, <span class="string">'\n'</span>, b)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2, -3.4] </span><br><span class="line"> tensor([[ 1.9999],</span><br><span class="line">        [-3.3999]], requires_grad=True)</span><br><span class="line">4.2 </span><br><span class="line"> tensor([4.2008], requires_grad=True)</span><br></pre></td></tr></table></figure><h1 id="线性回归的简洁实现"><a class="markdownIt-Anchor" href="#线性回归的简洁实现"></a> 线性回归的简洁实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">torch.manual_seed(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br><span class="line">torch.set_default_tensor_type(<span class="string">'torch.FloatTensor'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.1.0</span><br></pre></td></tr></table></figure><h2 id="生成数据集-2"><a class="markdownIt-Anchor" href="#生成数据集-2"></a> 生成数据集</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_inputs = <span class="number">2</span></span><br><span class="line">num_examples = <span class="number">100</span></span><br><span class="line">true_w = [<span class="number">2</span>, <span class="number">-3.4</span>]</span><br><span class="line">true_b = <span class="number">4.2</span></span><br><span class="line">features = torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, (num_examples, num_inputs)), dtype=torch.float)</span><br><span class="line">labels = true_w[<span class="number">0</span>] * features[:, <span class="number">0</span>] + true_w[<span class="number">1</span>] * features[:, <span class="number">1</span>] + true_b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上随机噪声</span></span><br><span class="line">labels += torch.tensor(np.random.normal(<span class="number">0</span>, <span class="number">0.01</span>, size=labels.size()), dtype=torch.float)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">features</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[ 0.1243, -0.5666],</span><br><span class="line">        [ 1.7075, -1.6025],</span><br><span class="line">        [ 0.8301,  0.2019],</span><br><span class="line">        [ 1.0534,  0.1100],</span><br><span class="line">        [ 2.4399, -0.4741],</span><br><span class="line">        [-0.0539,  0.0243],</span><br><span class="line">        [ 1.4430, -1.4239],</span><br><span class="line">        [-0.6309, -0.6679],</span><br><span class="line">        [-0.2309, -0.5457],</span><br><span class="line">        [ 1.6393,  1.2493],</span><br><span class="line">        [-0.0947,  0.1160],</span><br><span class="line">        [ 0.4428, -0.8794],</span><br><span class="line">        [-1.5046,  1.1385],</span><br><span class="line">        [ 1.3436, -0.7787],</span><br><span class="line">        [-1.7918, -1.1573],</span><br><span class="line">        [-1.5081, -0.3098],</span><br><span class="line">        [ 1.1218,  0.2899],</span><br><span class="line">        [ 0.1286, -0.2290],</span><br><span class="line">        [-0.1047,  0.5363],</span><br><span class="line">        [-0.2209, -0.3525],</span><br><span class="line">        [ 0.1808, -0.5736],</span><br><span class="line">        [-1.2324,  0.2134],</span><br><span class="line">        [ 0.3638,  0.9431],</span><br><span class="line">        [-2.2382, -1.2264],</span><br><span class="line">        [-0.3424, -1.4127],</span><br><span class="line">        [-0.6259, -0.5414],</span><br><span class="line">        [ 1.5641, -1.0523],</span><br><span class="line">        [-0.1465,  1.9687],</span><br><span class="line">        [-2.0239,  1.3050],</span><br><span class="line">        [ 0.6236,  0.9445],</span><br><span class="line">        [-1.8673, -0.2439],</span><br><span class="line">        [ 1.0122, -0.5010],</span><br><span class="line">        [ 0.7602, -0.6323],</span><br><span class="line">        [-1.1825, -0.4863],</span><br><span class="line">        [ 0.4238, -1.1245],</span><br><span class="line">        [ 0.6046,  0.0247],</span><br><span class="line">        [-0.0610,  0.0560],</span><br><span class="line">        [ 0.8459,  1.9671],</span><br><span class="line">        [-1.5314,  1.9764],</span><br><span class="line">        [-0.0863,  0.3367],</span><br><span class="line">        [ 0.4751, -1.4216],</span><br><span class="line">        [-2.3350, -1.5692],</span><br><span class="line">        [-0.0806,  1.0371],</span><br><span class="line">        [ 2.2874, -0.2344],</span><br><span class="line">        [ 0.7814,  0.5793],</span><br><span class="line">        [ 0.3327, -0.3436],</span><br><span class="line">        [ 1.1383, -1.5865],</span><br><span class="line">        [ 0.3443, -1.1161],</span><br><span class="line">        [-0.1329, -0.5532],</span><br><span class="line">        [ 0.4722, -1.0481],</span><br><span class="line">        [-0.1027,  0.3339],</span><br><span class="line">        [ 1.7872, -0.5495],</span><br><span class="line">        [ 0.5177, -0.9145],</span><br><span class="line">        [-0.7556, -0.3341],</span><br><span class="line">        [ 1.3349,  0.1399],</span><br><span class="line">        [-0.3999,  0.6756],</span><br><span class="line">        [ 0.7278, -0.0186],</span><br><span class="line">        [ 0.1343, -2.8902],</span><br><span class="line">        [ 1.3208, -0.0030],</span><br><span class="line">        [ 0.7743, -0.4380],</span><br><span class="line">        [-1.4138, -0.1755],</span><br><span class="line">        [-0.2573, -1.5179],</span><br><span class="line">        [ 1.5327, -0.1858],</span><br><span class="line">        [ 0.0104, -1.1359],</span><br><span class="line">        [-0.8267,  0.2327],</span><br><span class="line">        [-0.3347,  1.2213],</span><br><span class="line">        [-0.2930,  1.4084],</span><br><span class="line">        [ 0.0039, -0.7128],</span><br><span class="line">        [ 0.2927,  1.3857],</span><br><span class="line">        [-1.3342,  1.7952],</span><br><span class="line">        [ 1.3093,  0.1347],</span><br><span class="line">        [ 0.6866, -1.5838],</span><br><span class="line">        [ 0.2249,  1.3329],</span><br><span class="line">        [-2.1616, -0.8585],</span><br><span class="line">        [-0.1465, -0.4043],</span><br><span class="line">        [ 1.3356, -0.3467],</span><br><span class="line">        [ 0.1955,  0.6419],</span><br><span class="line">        [ 0.6358,  2.5126],</span><br><span class="line">        [-1.9304,  0.1323],</span><br><span class="line">        [ 0.1517,  0.7876],</span><br><span class="line">        [-1.2069,  1.0423],</span><br><span class="line">        [ 0.1724,  0.2650],</span><br><span class="line">        [-1.1125, -0.3688],</span><br><span class="line">        [-0.5661, -0.1372],</span><br><span class="line">        [ 0.5544, -1.0634],</span><br><span class="line">        [ 0.3861, -0.2862],</span><br><span class="line">        [-2.0400, -0.1196],</span><br><span class="line">        [-0.2448,  0.6680],</span><br><span class="line">        [ 0.6154,  1.1794],</span><br><span class="line">        [ 0.4105, -0.6895],</span><br><span class="line">        [ 1.8495,  0.4164],</span><br><span class="line">        [ 0.0693, -1.4827],</span><br><span class="line">        [ 0.2276, -0.8581],</span><br><span class="line">        [-0.1439, -0.1953],</span><br><span class="line">        [ 0.6906, -1.6262],</span><br><span class="line">        [-0.3355,  1.4109],</span><br><span class="line">        [ 0.1661, -1.3578],</span><br><span class="line">        [ 0.1400,  0.2831],</span><br><span class="line">        [-2.2244, -0.0052],</span><br><span class="line">        [ 0.1870,  0.6322]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">labels</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([ 6.3582, 13.0468,  5.1703,  5.9370, 10.6816,  4.0108, 11.9330,  5.2226,</span><br><span class="line">         5.5883,  3.2406,  3.6132,  8.0711, -2.6950,  9.5377,  4.5423,  2.2213,</span><br><span class="line">         5.4405,  5.2333,  2.1839,  4.9762,  6.5070,  0.9976,  1.7188,  3.8831,</span><br><span class="line">         8.3345,  4.7859, 10.8829, -2.7822, -4.2824,  2.2112,  1.3012,  7.9229,</span><br><span class="line">         7.8523,  3.5080,  8.8797,  5.3386,  3.8763, -0.7937, -5.6060,  2.8852,</span><br><span class="line">         9.9732,  4.8737,  0.5205,  9.5834,  3.8199,  6.0169, 11.8725,  8.6902,</span><br><span class="line">         5.8258,  8.7158,  2.8549,  9.6557,  8.3736,  3.8157,  6.3899,  1.1137,</span><br><span class="line">         5.7034, 14.2933,  6.8431,  7.2523,  1.9778,  8.8505,  7.8973,  8.0876,</span><br><span class="line">         1.7574, -0.6365, -1.1802,  6.6373,  0.0778, -4.5783,  6.3599, 10.9425,</span><br><span class="line">         0.1049,  2.7995,  5.2798,  8.0636,  2.4182, -3.0564, -0.1136,  1.8242,</span><br><span class="line">        -1.7579,  3.6434,  3.2396,  3.5254,  8.9399,  5.9625,  0.5436,  1.4391,</span><br><span class="line">         1.4254,  7.3642,  6.4810,  9.3788,  7.5766,  4.5753, 11.1097, -1.2708,</span><br><span class="line">         9.1500,  3.5305, -0.2608,  2.4223])</span><br></pre></td></tr></table></figure><h2 id="读取数据-2"><a class="markdownIt-Anchor" href="#读取数据-2"></a> 读取数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.utils.data <span class="keyword">as</span> Data</span><br><span class="line"></span><br><span class="line">batch_size = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将训练数据的特征和标签组合</span></span><br><span class="line"><span class="comment"># 将数据集转成 torch 能识别的 dataset</span></span><br><span class="line">dataset = Data.TensorDataset(features, labels)</span><br><span class="line"><span class="comment"># print(dict(dataset))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 dataset 放入 DataLoader，可以生成一个迭代器，从而我们可以方便的进行批处理。</span></span><br><span class="line">data_iter = Data.DataLoader(</span><br><span class="line">    dataset = dataset,         <span class="comment"># torch TensorDataset format</span></span><br><span class="line">    batch_size = batch_size,   <span class="comment"># mini batch size</span></span><br><span class="line">    shuffle = <span class="literal">False</span>,            <span class="comment"># 要不要打乱数据（打乱比较好）</span></span><br><span class="line">    num_workers = <span class="number">2</span>,           <span class="comment"># 多线程来读数据</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>dataset：Dataset类型，从其中加载数据<br>batch_size：int，可选。每个batch加载多少样本<br>shuffle：bool，可选。为True时表示每个epoch都对数据进行洗牌<br>sampler：Sampler，可选。从数据集中采样样本的方法。<br>num_workers：int，可选。加载数据时使用多少子进程。默认值为0，表示在主进程中加载数据。<br>collate_fn：callable，可选。<br>pin_memory：bool，可选。<br>drop_last：bool，可选。True表示如果最后剩下不完全的batch,丢弃。False表示不丢弃。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter:</span><br><span class="line">    print(X, <span class="string">'\n'</span>, y)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tensor([[ 0.1243, -0.5666],</span><br><span class="line">        [ 1.7075, -1.6025],</span><br><span class="line">        [ 0.8301,  0.2019],</span><br><span class="line">        [ 1.0534,  0.1100],</span><br><span class="line">        [ 2.4399, -0.4741],</span><br><span class="line">        [-0.0539,  0.0243],</span><br><span class="line">        [ 1.4430, -1.4239],</span><br><span class="line">        [-0.6309, -0.6679],</span><br><span class="line">        [-0.2309, -0.5457],</span><br><span class="line">        [ 1.6393,  1.2493]]) </span><br><span class="line"> tensor([ 6.3582, 13.0468,  5.1703,  5.9370, 10.6816,  4.0108, 11.9330,  5.2226,</span><br><span class="line">         5.5883,  3.2406])</span><br></pre></td></tr></table></figure><h2 id="定义模型-2"><a class="markdownIt-Anchor" href="#定义模型-2"></a> 定义模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinearNet</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, n_feature)</span>:</span></span><br><span class="line">        super(LinearNet, self).__init__()</span><br><span class="line">        self.LinearNet = nn.Linear(n_feature, <span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        y = self.linear(x)</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">    </span><br><span class="line">net = LinearNet(num_inputs)</span><br><span class="line">print(net)     <span class="comment"># 打印出网络结构</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LinearNet(</span><br><span class="line">  (LinearNet): Linear(in_features=2, out_features=1, bias=True)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>Sequential</code>实例可以看作是一个串联各个层的容器。在构造模型时，我们在该容器中依次添加层。当给定输入数据时，容器中的每一层将依次计算并将输出作为下一层的输入。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写法一</span></span><br><span class="line">net = nn.Sequential(</span><br><span class="line">    nn.Linear(num_inputs, <span class="number">1</span>)   <span class="comment"># nn.Linear(input_size, output_size)</span></span><br><span class="line">    <span class="comment"># 此处还可以传入其他层</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写法二</span></span><br><span class="line">net = nn.Sequential()</span><br><span class="line">net.add_module(<span class="string">'linear'</span>, nn.Linear(num_inputs, <span class="number">1</span>))</span><br><span class="line"><span class="comment"># net.add_module</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写法三</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line">net = nn.Sequential(</span><br><span class="line">    OrderedDict(</span><br><span class="line">        [</span><br><span class="line">            (<span class="string">'linear'</span>, nn.Linear(num_inputs, <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># ......</span></span><br><span class="line">        ]</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(net)</span><br><span class="line">print(net[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sequential(</span><br><span class="line">  (linear): Linear(in_features=2, out_features=1, bias=True)</span><br><span class="line">)</span><br><span class="line">Linear(in_features=2, out_features=1, bias=True)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(list(net.parameters()))    <span class="comment"># weight 和 bias</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Parameter containing:</span><br><span class="line">tensor([[0.1465, 0.2274]], requires_grad=True), Parameter containing:</span><br><span class="line">tensor([0.5282], requires_grad=True)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> net.parameters():</span><br><span class="line">    print(param)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Parameter containing:</span><br><span class="line">tensor([[0.2274, 0.5282]], requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([0.6705], requires_grad=True)</span><br></pre></td></tr></table></figure><h2 id="初始化模型参数-2"><a class="markdownIt-Anchor" href="#初始化模型参数-2"></a> 初始化模型参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> init</span><br><span class="line"></span><br><span class="line">init.normal_(net[<span class="number">0</span>].weight, mean=<span class="number">0.0</span>, std=<span class="number">0.01</span>)</span><br><span class="line">init.constant_(net[<span class="number">0</span>].bias, val=<span class="number">0.0</span>)  </span><br><span class="line"><span class="comment"># 也可以直接修改bias的data: net[0].bias.data.fill_(0)</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Parameter containing:</span><br><span class="line">tensor([0.], requires_grad=True)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> net.parameters():</span><br><span class="line">    print(param)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Parameter containing:</span><br><span class="line">tensor([[ 0.0031, -0.0114]], requires_grad=True)</span><br><span class="line">Parameter containing:</span><br><span class="line">tensor([0.], requires_grad=True)</span><br></pre></td></tr></table></figure><h2 id="定义损失函数-2"><a class="markdownIt-Anchor" href="#定义损失函数-2"></a> 定义损失函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">loss = nn.MSELoss()</span><br></pre></td></tr></table></figure><h2 id="定义优化算法-2"><a class="markdownIt-Anchor" href="#定义优化算法-2"></a> 定义优化算法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"></span><br><span class="line">optimizer = optim.SGD(net.parameters(), lr=<span class="number">0.03</span>)</span><br><span class="line">print(optimizer)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SGD (</span><br><span class="line">Parameter Group 0</span><br><span class="line">    dampening: 0</span><br><span class="line">    lr: 0.03</span><br><span class="line">    momentum: 0</span><br><span class="line">    nesterov: False</span><br><span class="line">    weight_decay: 0</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 为不同子网络设置不同的学习率</span></span><br><span class="line"><span class="comment"># optimizer =optim.SGD([</span></span><br><span class="line"><span class="comment">#                 # 如果对某个参数不指定学习率，就使用最外层的默认学习率</span></span><br><span class="line"><span class="comment">#                 &#123;'params': net.subnet1.parameters()&#125;, # lr=0.03</span></span><br><span class="line"><span class="comment">#                 &#123;'params': net.subnet2.parameters(), 'lr': 0.01&#125;</span></span><br><span class="line"><span class="comment">#             ], lr=0.03)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># # 调整学习率</span></span><br><span class="line"><span class="comment"># for param_group in optimizer.param_groups:</span></span><br><span class="line"><span class="comment">#     param_group['lr'] *= 0.1 # 学习率为之前的0.1倍</span></span><br></pre></td></tr></table></figure><h2 id="训练模型-2"><a class="markdownIt-Anchor" href="#训练模型-2"></a> 训练模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_epochs = <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(<span class="number">1</span>, num_epochs + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter:</span><br><span class="line">        output = net(X)   <span class="comment"># X是数据(特征向量)，y是标签(scalar)</span></span><br><span class="line">        l = loss(output, y.view(<span class="number">-1</span>, <span class="number">1</span>))</span><br><span class="line">        optimizer.zero_grad()  <span class="comment"># 梯度清零，等价于net.zero_grad()</span></span><br><span class="line">        l.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">    print(<span class="string">'epoch %d, loss: %f'</span> % (epoch, l.item()))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">epoch 1, loss: 11.934128</span><br><span class="line">epoch 2, loss: 2.813488</span><br><span class="line">epoch 3, loss: 0.671115</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dense = net[<span class="number">0</span>]</span><br><span class="line">print(true_w, dense.weight.data)</span><br><span class="line">print(true_b, dense.bias.data)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[2, -3.4] tensor([[ 1.8862, -3.0119]])</span><br><span class="line">4.2 tensor([3.6755])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LinearRegression </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习13-表达和回应赞美</title>
      <link href="/post/38c7e284.html"/>
      <url>/post/38c7e284.html</url>
      
        <content type="html"><![CDATA[<p>表达和回应赞美</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><p>1.Excellent 优秀的<br>2.Talented 有才华的<br>3.Compliment 赞赏；恭维<br>4.Kudos 称赞；荣誉<br>5.Noticing 注意到<br>6.Flattered 受宠若惊的</p><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><p>1.That looks great.<br>那看起来很好。<br>2.You’re doing an excellent job.<br>你做得很好。<br>3.You are so talented.<br>你真的好有天份。<br><a href="http://4.It" target="_blank" rel="noopener">4.It</a> was a compliment.<br>刚才说的是赞美。<br>5.Kudos on the hand washing.<br>手洗得真好。<br>6.Did you get a new haircut?<br>你换发型了？<br>7.Thank you for noticing.<br>谢谢你注意到了。<br>8.I’m flattered.<br>我深感荣幸。</p><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>有时听到一句真心的夸奖，感觉一整天的心情都被点亮了呢！如果别人向你表示赞美，又该怎么回应？跟着电影和美剧里的主人公一起表达“走心”的赞赏吧。</p><ol><li>That looks great. 那看起来很好。<br>Sth. looks great.</li></ol><p>Look great, 指“看起来真好”。可以用在形容人或物品。<br>如果用来形容人：you look great，通常是说对方“看起来气色很好”，或者“打扮得很漂亮”。<br>更多表达：<br>听到类似的“赞赏”该如何回应呢？<br>Thank you. 谢谢你。（简单地道谢）<br>Thanks, I appreciate the compliment. 谢谢你的赞赏。（很有礼貌地回应）<br>Thanks, so do you! 谢谢，你也是！（“反手就给对方一个赞”）<br>注意：尽量不要“拒绝”对方的“恭维”，容易让别人觉得你很没自信或你是在期待更多的赞美。<br>发音(美式K.K.音标)：<br>That looks great.<br>[ðæ(t) lʊks ɡre(t)]<br>(That和great的/t/音失爆；注意重音放在great上面，以强调句子的重点信息；感叹句的语调上扬：<br>That looks great(↗).）</p><ol start="2"><li>You’re doing an excellent job. 你做得很好。<br>Sb. is doing an excellent job.</li></ol><p>Be doing an excellent job：指“现在做得很出色”。<br>这里的job并不是指“工作”，可以泛指任何一件任务、项目、作品或其他事情。<br>更多表达：<br>Good job！做得好！<br>Well done！做得好！<br>口语中还有几个常用的excellent的同义词：fantastic/terrific/wonderful/amazing/awesome，它们的夸奖力度听起来比“great”或“excellent”要更高。<br>注意：You’re doing great不一定指“你做得很好”，在某些语境里也有“你(生活)过得很好”的意思。<br>发音(美式K.K.音标)：<br>You’re doing an excellent job.<br>[jɔrˈduɪ(y)ənˈɛksələn(t)dʒɑ:b]<br>(连读doing an excellent job；doing an之间的元音+元音的连读由滑音/y/来过渡； excellent 的/t/音失爆，因为紧挨着另一个爆破音/d/；excellent 词内有一个辅音连缀/ks/，属于中国学生的发音难点之一，因汉语里没有类似的发音现象，很容易把/k/音掠过。试试先把/k/和/s/两个音素分开练习，最后再连起来念）</p><ol start="3"><li>You are so talented. 你真有才华。<br>Sth. is so talented.</li></ol><p>当别人向你展示自己动手做的某物，除了赞美这个物品，不要忘记夸奖对方：你好有天赋。<br>Talented，“有才华”的意思，指“天生具有把事情做好的能力”。<br>更多表达：<br>其他“有才华”的高频词组：</p><ol><li>Skillful: 擅长某事，尤指需要特殊能力或训练的事情。</li><li>Good at something：能够把某事做好。</li><li>Skilled：技能方面很擅长，在拥有大量的培训和经验之后才能够做好的工作。</li><li>Gifted: 具有一种很少人有的伟大的天赋。<br>发音(美式K.K.音标)：<br>You are so talented…<br>[ju(w)ɑr soˈtæləntɪ(d)]<br>(连读You are; 注意这里没有使用缩约式you’re，因为说话者想要表达赞美和惊叹；You are之间元音+元音的连读由滑音/w/来过渡；talented的/d/音失爆，只做口型不发音；另外，talented的/t/虽然在/n/后面，但/tɪ/作为单词内的次重音音节，音素正常发音）</li><li>It was a compliment. 刚才说的是赞美。<br>Sth. was a compliment.</li></ol><p>并不是所有的“赞美”能让对方秒懂，有时候也需要我们提醒：刚才我说的那句话是赞美来的。<br>正如片段里的“钢铁直男”Sheldon。他说Penny很会利用亲密关系来交换物质，Penny问：What was that？你刚才说的是什么意思？Sheldon看出来Penny不开心了，立马说：安心啦，我刚才是在赞美你。<br>采用一般过去式it was，为了突出是一句“说过的”、发生在之前的话。<br>注意：compliment和complement是同音词，但是意思完全不同。Complement是“补充”；“补足语”的意思。 小贴士：把complement里的e字母拿出来，联想extra（附加的）；把compliment里的字母i拿出来，联想I like it（我喜欢它）。<br>发音(美式K.K.音标)：<br>It was a compliment.<br>[ɪ(t)wɒzeˈkɑmpləmən(t)]<br>(连读It was a；It 的/t/音失爆；compliment在词尾的/t/音失爆，因为前面紧挨着/n/音；重读compliment）</p><ol start="5"><li>Kudos on the hand washing. 手洗得真好。<br>Kudos on sth.</li></ol><p>背景提示：说话者Sheldon在洗手间观察一个男生是怎么洗手的，作为一名完美主义者+“洁癖控”，Sheldon非常欣赏对方洗手的方式，他不由自主地赞叹：你洗手洗得真好。<br>Kudos，指“因某一特定行为或成就而获得的赞赏和认可”。<br>更多表达：<br>除了kudos on sth. ，kudos for sth. 也表达了“因为某行为而赞赏”的意思。<br>Kudos to Julie for her hard work. 朱莉工作努力，值得称赞。<br>单独说“kudos”也有表扬的意思，类似汉语里的“为你点赞”。<br>发音(美式K.K.音标)：<br>Kudos on the hand washing.<br>[ˈkudoʊ(s)ɑnðə hæn(d)ˈwɑʃɪŋ]<br>(连读Kudos on; kudos 的/s/音浊化成/z/；hand的/d/音失爆；注意语调的起伏：<br>Kudos(↘) on the hand(↗) washing(↘) . ）</p><ol start="6"><li>Did you get a new haircut? 你换发型了？<br>Did you get a new sth.？</li></ol><p>Get a new haircut, 指“换发型”，或“剪头发”。记得采用一般过去时，因为是发生在以前，而且已经完成的动作。<br>其实，这句话不一定是真的在问对方“是否换了发型”，但可以用来形容别人看上去和之前“不一样”，甚至“更好了”。算是一种比较微妙的赞美。<br>更多表达：<br>What did you do to your hair? You look different. 你的头发怎么了?你看起来不一样。<br>What did you do? You look fabulous. 你做了什么? 你看起来棒极了。<br>发音(美式K.K.音标)：<br>Did you get a new haircut?<br>[dɪdju ɡɛ(t)e nuˈhɛrkʌ(t)]<br>(连读Did you和get a；注意did you的/d/+/j/会变音成/dʒ/；get里的/t/位于两个元音之间, 所以浊化成/d/音；haircut的/t/音失爆；一般疑问句，而且是确认某事的问题，一般用升调：<br>Did you get a new haircut (↗)？）</p><ol start="7"><li>Thank you for noticing. 谢谢你注意到了。<br>Thank you for noticing（sth.）</li></ol><p>当别人赞美你的衣服、发型和其他外表上的变化时，侧面证明TA有仔细观察你，这时可以感谢对方留意到了你的“不一样”。<br>更多表达：<br>试试把动词换成say:<br>Thank you for saying that. 谢谢你这么说。<br>也可以有“讽刺”的意思，用来嘲讽对方忽略了自己。<br>比如，自己穿了漂亮的裙子，心里美滋滋的，但丈夫看了都没有任何表示，妻子就会说：<br>I put on a really nice dress. Thank you for noticing! 我穿上了一件非常漂亮的衣服。谢谢你注意到了!（其实是质问丈夫：你怎么都没留意？！）<br>发音(美式K.K.音标)：<br>Thank you for noticing.<br>[θæŋkju fɚ ˈnoʊ(t)ɪsɪŋ]<br>(连读thank you；noticing的/t/音有浊化成/d/音的现象，因它位于两个元音之间+非重读音节；句子的重音放在noticing）<br>（*此类发音现象不是“规则”，而是可能存在的美式发音“规律”；会因为场合和说话者的发音习惯等其他原因而改变）</p><ol start="8"><li>I’m flattered. 我深感荣幸。</li></ol><p>背景提示：老先生带朋友到一家高档餐厅，他以前都是带妻子来，这是第一次带男士过来。朋友立马回应：我受宠若惊啊。<br>Flattered, （flatter的过去分词）；有“过分夸赞”的意思，指“通过赞扬来取悦某人；使某人感到自己很重要或有吸引力”。<br>I am flattered，从字面上去理解是“我被过分夸赞了”，其实和中文里“您过奖了”的意思相同。<br>更多表达：<br>特别适合去回应一些“高度赞扬”，尤其当你觉得赞美有点“夸张”了。<br>有时也能当成“拒绝”的开场白：</p><ul><li>You are really talented. Any interest in working for us?<br>-你真的很有天赋。有兴趣为我们工作吗?</li><li>I’m flattered, but I’m afraid that’s not an option.<br>-过奖了，但恐怕不行。</li></ul><p>发音(美式K.K.音标)：<br>I’m flattered.<br>[aɪmˈflæ(t)ərd]<br>(flattered的/t/音浊化成/d/音，因为位于两个元音之间，而且不是重读音节；句尾的/d/音失爆；句子重音在flattered：I’m fla-(↗) -ttered(↘) ）<br>(小贴士：说的时候尝试微笑，让/æ/的发音更到位)</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习12-主动说Hi</title>
      <link href="/post/16703b06.html"/>
      <url>/post/16703b06.html</url>
      
        <content type="html"><![CDATA[<p>随时随地，主动说“Hi!”</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><p>1.Doing v. (动词Do的-ing形式)指人的状态<br>2.Going v. (动词Go的-ing形式)指事情的情况<br>3.Tonight adv. 今晚<br>4.Nothing n. 没有事情<br><a href="http://5.As" target="_blank" rel="noopener">5.As</a> usual 像往常一样</p><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><p>1.Hello, everyone.<br>嗨，你们好。<br>2.How are you tonight?<br>今晚你心情怎样？<br>3.How are you doing?<br>你怎么样啊？<br>4.How is it going?<br>最近怎么样？<br>5.What’s new with you?.<br>最近有什么新鲜事？<br><a href="http://6.It" target="_blank" rel="noopener">6.It</a>’s nice to see you.<br>见到你真好。<br>7.How about you?<br>你呢？</p><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>翻开小时候的课本，看到“how do you do? I am fine, thank you, and you?” 。听起来耳熟又生硬。这样标准化的课本英语，textbook English，并不能够彰显你的个性，更不能帮助你应对不同的场合。</p><p>Let’s learn how to greet. 来学习如何打招呼吧。</p><ol><li>Hello everyone. 嗨，你们好。</li></ol><p>Hello/Hi/Hey + everyone/girls/guys.<br>Hello, hi和hey都是常用的开头。<br>更多表达：<br>如果对方全是女生，girls或ladies; 男生就用boys或gentlemen。<br>对男女都可以用guys（非正式，适合朋友和亲人）;<br>如果面对一大群人，everyone, everybody 或者all都可以。<br>最常遇到的还是直接说对方的名字：<br>-Hi, Jerry.<br>-Hello, Tom！</p><ol start="2"><li>How are you tonight? 今晚你心情怎样？<br>How are you+时间？</li></ol><p>（Today=今天；你今天心情好吗？）<br>Tonight是今晚。<br>早上=morning；how are you this morning？<br>今天=today；how are you today?<br>如何回应How are you?：<br>Good, well 或者not bad都很常用。<br>注意：I’m fine在生活口语里很少用来回应问候。在很多美式口语的语境里，“I’m fine”表示不耐烦、说反话、刻意疏远等负面的语气。<br>比如：<br>-Are you doing ok? 你还好吗？<br>-I’m fine！我很“好”！<br>或者：<br>-Do you need help? 你需要帮助吗？<br>-I’m fine！我很“好”！</p><ol start="3"><li>How are you doing? 你怎么样啊？<br>How are you+doing?</li></ol><p>（“老友记”里Joey的撩妹金句）<br>口语里are被省略了。会常常听到How you doing?<br>如何回应how are you doing?<br>对方问的是you，用I来回答就好：<br>I am doing good或直接说good。<br>今天心情不好：<br>I’m not doing well 或直接说not so well.</p><ol start="4"><li>How’s it going? 最近怎么样？<br>How is it+going?</li></ol><p>对比how are you doing和how’s it going:<br>Doing, 常指“人的状态”；而going，更多是在说“事情的状况”。<br>更多表达：<br>How’s everything？一切都好吗？<br>问候家庭：<br>How’s everything at home?<br>问候工作情况：<br>How’s it going at work?</p><p>发音：常把how is it缩写成how’s it。It的/t/音在词尾被省读，后面紧接着发going。学会掌控语调和节奏会让发音更流畅。<br>如何回应how’s it going?<br>It’s going +形容词。<br>比如it’s going great 或 great。</p><ol start="5"><li>What’s new with you? 最近有什么新鲜事？<br>What is new+with you?</li></ol><p>New表示新的。字面理解就是“有什么和你相关的新鲜事”。<br>发音：连读what is。而new是这句话的焦点词，所以要突出发音。<br>美式英语里的发音有[nu:]和[nju:]。<br>更多表达：<br>简短版：What’s new？<br>超级亲密版：What’s up？<br>如何回应 what’s new with you?<br>没什么新鲜事：not much, nothing much, nothing new等。<br>和平常一样：as usual，same as usual, same old same old等。<br>直接分享新鲜事： I have a new job! 我换了新工作！</p><ol start="6"><li>It’s nice to see you. 很高兴见到你。<br>It is 形容词+动词不定式</li></ol><p>更多表达：<br>替换形容词：good, great, wonderful等。<br>替换动词: to meet, to talk to, to run into等。<br>简短版：Nice to see you.<br>发音：连读it is成it’s。另外, 要把重音放在形容词nice和动词see上，因为都是本句的重点信息。<br>如何回应it’s nice to see you.<br>回答you, too就可以完美代替it’s nice to see you，too这类“课本英语”。</p><ol start="7"><li>How about you? 你呢？</li></ol><p>反问的表达除了and you? 还有how about you?<br>更多表达：<br>What about you？你呢？<br>可以用how代替what。<br>发音：连读what about you。About词尾的/t/音加上you开头的/j/音会形成/ʧ/音。<br>注意：这类连读导致音变是一种发音现象，但不是“绝对法则”。仔细听视频里的对话，并不是所有人都会发/ʧ/音。这和每个人的发音习惯有关。</p><p>以上打招呼的句子都掌握了吗？快去认识新朋友吧。可以这样开头哦：<br>很开心遇到大家！Nice to meet you all!</p><p>See you next time! 我们下次见啦！</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习11-10句话助你开启闲聊模式</title>
      <link href="/post/d42fe87e.html"/>
      <url>/post/d42fe87e.html</url>
      
        <content type="html"><![CDATA[<p>10句话助你开启闲聊模式</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><ol><li>I’d like [aɪd laɪk] (缩略) 我想要…</li><li>introduce [ˌɪntrəˈdu:s] v. 介绍</li><li>living [ˈlɪvɪŋ] n. 生计，生活</li><li>off [ɔ:f] prep. 离开</li><li>think of [θɪŋk əv] (动词词组) 认为，觉得</li><li>news [nuz] n. 新闻, 消息</li><li>get [ɡɛt] v. 得到, 买到。</li></ol><p> </p><hr><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><ol><li>This is my wife, Rose.<br>这是我太太Rose。</li><li>I’d like you to meet Janine.<br>我想让你们认识一下Janine。</li><li>Where are you from?<br>你是哪里人？</li><li>What do you do for a living?<br>你的工作是什么？</li><li>What do you do for fun?<br>你平时都喜欢玩些什么？</li><li>Where are you off to?<br>你要去哪儿？</li><li>What do you think of him?<br>你觉得他怎么样？</li><li>Did you hear the news?<br>你听说那个消息了吗？</li><li>I love your watch！<br>我喜欢你的手表！<br>10.Where’d you get it?<br>你在哪里买的？</li></ol><p> </p><hr><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><h2 id="part-1介绍"><a class="markdownIt-Anchor" href="#part-1介绍"></a> Part 1：介绍</h2><ol><li>This is my wife, Rose. 这是我太太Rose。<br>This is +某人，名字</li></ol><p>介绍别人时，除了名字和称呼，还可以提工作。<br>He’s a teacher. 他是位老师。<br>He’s in charge. 他是负责人。<br>更多表达：<br>That’s my boyfriend, Tom. 把this换成that。<br>发音：This和is连读成 /ðɪsɪz/；that和is连读成/ðæts/。<br>发th- /ð/时，双唇微开，上下齿自然分开轻咬舌尖，只允许少量气息从牙缝流出。要振动声带。</p><ol start="2"><li>I’d like you to meet Janine.  我想让你们认识一下Janine。<br>I would like +you +to meet 某人<br>I would like 是 I want 的客气版。I would like在口语中简化成 I’d like [aɪd laɪk]。<br>更多表达：<br>Let me introduce you to Janine. 让我来向你(们)介绍Janine。<br>Let me 对比 I’d like you：<br>Let me 的说法比较主动，有气场。</li></ol><p>发音：I’d [aɪd] 的d音很轻或不发音，但要留位置。<br>讲出被介绍人的名字，语调上扬, 突出焦点词Janine。</p><h2 id="part-2-提问"><a class="markdownIt-Anchor" href="#part-2-提问"></a> Part 2: 提问</h2><ol start="3"><li>Where are you from? 你是哪里人?<br>Where +are you from？<br>很耳熟吧？仿佛已经听到了你的回答：China！<br>标准回答：<br>出生地 VS 居住地<br>1.I’m from China. 我来自中国。<br>2.I’m based in Australia, but originally from China. 我现在居住在澳洲，但我是中国人。</li></ol><p>礼貌版：<br>I’d like to know where you are from. 添加前缀, 如前面学的I’d like。<br>注意：不要说成 “where are you come from?”。</p><ol start="4"><li>What do you do for a living? 你的工作是什么？<br>What do you do +for a living<br>Living是生计的意思。<br>字面直译：为了“生计”你都做些什么？<br>比 what’s your job 要更地道。<br>更多表达：<br>简短版: What do you do？<br>注意：不要说成 “how do you do?”。</li></ol><p>标准回答:<br>I work as a Didi driver. 我是滴滴司机。<br>I work for the government. 我是公务员。<br>I work in retails. 我做零售的。<br>分析：不同的介词后跟不同的内容。【as】跟具体的职业；【for】跟具体的单位；【in】则跟具体的领域。</p><ol start="5"><li>What do you do for fun? 你平时都喜欢玩些什么？<br>What do you do +for fun</li></ol><p>Fun是指有趣的事，句型结构和上一句类似。<br>字面直译：为了“开心”你都做什么？<br>比 what are your hobbies？要自然和随意。</p><p>标准回答:<br>I’m a movie person. 我喜欢看电影。<br>a + 名词 + person = 喜欢…的人<br>例：<br>喜欢听音乐的人 a music person<br>喜欢做运动的人 a sport person<br>喜欢坐火车的人 a train person</p><ol start="6"><li>Where are you off to? 你要去哪儿？<br>Where are you +off to<br>聚会时有人拿着大衣，一副准备离开的样子，你可以问 where are you off to?<br>Off = “离开”。Be off to somewhere是“离开这里去某地方”。<br>更多表达：<br>Where are you going？你（即将）去哪里？<br>如何回应：<br>I’m off. 我走了。<br>I’m off to the dentist. 我要去牙医那儿。</li></ol><p>标准回答:</p><ol><li>Nothing much. 没事做啊。</li><li>Just chillin today. 在家瘫。【chillin】表“放松”。</li><li>What do you think of him ? 你觉得他怎么样？<br>What do you +think of 某人/事<br>Think of 是“对…有想法/意见”的意思。<br>问起对某人的意见，要注意宾语的用法。<br>男生 him, 女生 her, 他们 them。<br>更多表达：<br>对这个派对有什么想法:<br>What do you think of this party?<br>对这个电影有什么意见:<br>What do you think of this movie?<br>标准回答:<br>在欧美文化中人们不轻易对其他人做出评价。除非两个人特别要好才会交换彼此对第三个人的看法。下面的答案是一种“官方”的安全回答方式：<br>【I actually don’t know much about her, what did she do to you?】意思是“其实我并是不很了解她耶，她怎么你了吗？”</li><li>Did you hear the news? 你听说那个消息了吗?<br>Did you hear +某事<br>News 指消息，也有新闻的意思。<br>已经完成的动作用一般过去时did, 而不是&quot;do you hear&quot;。<br>更多表达：<br>简短版：Did you hear? 你听说了吗？<br>发音：News [nuz] 的美式发音在“怒”和“牛”之间，词尾是z音不是s音哦。</li></ol><h2 id="part-3-夸赞"><a class="markdownIt-Anchor" href="#part-3-夸赞"></a> Part 3: 夸赞</h2><ol start="9"><li>I love your watch！我喜欢你的手表！<br>I love +your 某件东西</li></ol><p>除了物品，还可以夸赞对方的衣着，发型，配饰。<br>更多表达：<br>I love your hair. 我喜欢你的发型。<br>I love your outfit. 我喜欢你的服装。</p><ol start="10"><li>Where’d you get it? 你从哪里买到的？<br>Where did you get +某物</li></ol><p>Where’d 是where did的缩写。<br>通常和上一句I love your something一起用。<br>用一般过去时，因为get这个动作已经完成。<br>发音：Where did简化后成['hwɛrd]。重音在where, d音很轻。<br>连读get和it成 ['ɡɛdɪt]（因为两个元音之间的t发d音）。词尾的t音是吞掉了，有憋气顿息的感觉。</p><p>用来开启话题的句子你都学会了吗？<br>快去make small talk吧！</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-Autograd</title>
      <link href="/post/294ead72.html"/>
      <url>/post/294ead72.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><pre><code>1.1.0</code></pre><h1 id="自动求梯度"><a class="markdownIt-Anchor" href="#自动求梯度"></a> 自动求梯度</h1><h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2><p>上一节介绍的<code>Tensor</code>是这个包的核心类，如果将其属性<code>.requires_grad</code>设置为<code>True</code>，它将开始追踪(track)在其上的所有操作。完成计算后，可以调用**<code>.backward()</code>来完成所有梯度计算**。此<code>Tensor</code>的梯度将累积到<code>.grad</code>属性中。</p><blockquote><p>注意在调用<code>.backward()</code>时，如果<code>Tensor</code>是标量，则不需要为<code>backward()</code>指定任何参数；否则，需要指定一个求导变量。</p></blockquote><p>如果不想要被继续追踪，可以调用<code>.detach()</code>将其从追踪记录中分离出来，这样就可以防止将来的计算被追踪。此外，还可以用<code>with torch.no_grad()</code>将不想被追踪的操作代码块包裹起来，这种方法在评估模型的时候很常用，因为在评估模型时，我们并不需要计算可训练参数（<code>requires_grad=True</code>）的梯度。</p><p><code>Function</code>是另外一个很重要的类。<code>Tensor</code>和<code>Function</code>互相结合就可以构建一个记录有整个计算过程的非循环图。每个<code>Tensor</code>都有一个<code>.grad_fn</code>属性，该属性即创建该<code>Tensor</code>的<code>Function</code>（除非用户创建的<code>Tensor</code>时设置了<code>grad_fn=None</code>）。</p><p>下面通过一些例子来理解这些概念。</p><hr><h2 id="tensor"><a class="markdownIt-Anchor" href="#tensor"></a> Tensor</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.ones(<span class="number">2</span>, <span class="number">2</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">print(x)</span><br><span class="line">print(x.grad_fn)</span><br></pre></td></tr></table></figure><pre><code>tensor([[1., 1.],        [1., 1.]], requires_grad=True)None</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = x + <span class="number">2</span></span><br><span class="line">print(y)</span><br><span class="line">print(y.grad_fn)</span><br></pre></td></tr></table></figure><pre><code>tensor([[3., 3.],        [3., 3.]], grad_fn=&lt;AddBackward0&gt;)&lt;AddBackward0 object at 0x12682dac8&gt;</code></pre><p>注意x是直接创建的，所以它没有<code>grad_fn</code>, 而y是通过一个加法操作创建的，所以它有一个为<code>&lt;AddBackward&gt;</code>的<code>grad_fn</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(x.is_leaf, y.is_leaf)   <span class="comment"># 叶子结点是直接创建的</span></span><br></pre></td></tr></table></figure><pre><code>True False</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">z = y * y * <span class="number">3</span></span><br><span class="line">out = z.mean()</span><br><span class="line">print(z, out)</span><br><span class="line">print(z.is_leaf)</span><br></pre></td></tr></table></figure><pre><code>tensor([[27., 27.],        [27., 27.]], grad_fn=&lt;MulBackward0&gt;) tensor(27., grad_fn=&lt;MeanBackward0&gt;)False</code></pre><p>通过<code>.requires_grad_()</code>来用in-place的方式改变<code>requires_grad</code>属性：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = torch.randn(<span class="number">2</span>, <span class="number">2</span>)   <span class="comment"># 缺失情况下默认 requires_grad = False</span></span><br><span class="line">a = ((a * <span class="number">3</span>) / (a - <span class="number">1</span>))</span><br><span class="line">print(a.requires_grad)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">a.requires_grad_(<span class="literal">True</span>)</span><br><span class="line">print(a.requires_grad)   <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">b = (a * a).sum()</span><br><span class="line">print(b.grad_fn)</span><br><span class="line">print(b.requires_grad)</span><br></pre></td></tr></table></figure><pre><code>FalseTrue&lt;SumBackward0 object at 0x126729908&gt;True</code></pre><hr><h2 id="梯度"><a class="markdownIt-Anchor" href="#梯度"></a> 梯度</h2><p>因为<code>out</code>是一个标量，所以调用<code>backward()</code>时不需要指定求导变量：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">out.backward()  <span class="comment"># 等价与 out.backward(torch.tensor(1.))</span></span><br><span class="line">print(x.grad)</span><br></pre></td></tr></table></figure><pre><code>tensor([[4.5000, 4.5000],        [4.5000, 4.5000]])</code></pre><p>我们令<code>out</code>为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">o</span></span></span></span> , 因为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi><mo>=</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>4</mn></munderover><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>4</mn></munderover><mn>3</mn><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">o=\frac14\sum_{i=1}^4z_i=\frac14\sum_{i=1}^43(x_i+2)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">4</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">4</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>所以</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>o</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>i</mi></msub></mrow></mfrac><msub><mo fence="true">∣</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow></msub><mo>=</mo><mfrac><mn>9</mn><mn>2</mn></mfrac><mo>=</mo><mn>4.5</mn></mrow><annotation encoding="application/x-tex">\frac{\partial{o}}{\partial{x_i}}\bigr\rvert_{x_i=1}=\frac{9}{2}=4.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.051398000000000055em;"><span style="top:-2.30029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49980999999999987em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord">5</span></span></span></span></span></p><p>所以上面的输出是正确的。</p><p>数学上，如果有一个函数值和自变量都为向量的函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>⃗</mo></mover><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\vec{y}=f(\vec{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9084399999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, 那么 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9084399999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 关于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span> 的梯度就是一个雅可比矩阵（Jacobian matrix）:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mi>m</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mi>m</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">J=\left(\begin{array}{ccc}   \frac{\partial y_{1}}{\partial x_{1}} &amp; \cdots &amp; \frac{\partial y_{1}}{\partial x_{n}}\\   \vdots &amp; \ddots &amp; \vdots\\   \frac{\partial y_{m}}{\partial x_{1}} &amp; \cdots &amp; \frac{\partial y_{m}}{\partial x_{n}}   \end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.614631999999999em;vertical-align:-2.0573159999999993em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3500249999999996em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.1050050000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.350025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.557316em;"><span style="top:-5.3126em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.075284000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0573159999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.557316em;"><span style="top:-5.1251em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.18em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.8877840000000008em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0573159999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.557316em;"><span style="top:-5.3126em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.075284000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0573159999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3500249999999996em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.1050050000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.350025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>而<code>torch.autograd</code>这个包就是用来计算一些雅克比矩阵的乘积的。例如，如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 是一个标量函数的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>=</mo><mi>g</mi><mrow><mo fence="true">(</mo><mover accent="true"><mi>y</mi><mo>⃗</mo></mover><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">l=g\left(\vec{y}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span> 的梯度：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mi>m</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">v=\left(\begin{array}{ccc}\frac{\partial l}{\partial y_{1}} &amp; \cdots &amp; \frac{\partial l}{\partial y_{m}}\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9306079999999998em;"><span style="top:-3.0505em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.430608em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9306079999999998em;"><span style="top:-3.0505em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.430608em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9306079999999998em;"><span style="top:-3.0505em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.430608em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></span></p><p>那么根据链式法则我们有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 关于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span> 的雅克比矩阵就为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mo>⋅</mo><mi>J</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mi>m</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mi>m</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mi>m</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>l</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">v \cdot J=\left(\begin{array}{ccc}\frac{\partial l}{\partial y_{1}} &amp; \cdots &amp; \frac{\partial l}{\partial y_{m}}\end{array}\right) \left(\begin{array}{ccc}   \frac{\partial y_{1}}{\partial x_{1}} &amp; \cdots &amp; \frac{\partial y_{1}}{\partial x_{n}}\\   \vdots &amp; \ddots &amp; \vdots\\   \frac{\partial y_{m}}{\partial x_{1}} &amp; \cdots &amp; \frac{\partial y_{m}}{\partial x_{n}}   \end{array}\right)=\left(\begin{array}{ccc}\frac{\partial l}{\partial x_{1}} &amp; \cdots &amp; \frac{\partial l}{\partial x_{n}}\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.614631999999999em;vertical-align:-2.0573159999999993em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9306079999999998em;"><span style="top:-3.0505em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.430608em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9306079999999998em;"><span style="top:-3.0505em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.430608em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9306079999999998em;"><span style="top:-3.0505em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.430608em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3500249999999996em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.1050050000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.350025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.557316em;"><span style="top:-5.3126em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.075284000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0573159999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.557316em;"><span style="top:-5.1251em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.18em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.8877840000000008em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0573159999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.557316em;"><span style="top:-5.3126em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.075284000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0573159999999993em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3500249999999996em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.1050050000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.350025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.325208em;vertical-align:-0.41260399999999986em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9126040000000001em;"><span style="top:-3.032496em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41260399999999986em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9126040000000001em;"><span style="top:-3.032496em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41260399999999986em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9126040000000001em;"><span style="top:-3.032496em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41260399999999986em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><p>注意：grad在反向传播过程中是累加的(accumulated)，这意味着每一次运行反向传播，梯度都会累加之前的梯度，所以一般在反向传播之前需把梯度清零。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 再来反向传播一次，注意grad是累加的</span></span><br><span class="line">out2 = x.sum()</span><br><span class="line">out2.backward()</span><br><span class="line">print(x.grad)</span><br><span class="line"></span><br><span class="line">out3 = x.sum()</span><br><span class="line">x.grad.data.zero_()</span><br><span class="line">out3.backward()</span><br><span class="line">print(x.grad)</span><br></pre></td></tr></table></figure><pre><code>tensor([[5.5000, 5.5000],        [5.5000, 5.5000]])tensor([[1., 1.],        [1., 1.]])</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>, <span class="number">4.0</span>], requires_grad=<span class="literal">True</span>)</span><br><span class="line">y = <span class="number">2</span> * x</span><br><span class="line">z = y.view(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">print(z)</span><br></pre></td></tr></table></figure><pre><code>tensor([[2., 4.],        [6., 8.]], grad_fn=&lt;ViewBackward&gt;)</code></pre><p>现在 <code>y</code> 不是一个标量，所以在调用<code>backward</code>时需要传入一个和<code>y</code>同形的权重向量进行加权求和得到一个标量。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">v = torch.tensor([[<span class="number">1.0</span>, <span class="number">0.1</span>], [<span class="number">0.01</span>, <span class="number">0.001</span>]], dtype=torch.float)</span><br><span class="line">z.backward(v)</span><br><span class="line"></span><br><span class="line">print(x.grad)</span><br></pre></td></tr></table></figure><pre><code>tensor([2.0000, 0.2000, 0.0200, 0.0020])</code></pre><p>再来看看中断梯度追踪的例子：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor(<span class="number">1.0</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">y1 = x ** <span class="number">2</span></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    y2 = x ** <span class="number">3</span></span><br><span class="line">y3 = y1 + y2</span><br><span class="line"></span><br><span class="line">print(x, x.requires_grad)</span><br><span class="line">print(y1, y1.requires_grad)</span><br><span class="line">print(y2, y2.requires_grad)</span><br><span class="line">print(y3, y3.requires_grad)</span><br></pre></td></tr></table></figure><pre><code>tensor(1., requires_grad=True) Truetensor(1., grad_fn=&lt;PowBackward0&gt;) Truetensor(1.) Falsetensor(2., grad_fn=&lt;AddBackward0&gt;) True</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y3.backward()</span><br><span class="line">print(x.grad)</span><br></pre></td></tr></table></figure><pre><code>tensor(2.)</code></pre><p>为什么是2呢？$ y_3 = y_1 + y_2 = x^2 + x^3$，当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>d</mi><msub><mi>y</mi><mn>3</mn></msub></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac {dy_3} {dx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.277216em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 不应该是5吗？事实上，由于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的定义是被<code>torch.no_grad():</code>包裹的，所以与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有关的梯度是不会回传的，只有与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有关的梯度才会回传，即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 的梯度。</p><p>上面提到，<code>y2.requires_grad=False</code>，所以不能调用 <code>y2.backward()</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># y2.backward() </span></span><br><span class="line"><span class="comment"># 会报错 RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn</span></span><br></pre></td></tr></table></figure><p>如果我们想要修改<code>tensor</code>的数值，但是又不希望被<code>autograd</code>记录（即不会影响反向传播），那么我么可以对<code>tensor.data</code>进行操作.</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.ones(<span class="number">1</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">print(x.data)  <span class="comment"># 还是一个tensor</span></span><br><span class="line">print(x.data.requires_grad)  <span class="comment"># 但是已经是独立于计算图之外</span></span><br><span class="line"></span><br><span class="line">y = <span class="number">2</span> * x</span><br><span class="line">x.data *= <span class="number">100</span>  <span class="comment"># 只改变了值，不会记录在计算图，所以不回影响梯度传播</span></span><br><span class="line"></span><br><span class="line">y.backward()</span><br><span class="line">print(x)   <span class="comment"># 更改data的值也会影响tensor的值</span></span><br><span class="line">print(x.grad)</span><br></pre></td></tr></table></figure><pre><code>tensor([1.])Falsetensor([100.], requires_grad=True)tensor([2.])</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> autograd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch-Tensor</title>
      <link href="/post/26a9448.html"/>
      <url>/post/26a9448.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据操作"><a class="markdownIt-Anchor" href="#数据操作"></a> 数据操作</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">torch.manual_seed(<span class="number">0</span>)</span><br><span class="line">torch.cuda.manual_seed(<span class="number">0</span>)</span><br><span class="line">print(torch.__version__)</span><br></pre></td></tr></table></figure><pre><code>1.1.0</code></pre><h2 id="创建tensor"><a class="markdownIt-Anchor" href="#创建tensor"></a> 创建Tensor</h2><p>创建一个 5x3 的未初始化的 Tensor:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.empty(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>tensor([[0.0000e+00, 0.0000e+00, 8.2298e-10],        [6.7375e-10, 3.2687e+21, 6.5988e-10],        [1.0267e-08, 6.5990e-10, 8.3813e-10],        [8.2271e+20, 3.3854e-06, 1.7473e-04],        [3.4330e-06, 6.8989e-07, 2.1876e-04]])</code></pre><p>创建一个 5x3 的随机初始化的 Tensor:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.rand(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>tensor([[0.4963, 0.7682, 0.0885],        [0.1320, 0.3074, 0.6341],        [0.4901, 0.8964, 0.4556],        [0.6323, 0.3489, 0.4017],        [0.0223, 0.1689, 0.2939]])</code></pre><p>创建一个 5x3 的long型全0的 Tensor：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.zeros(<span class="number">5</span>, <span class="number">3</span>, dtype=torch.long)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>tensor([[0, 0, 0],        [0, 0, 0],        [0, 0, 0],        [0, 0, 0],        [0, 0, 0]])</code></pre><p>直接根据数据创建</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">5.5</span>, <span class="number">3</span>])</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>tensor([5.5000, 3.0000])</code></pre><p>还可以通过现有的Tensor来创建，此方法会默认重用输入Tensor的一些属性，例如数据类型，除非自定义数据类型。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 返回的tensor默认具有相同的torch.dtype和torch.device</span></span><br><span class="line">x = x.new_ones(<span class="number">5</span>, <span class="number">3</span>, dtype=torch.float64) </span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定新的数据类型</span></span><br><span class="line">x = torch.randn_like(x, dtype=torch.float)</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><pre><code>tensor([[1., 1., 1.],        [1., 1., 1.],        [1., 1., 1.],        [1., 1., 1.],        [1., 1., 1.]], dtype=torch.float64)tensor([[ 0.6035,  0.8110, -0.0451],        [ 0.8797,  1.0482, -0.0445],        [-0.7229,  2.8663, -0.5655],        [ 0.1604, -0.0254,  1.0739],        [ 2.2628, -0.9175, -0.2251]])</code></pre><p>我们可以通过 shape 或者 size() 来获取 Tensor 的形状</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(x.size())</span><br></pre></td></tr></table></figure><pre><code>torch.Size([5, 3])</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(x.shape)</span><br></pre></td></tr></table></figure><pre><code>torch.Size([5, 3])</code></pre><p>注意：返回的torch.Size其实就是一个tuple, 支持所有tuple的操作。</p><hr><h2 id="操作"><a class="markdownIt-Anchor" href="#操作"></a> 操作</h2><h3 id="算术操作"><a class="markdownIt-Anchor" href="#算术操作"></a> 算术操作</h3><ul><li>加法形式 一</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = torch.rand(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line">print(x + y)</span><br></pre></td></tr></table></figure><pre><code>tensor([[ 1.3967,  1.0892,  0.4369],        [ 1.6995,  2.0453,  0.6539],        [-0.1553,  3.7016, -0.3599],        [ 0.7536,  0.0870,  1.2274],        [ 2.5046, -0.1913,  0.4760]])</code></pre><ul><li>加法形式 二</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(torch.add(x, y))</span><br></pre></td></tr></table></figure><pre><code>tensor([[ 1.3967,  1.0892,  0.4369],        [ 1.6995,  2.0453,  0.6539],        [-0.1553,  3.7016, -0.3599],        [ 0.7536,  0.0870,  1.2274],        [ 2.5046, -0.1913,  0.4760]])</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = torch.empty(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line">torch.add(x, y, out=result)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>tensor([[ 1.3967,  1.0892,  0.4369],        [ 1.6995,  2.0453,  0.6539],        [-0.1553,  3.7016, -0.3599],        [ 0.7536,  0.0870,  1.2274],        [ 2.5046, -0.1913,  0.4760]])</code></pre><ul><li>加法形式 三 inplace</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add x to y</span></span><br><span class="line">y.add_(x)</span><br><span class="line">print(y)</span><br></pre></td></tr></table></figure><pre><code>tensor([[ 1.3967,  1.0892,  0.4369],        [ 1.6995,  2.0453,  0.6539],        [-0.1553,  3.7016, -0.3599],        [ 0.7536,  0.0870,  1.2274],        [ 2.5046, -0.1913,  0.4760]])</code></pre><p>注：PyTorch操作inplace版本都有后缀&quot;<em>&quot;, 例如x.copy</em>(y), x.t_()</p><h3 id="索引"><a class="markdownIt-Anchor" href="#索引"></a> 索引</h3><p>我们还可以使用类似NumPy的索引操作来访问Tensor的一部分，需要注意的是：索引出来的结果与原数据共享内存，也即修改一个，另一个会跟着修改。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = x[<span class="number">0</span>, :]</span><br><span class="line">y += <span class="number">1</span></span><br><span class="line">print(y)</span><br><span class="line">print(x[<span class="number">0</span>, :])   <span class="comment"># 源tensor也被修改了</span></span><br></pre></td></tr></table></figure><pre><code>tensor([1.6035, 1.8110, 0.9549])tensor([1.6035, 1.8110, 0.9549])</code></pre><h3 id="改变形状"><a class="markdownIt-Anchor" href="#改变形状"></a> 改变形状</h3><p>用 view() 来改变 Tensor 的形状：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y = x.view(<span class="number">15</span>)</span><br><span class="line">z = x.view(<span class="number">-1</span>, <span class="number">5</span>)  <span class="comment"># -1所指的维度可以根据其他维度的值推算出来，自适应</span></span><br><span class="line">print(x.size(), y.size(), z.size())</span><br></pre></td></tr></table></figure><pre><code>torch.Size([5, 3]) torch.Size([15]) torch.Size([3, 5])</code></pre><p>注意 view() 返回的新tensor与源tensor共享内存，也即更改其中的一个，另外一个也会跟着改变。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x += <span class="number">1</span></span><br><span class="line">print(x)</span><br><span class="line">print(y) <span class="comment"># 也加了1</span></span><br></pre></td></tr></table></figure><pre><code>tensor([[2.6035, 2.8110, 1.9549],        [1.8797, 2.0482, 0.9555],        [0.2771, 3.8663, 0.4345],        [1.1604, 0.9746, 2.0739],        [3.2628, 0.0825, 0.7749]])tensor([2.6035, 2.8110, 1.9549, 1.8797, 2.0482, 0.9555, 0.2771, 3.8663, 0.4345,        1.1604, 0.9746, 2.0739, 3.2628, 0.0825, 0.7749])</code></pre><p>如果不想共享内存，推荐先用 clone 创造一个副本然后再使用 view</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x_cp = x.clone().view(<span class="number">15</span>)</span><br><span class="line">x -= <span class="number">1</span></span><br><span class="line">print(x)</span><br><span class="line">print(x_cp)</span><br></pre></td></tr></table></figure><pre><code>tensor([[ 1.6035,  1.8110,  0.9549],        [ 0.8797,  1.0482, -0.0445],        [-0.7229,  2.8663, -0.5655],        [ 0.1604, -0.0254,  1.0739],        [ 2.2628, -0.9175, -0.2251]])tensor([2.6035, 2.8110, 1.9549, 1.8797, 2.0482, 0.9555, 0.2771, 3.8663, 0.4345,        1.1604, 0.9746, 2.0739, 3.2628, 0.0825, 0.7749])</code></pre><p>另外一个常用的函数就是item(), 它可以将一个标量Tensor转换成一个Python number：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.randn(<span class="number">1</span>)</span><br><span class="line">print(x)</span><br><span class="line">print(x.item())</span><br></pre></td></tr></table></figure><pre><code>tensor([2.3466])2.3466382026672363</code></pre><hr><h2 id="广播机制"><a class="markdownIt-Anchor" href="#广播机制"></a> 广播机制</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.arange(<span class="number">1</span>, <span class="number">3</span>).view(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(x)</span><br><span class="line">y = torch.arange(<span class="number">1</span>, <span class="number">4</span>).view(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">print(y)</span><br><span class="line">print(x + y)</span><br></pre></td></tr></table></figure><pre><code>tensor([[1, 2]])tensor([[1],        [2],        [3]])tensor([[2, 3],        [3, 4],        [4, 5]])</code></pre><hr><h2 id="运算的内存开销"><a class="markdownIt-Anchor" href="#运算的内存开销"></a> 运算的内存开销</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">y = torch.tensor([<span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">id_before = id(y)</span><br><span class="line">print(id_before)</span><br><span class="line">y = y + x</span><br><span class="line">print(<span class="string">"y: "</span>, y)</span><br><span class="line">print(id(y) == id_before)</span><br><span class="line">print(id(y))</span><br></pre></td></tr></table></figure><pre><code>4784743336y:  tensor([4, 6])False4784545152</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">y = torch.tensor([<span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">id_before = id(y)</span><br><span class="line">y[:] = y + x</span><br><span class="line">print(y)</span><br><span class="line">print(id(y) == id_before)</span><br></pre></td></tr></table></figure><pre><code>tensor([4, 6])True</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">y = torch.tensor([<span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">id_before = id(y)</span><br><span class="line">torch.add(x, y, out=y)  <span class="comment"># y += x, y.add_(x)</span></span><br><span class="line">print(id(y) == id_before)</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><hr><h2 id="tensor-和-numpy-相互转换"><a class="markdownIt-Anchor" href="#tensor-和-numpy-相互转换"></a> Tensor 和 NumPy 相互转换</h2><p>numpy() 和 from_numpy() 这两个函数产生的 Tensor 和 NumPy array实际是使用的相同的内存，改变其中一个时另一个也会改变。</p><h3 id="tensor-转-numpy"><a class="markdownIt-Anchor" href="#tensor-转-numpy"></a> Tensor 转 NumPy</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = torch.ones(<span class="number">5</span>)</span><br><span class="line">b = a.numpy()</span><br><span class="line">print(a, b)</span><br><span class="line"></span><br><span class="line">a += <span class="number">1</span></span><br><span class="line">print(a, b)</span><br><span class="line"></span><br><span class="line">b += <span class="number">1</span></span><br><span class="line">print(a, b)</span><br></pre></td></tr></table></figure><pre><code>tensor([1., 1., 1., 1., 1.]) [1. 1. 1. 1. 1.]tensor([2., 2., 2., 2., 2.]) [2. 2. 2. 2. 2.]tensor([3., 3., 3., 3., 3.]) [3. 3. 3. 3. 3.]</code></pre><h3 id="numpy数组转tensor"><a class="markdownIt-Anchor" href="#numpy数组转tensor"></a> Numpy数组转Tensor</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.ones(<span class="number">5</span>)</span><br><span class="line">b = torch.from_numpy(a)</span><br><span class="line">print(a, b)</span><br><span class="line"></span><br><span class="line">a += <span class="number">1</span></span><br><span class="line">print(a, b)</span><br><span class="line"></span><br><span class="line">b += <span class="number">1</span></span><br><span class="line">print(a, b)</span><br></pre></td></tr></table></figure><pre><code>[1. 1. 1. 1. 1.] tensor([1., 1., 1., 1., 1.], dtype=torch.float64)[2. 2. 2. 2. 2.] tensor([2., 2., 2., 2., 2.], dtype=torch.float64)[3. 3. 3. 3. 3.] tensor([3., 3., 3., 3., 3.], dtype=torch.float64)</code></pre><p>直接用torch.tensor()将NumPy数组转换成Tensor，该方法总是会进行数据拷贝，返回的Tensor和原来的数据不再共享内存。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用torch.tensor()转换时不会共享内存</span></span><br><span class="line">c = torch.tensor(a)</span><br><span class="line">a += <span class="number">1</span></span><br><span class="line">print(a, c)</span><br></pre></td></tr></table></figure><pre><code>[4. 4. 4. 4. 4.] tensor([3., 3., 3., 3., 3.], dtype=torch.float64)</code></pre><hr><h2 id="tensor-on-gpu"><a class="markdownIt-Anchor" href="#tensor-on-gpu"></a> Tensor on GPU</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下代码只有再Pytorch GPU版本上才会执行</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    device = torch.device(<span class="string">"cuda"</span>)   <span class="comment"># GPU</span></span><br><span class="line">    y = torch.one_like(x, device=device) <span class="comment"># 直接创建一个再GPU上的Tensor</span></span><br><span class="line">    x = x.to(device)     <span class="comment"># 等价于 .to("cuda")</span></span><br><span class="line">    z = x + y</span><br><span class="line">    print(z)</span><br><span class="line">    print(z.to(<span class="string">"cpu"</span>, torch.double))  <span class="comment"># to()还可以同时更改数据类型</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习10-表达满意</title>
      <link href="/post/bf6bf4cb.html"/>
      <url>/post/bf6bf4cb.html</url>
      
        <content type="html"><![CDATA[<p>表达满意</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><p>1.Happy 满意的；开心的<br>2.Unhappy 不满意的；不开心<br>3.Make sb. Happy 让某人满意<br>4.Work for sb. 让某人觉得可以<br>5.Satisfied 满意的<br>6.Disappointed 失望的</p><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><p>1.Everybody’s happy.<br>每个人都满意了。<br>2.I want to make you happy.<br>我想让你满意。<br>3.Does this work for you?<br>这个你满意吗？<br><a href="http://4.Do" target="_blank" rel="noopener">4.Do</a> I look satisfied?<br>我看着满意吗？<br>5.I’m satisfied with my care.<br>我很满意对我的照料。<br>6.I’m not unhappy.<br>我没有不满意。<br>7.This is gonna be so good. You won’t be disappointed.<br>绝对差不了，包你们满意。</p><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>自己对某事很满意，只会说“I like it!”？要不就是“This is good.”？表达满意的说法其实还有很多，而且非常简易好记。一起来跟着视频学习吧。</p><ol><li>Everybody’s happy. 每个人都满意了。<br>Sb. is happy.</li></ol><p>无论是生活还是工作中，每次做一个集体决定，都会最大程度地追求让每个人都能满意。<br>Be happy, 除了有“开心”的意思，还可以指“感到幸福”和“感觉满意的”。<br>更多表达：<br>不是每个人都满意的情况下，可以考虑这么说：<br>Not everybody is happy. 不是每个人都满意。<br>每个人都不满意：<br>Everybody is unhappy. 每个人都不满意。<br>Nobody is happy. 没有人满意。<br>询问大家是否都满意：<br>Everybody’s happy？大家都满意了吗？<br>发音(美式K.K.音标)：<br>Everybody’s happy.<br>['ɛvrɪbɑdizˈhæpɪ ]<br>(注意区分body['bɑdi]和buddy['bʌdi]的发音：/ɑ/的发音类似“啊“的发音，但嘴巴张开的幅度要更大，嘴型像个大圆圈，往下拉到最大，拉长音；/ʌ/的发音与/ə/是相同的，不过/ʌ/发出的声音比较强和短促）</p><ol start="2"><li>I want to make you happy. 我想让你满意。<br>I want to make sb. happy.</li></ol><p>背景提示：说话者是一名销售，当他发现顾客并不是特别满意他开出的价格，他很肯定地告诉顾客：我可以讲价的，我想让你满意。</p><p>Want to make somebody+形容词，指“想让某人变得…”。如前面提到的，happy有“满意”的意思，整句就是指“让某人对（这笔交易/价格）感到满意”。<br>注意：恋人之间也会常常使用这句话，这时候更多是“我想要让你幸福”的意思，要多多结合上下文和分析场景才能准确地解读。<br>发音(美式K.K.音标)：<br>I want to make you happy.<br>[aɪwɑn(t)tə mekju ˈhæpɪ ]<br>(连读 want to和make you；注意want的/t/音省读，因为与后面的词首是同一个音素；为了到达句子想要呈现出来的效果-让对方觉得自己被看重，建议使用比较平稳的语调，让话语变得更有说服力。）</p><ol start="3"><li>Does this work for you? 这个你满意吗？<br>Does sth. work for you?</li></ol><p>这可不是问“它为你工作吗”，而是问某事、物或方案“行不行得通”。<br>更多表达：<br>还可以用来问对方，有没有空：<br>I’m coming to your office this afternoon. Does it work for you? 今天下午我去你办公室，你有时间吗？<br>如果想表达自己很满意，可以说：<br>It works for me. 我觉得挺好。<br>发音(美式K.K.音标)：<br>Does this work for you?<br>[dʌz ðɪs wɝk fɚju ]<br>(连读for you; 注意区分work [wɝk] 和walk [wɔk]的发音，主要区别在发两个元音的嘴型; 说话者是在询问对方的想法，所以语调上升）</p><ol start="4"><li>Do I look satisfied? 我看着满意吗？<br>Does sb. look satisfied?</li></ol><p>Sb. looks satisfied, 指“某人看起来满意”。<br>Satisfied，指“满意的”。用来表达“感觉某事已经达到了它应该达到的程度，或者某事已经以你想要的方式发生了”。<br>对比satisfied和happy：satisfied的用法更加正式，有点偏书面语。<br>更多表达：<br>其他表达“满意的”的高频词汇：<br>Happy：在日常英语中经常被用来代替satisfied。<br>Pleased: 非常满意（比satisfied的程度要高）。<br>Content : 对你正在做的事情感到满意(以至于你不想改变现状）。<br>Fulfilled ：觉得自己在生活中已经取得了较大的成就。<br>发音(美式K.K.音标)：<br>Do I look satisfied?<br>[du(w)aɪ lʊkˈsæ(t)ɪsˈfaɪ(d) ]<br>(连读do I时的元音+元音连读中间由滑音/w/来过渡; 注意satisfied的/t/音有浊化成/d/音的现象，因位于两个元音之间; satisfied的/d/音失爆；虽然句子是一般疑问句的结构，但从语义上分析是一个反问句，而且说话者是比较有权威的人，所以语调下降）</p><ol start="5"><li>I’m satisfied with my care. 我很满意对我的照料。<br>Sb. is satisfied with sth.</li></ol><p>除了表达出“满意”的感受，还可以具体说出是什么事情让你满意。<br>I’m satisfied with sth. 就是指“我对…感到满意”。<br>注意：不要使用satisfied about something。We’re satisfied with the room(正确）；We’re not satisfied about the room(错误）。<br>更多表达：<br>表达不满意可以加“否定前缀”dis-，或者使用not：用dissatisfied，或not satisfied。<br>They have many dissatisfied customers. 他们有许多不满意的顾客。<br>I’m not satisfied with my haircut. 我对我的发型不满意。<br>发音(美式K.K.音标)：<br>I’m satisfied with my care.<br>[aɪmˈsæ(t)ɪsˈfaɪ(d) wɪð maɪkɛr]<br>(注意satisfied的/t/音有浊化成/d/音的现象，因位于两个元音之间; satisfied的/d/音失爆；句子的主要重音放在satisfied上，次重音在care上）</p><ol start="6"><li>I’m not unhappy. 我没有不满意。<br>Sb. is not unhappy.</li></ol><p>背景提示：片段里的Sheldon看到自己的座位被Penny占用了，他闷闷不乐地拉长着脸。Penny无奈地把座位让出来，问Sheldon：Happy？Sheldon面无表情地回复：I’m not unhappy.<br>对话中的第一个Happy?是问对方是否满意，完整的表达是：<br>Are you happy？<br>回复里的unhappy是happy的反义词，指“不开心的”，“不满意的”。结合前面的否定式I’m not，整句话是“我没有不满意”的意思。<br>注意：虽然句子中有两个否定式（双重否定有表达肯定、强化语气等功能），但这个句子不完全等于I’m happy。说话者暗示了自己不再“难受”，但心情也没有到“开心”的程度。</p><p>发音(美式K.K.音标)：<br>I’m not unhappy.<br>[aɪmnɑ(t)ʌnˈhæpi ]<br>(连读not unhappy；注意not的//t/音有浊化成/d/音的现象*，因位于两个元音之间; 重读unhappy的否定前缀un-以突出否定的意思）<br>（*此类发音现象不是“规则”，而是可能存在的美式发音“规律”；会因为场合和说话者的发音习惯等其他原因而改变）</p><ol start="7"><li>You won’t be disappointed. 包你满意。<br>You will not be disappointed.</li></ol><p>虽然“表达满意”常用肯定式句型，但语言的魅力就在于它的丰富和多样性。用否定式的句型照样可以表达出“我很满意”的句子。<br>Disappoint，指“使某人感到不开心，因为他们希望的事情没有发生或没有他们期望的那么好”。<br>Will not be disappointed, 指“不会感到失望”，也就是“会很满意”的意思。<br>更多表达：<br>I won’t disappoint you. 我不会让你失望的。</p><p>发音(美式K.K.音标)：<br>You won’t be disappointed.<br>[ju wʌn(t)bi ˈdɪsəˈpɔɪn(t)ɪ(d) ]<br>(连读won’t be；注意/t/音失爆，因为紧挨着另一个爆破音/b/；disappointed里的的/t/音失爆，因为前面紧挨着/n/音；句尾的/d/音失爆；重读won’t）</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习9-我的名字</title>
      <link href="/post/abea051b.html"/>
      <url>/post/abea051b.html</url>
      
        <content type="html"><![CDATA[<p>我的名字</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><p>1.Stand up 站起来<br>2.Introduce 介绍<br>3.Minnesota 明尼苏达州<br>4.Haven’t met (have met的否定式) 还没见过<br>5.Call 叫；呼唤</p><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><p>1.Would you like to stand up and introduce yourself?<br>你能站起来，向大家介绍一下自己吗？</p><p><a href="http://2.My" target="_blank" rel="noopener">2.My</a> name is Julie Johnson. I’m from Minnesota and now I live here.<br>我叫Julie Johnson。我来自明尼苏达州，现在在这里居住。<br>（视频原句：My name is Riley Andersen. 我叫莱利·安德森。）</p><p>3.I’m Michael. We haven’t met.<br>我是Michael。我们还没见过吧。<br>（视频原句：I’m Joey. 我是乔伊。）</p><p>4.I’m Julie Smith. And you are?<br>我叫Julie Smith，你呢？<br>（视频原句：I’m Hermione Granger. 我叫Hermione Granger。）</p><p><a href="http://5.My" target="_blank" rel="noopener">5.My</a> name’s Erin. With an “E”.<br>我叫Erin, 带E的。</p><p><a href="http://6.My" target="_blank" rel="noopener">6.My</a> name is Michael, but you can call me Mike.<br>我名叫Michael，但你可以叫我Mike。<br>（视频原句：My name is Rajesh, but you can call me Raj. 我名叫拉杰什，但你可以叫我拉杰。)</p><p>7.From now on, I’ll call you “Sexy”, okay?<br>从现在起，我叫你“帅哥”，好吗？</p><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>到了陌生的社交场合该如何“破冰”？不如先从自我介绍开始。这节课将讨论几种介绍自己名字的方式，让你在第一次的交谈中就能化被动为主动，把“节奏”稳稳地带起来。</p><ol><li>Would you like to stand up and introduce yourself? 你能站起来，向大家介绍一下自己吗？<ol><li>Would you like to stand up?</li><li>Would you like to introduce yourself?</li></ol></li></ol><p>在加入新班级、团体或是组织的时候，很可能会被邀请做一个简短的自我介绍。邀请你的人可能是老师、主持人或是领导。他们会请新人stand up站起来，然后introduce yourself, 介绍自己。<br>Would you like to do sth, 指“你是否愿意做某事”。这类句子属于“礼貌用语”，很适合在正式的场合作为“邀请别人做某事”的开场白。<br>Introduce yourself, 指“介绍一下自己”，意思是说出自己的名字和一些基本信息，让别人能更熟悉了解你。<br>更多表达：<br>除了等别人来“提示”，也可以主动地做自我介绍：<br>May I introduce myself? My name is Julie Johnson. 我可以自我介绍一下吗?我叫Julie Johnson。<br>发音(美式K.K.音标)：<br>Would you like to stand up and introduce yourself？<br>[ wʊd ju laɪk tə stænd ʌp ənd ˌɪntrəˈdus jɔrˈsɛlf ]</p><ol start="2"><li>My name is Julie Johnson. I’m from Minnesota and now I live here. 我叫Julie Johnson。我来自明尼苏达州，现在在这里居住。<br>（视频原句：My name is Riley Andersen. 我叫莱利·安德森。）<br>My name is… I am from … and now I live …</li></ol><p>My name is…,指“我的名字是…”。这是自我介绍里最重要的信息，通常放在最前面说。<br>I’m from…，指“我来自…”。除了国家，还可以说自己是来自哪个省，城市或是地区。<br>注意：当说话者和交谈者都在美国时，就不要说I’m from America, 而应该说一个更小范围的地方。比如I’m Queens （区）, 或者I’m from California（州）.<br>…and now I live here，指“现在我居住在这里”。“外地人”常会提及自己的家乡和现在的居住地。都属于在自我介绍时会分享的基本信息。<br>更多表达：<br>I’m from Texas. 我来自德克萨斯州。<br>I come from a small village. 我来自一个小山村。<br>What country are you from? 你来自哪个国家？<br>I was raised in Canada, but born in Chengdu. 我出生于成都，在加拿大长大的。<br>发音(美式K.K.音标)：<br>My name is Julie Johnson.<br>[ maɪ nem ɪz ˈdʒuli ˈdʒɒnsən]<br>I’m from Minnesota and now I live here.<br>[ aɪm frəm ,minə’sotə ənd naʊ aɪ lɪv hɪr]</p><ol start="3"><li>I’m Michael. We haven’t met. 我是Michael。我们还没见过吧。<br>（视频原句：I’m Joey. 我是乔伊。）<br>I am …We have not met.</li></ol><p>很多的社交场合是没有介绍人或主导人来介入的。这时就需要自己去主动地结识新朋友。有一句万能的开场白：我们还不认识吧？我叫…<br>We have not met（缩约式: haven’t met）, 指“我们还没见过”，也是“我们还不认识”的意思。<br>这句话暗示了说话者想认识对方，同时可以主动地告知对方自己的名字。<br>更多表达：<br>通常对方也会回应你并说出名字：<br>-Hi. I’m Joey. We haven’t met. 你好，我是乔伊。我们还没见过。</p><ul><li>Hi, good to meet you. Robert. 嗨。很高兴认识你，我是罗伯。<br>还可以直接问对方叫什么：<br>-We haven’t met. What’s your name? 我们还不认识。你叫什么？<br>-I’m Damon. 我是Damon。<br>-I’m Sybil. 我是Sybil。<br>发音(美式K.K.音标)：<br>I’m Michael. We haven’t met.<br>[aɪm ˈmaɪkl ] [ wi ˈhævnt mɛt ]</li></ul><ol start="4"><li>I’m Julie Smith. And you are? 我叫Julie Smith，你呢？<br>（视频原句：I’m Hermione Granger. 我叫Hermione Granger。）<br>I am… And you are？</li></ol><p>通常情况下，在你说出自己的名字后，其他人会回应你并且告诉你他们的名字。如果他们，并没有这样做，你就应该问他们：And you are?<br>注意：And you are? 更适用与朋友或同级之间，因为在语气上显得不够客气。<br>更多表达：<br>以下是几种寻问别人名字的表达（在比较正式的场合中）：<br>May I have your name?<br>我可以知道你的名字嘛？<br>What is your name?<br>你的名字是什么？<br>You are…?<br>你是…?<br>I didn’t catch your name.<br>我没有听清你的名字。<br>发音(美式K.K.音标)：<br>I’m Julie Smith. And you are？<br>[ aɪm ˈdʒuli smɪθ ] [ ænd ju ɑr ]</p><ol start="5"><li>My name’s Erin. With an “E”. 我叫Erin, 带E的。<br>My name is… With a/an 字母.</li></ol><p>背景提示：片段中的女主人公正在说自己的名字：Erin。这个名字常常和Aaron混淆，因为读音很接近。为了区别，说话者特意强调了名字是字母E开头的。<br>有点像中文里的表达习惯：我叫小琳，王字旁的琳。让对方充分“读懂”你的名字，展现了一种尊重。<br>With an “E”，指“是带一个E的”。这是暗示对方：我的名字是E开头的Erin，不要听成Aaron哦。<br>注意：如果读音不是以元音开头的，记得把不定冠词an换成a。<br>再举个例子，如果一个女生叫Emmy，听的时候会想到Amy，这时就可以多解释一下：My name’s Emmy, with an “E”.<br>更多表达：<br>My name’s Gerry. With a “G”. 我叫Gerry, 带G的。<br>发音(美式K.K.音标)：<br>My name’s Erin.<br>[ maɪ nemz ˈɛrən ]<br>With an “E”.<br>[ wɪð ən i ]</p><ol start="6"><li>My name is Michael, but you can call me Mike. 我名叫Michael，但你可以叫我Mike。<br>（视频原句：My name is Rajesh, but you can call me Raj. 我名叫拉杰什，但你可以叫我拉杰。)<br>Image result for you can call me<br>除了证件上的“官方认证”的名字，我们在日常生活里更多使用a nickname一个昵称。<br>You can call me…, 指“你可以叫我…”。这是告诉对方，你可以叫我的昵称。<br>比如Michael这个名字，昵称就可以有多种变化：Mic, Mick, Mickey, Micki, Mickie, Mike, Miki, Mikki, Mitch等。<br>通常来说，和陌生人交流时秩序交换正式的名字。但如果想和你成为朋友，对方很可能会告知TA的昵称。<br>更多表达：<br>My name is Debra, you can call me Debbie. 我叫Debra，你可以叫我Debbie。<br>You can call me Pat if you like. 你可以叫我Pat。<br>发音(美式K.K.音标)：<br>My name is Michael,<br>[ maɪ nem ɪz ˈmaɪkl ]<br>but you can call me Mike.<br>[ bʌt ju kən kɔl mi maɪk ]</li><li>From now on, I’ll call you “Sexy”, okay? 从现在起，我叫你“帅哥”，好吗？<br>From now on, I will call you … Is that okay?</li></ol><p>当你告诉别人自己的昵称后，对方会再次确认：从现在开始，我就叫称呼你这个昵称，可以吗？<br>From now on指“从现在开始”。<br>I’ll call you…，指“我会称呼你为…”。<br>注意：主题句中的Sexy是个开玩笑的称呼，可以对熟悉的人或恋人说。要避免在正式的场合里使用，否则会显得有点轻浮。<br>更多表达：</p><ul><li>My name is Debra, you can call me Debbie. 我叫Debra，你可以叫我Debbie。</li><li>From now on, I’ll call you “Debbie”, okay? 从现在起，我叫你“Debbie”，好吗？<br>发音(美式K.K.音标)：<br>From now on, I’ll call you “Sexy”, okay?<br>[ frəm naʊ ɑn ],[ aɪl kɔl ju ˈsɛksi ˌoˈkɛi ]</li></ul>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-笔记1</title>
      <link href="/post/29dd046f.html"/>
      <url>/post/29dd046f.html</url>
      
        <content type="html"><![CDATA[<h3 id="笔记目标"><a class="markdownIt-Anchor" href="#笔记目标"></a> 笔记目标</h3><h4 id="python基础"><a class="markdownIt-Anchor" href="#python基础"></a> Python基础</h4><ul><li>函数</li><li>面向对象</li><li>文件操作和异常处理</li><li>模块的使用</li><li>装饰器、迭代器、生成器</li></ul><h3 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h3><h4 id="函数概述"><a class="markdownIt-Anchor" href="#函数概述"></a> 函数概述</h4><p>例如：现在有这样一段代码</p><p>print（“天王盖地虎”）</p><p>print(“小鸡炖蘑菇”)</p><p>再来一段代码：在不同的地方相同的代码，那么这样的程序改如何设计</p><p>if 条件1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print（&quot;天王盖地虎&quot;）</span><br><span class="line"></span><br><span class="line">print(&quot;小鸡炖蘑菇&quot;)</span><br></pre></td></tr></table></figure><p>elif 条件2：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print（&quot;天王盖地虎&quot;）</span><br><span class="line"></span><br><span class="line">print(&quot;小鸡炖蘑菇&quot;)</span><br></pre></td></tr></table></figure><p>elif 条件3：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print（&quot;天王盖地虎&quot;）</span><br><span class="line"></span><br><span class="line">print(&quot;小鸡炖蘑菇&quot;)</span><br></pre></td></tr></table></figure><p>如果需要输出多次，是否意味着要编写这块代码多次呢？</p><p>小总结:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果在开发程序时，需要某块代码多次，但是为了提高编写的效率以及代码的重用，所以把具有独立功能的代码块组织为一个小模块，这就是函数</span><br></pre></td></tr></table></figure><h4 id="函数定义"><a class="markdownIt-Anchor" href="#函数定义"></a> 函数定义</h4><p>函数定义的格式：</p><p>def 函数名():</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">代码</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#案例：</span></span><br><span class="line">    <span class="comment"># 定义一个函数，能够完成打印信息的功能</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printInfo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'------------------------------------'</span>)</span><br><span class="line">    print(<span class="string">'         人生苦短，我用Python'</span>)</span><br><span class="line">    print(<span class="string">'------------------------------------'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="函数调用"><a class="markdownIt-Anchor" href="#函数调用"></a> 函数调用</h4><p>定义了函数之后，就相当于有了一个具有某些功能的代码，想要让这些代码能够执行，需要调用它</p><p>调用函数很简单的，通过 函数名() 即可完成调用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义完函数后，函数是不会自动执行的，需要调用它才可以</span></span><br><span class="line">printInfo()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">------------------------------------</span><br><span class="line">         人生苦短，我用Python</span><br><span class="line">------------------------------------</span><br></pre></td></tr></table></figure><h4 id="函数参数"><a class="markdownIt-Anchor" href="#函数参数"></a> 函数参数</h4><p>概述：<br>思考一个问题，如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现在需要定义一个函数，这个函数能够完成2个数的加法运算，并且把结果打印出来，该怎样设计？下面的代码可以吗？有什么缺陷吗？</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">message</span><span class="params">()</span>:</span></span><br><span class="line">    name = input(<span class="string">'请输入你的名字'</span>)</span><br><span class="line">    age = input(<span class="string">'请输入你的年龄'</span>)</span><br><span class="line">    print(name,age)</span><br><span class="line">    </span><br><span class="line">message()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请输入你的名字小吴</span><br><span class="line">请输入你的年龄23</span><br><span class="line">小吴 23</span><br></pre></td></tr></table></figure><h5 id="定义带有参数函数"><a class="markdownIt-Anchor" href="#定义带有参数函数"></a> 定义带有参数函数</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add2num</span><span class="params">()</span>:</span></span><br><span class="line">    a = <span class="number">11</span></span><br><span class="line">    b = <span class="number">22</span></span><br><span class="line">    print(a+b)</span><br><span class="line">add2num()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">33</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add2num</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    print(a+b)</span><br><span class="line">add2num(<span class="number">10</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure><h5 id="调用带有参数的函数"><a class="markdownIt-Anchor" href="#调用带有参数的函数"></a> 调用带有参数的函数</h5><h5 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h5><ul><li>定义时小括号中的参数，用来接收参数用的，称为 “形参”</li><li>调用时小括号中的参数，用来传递给函数用的，称为 “实参”</li></ul><h4 id="函数的返回值"><a class="markdownIt-Anchor" href="#函数的返回值"></a> 函数的返回值</h4><p>返回值：就是程序中函数完成一件事情后，最后给调用者的结果</p><p>注意：在python中return默认值为空–》None</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add2num</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">sum = add2num(<span class="number">10</span>,<span class="number">20</span>) </span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure><h4 id="函数的参数"><a class="markdownIt-Anchor" href="#函数的参数"></a> 函数的参数</h4><p>函数根据有没有参数，有没有返回值，可以相互组合，一共有4种</p><p>无参数，无返回值（此类函数，不能接收参数，也没有返回值，一般情况下，打印提示灯类似的功能，使用这类的函数）</p><p>无参数，有返回值（此类函数，不能接收参数，但是可以返回某个数据，一般情况下，像采集数据，用此类函数）</p><p>有参数，无返回值（此类函数，能接收参数，但不可以返回数据，一般情况下，对某些变量设置数据而不需结果时，用此类函数）</p><p>有参数，有返回值（此类函数，不仅能接收参数，还可以返回某个数据，一般情况下，像数据处理并需要结果的应用，用此类函数）</p><p>总结：<br>函数根据有没有参数，有没有返回值可以相互组合</p><p>定义函数时，是根据实际的功能需求来设计的，所以不同开发人员编写的函数类型各不相同</p><h4 id="函数嵌套调用"><a class="markdownIt-Anchor" href="#函数嵌套调用"></a> 函数嵌套调用</h4><p>一个函数里面又调用了另外一个函数，这就是所谓的函数嵌套调用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testB</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'---- testB start----'</span>)</span><br><span class="line">    print(<span class="string">'这里是testB函数执行的代码...(省略)...'</span>)</span><br><span class="line">    print(<span class="string">'---- testB end----'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testA</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'---- testA start----'</span>)</span><br><span class="line">    testB()</span><br><span class="line">    print(<span class="string">'---- testA end----'</span>)</span><br><span class="line"></span><br><span class="line">testA()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---- testA start----</span><br><span class="line">---- testB start----</span><br><span class="line">这里是testB函数执行的代码...(省略)...</span><br><span class="line">---- testB end----</span><br><span class="line">---- testA end----</span><br></pre></td></tr></table></figure><h4 id="关键字参数"><a class="markdownIt-Anchor" href="#关键字参数"></a> 关键字参数</h4><p>定义：<br>允许函数调用时参数的顺序与定义时不一致</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myPrint</span><span class="params">(str,age)</span>:</span></span><br><span class="line">    print(str,age)</span><br><span class="line"></span><br><span class="line">myPrint(<span class="string">'laowang'</span>,<span class="number">35</span>)</span><br><span class="line">myPrint(age=<span class="number">18</span>,str=<span class="string">'laosong'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">laowang 35</span><br><span class="line">laosong 18</span><br></pre></td></tr></table></figure><h4 id="默认参数缺省参数"><a class="markdownIt-Anchor" href="#默认参数缺省参数"></a> 默认参数（缺省参数）</h4><p>概述：<br>python为了简化函数的调用，提供了默认参数机制<br>调用函数时，缺省参数的值如果没有传入，则被认为是默认值</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myPrint</span><span class="params">(str,sex,age = <span class="number">35</span>)</span>:</span></span><br><span class="line">    print(str,sex,age)</span><br><span class="line">    </span><br><span class="line">myPrint(<span class="string">'laowang'</span>,<span class="string">'male'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">laowang male 35</span><br></pre></td></tr></table></figure><h4 id="不定长参数"><a class="markdownIt-Anchor" href="#不定长参数"></a> 不定长参数</h4><p>概述：</p><p>有时可能需要一个函数能处理比当初声明时更多的参数。这些参数叫做不定长参数，声明时不会命名。</p><p>基本语法如下：</p><p>def functionname([formal_args,] *args, **kwargs):</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;函数_文档字符串&quot;</span><br><span class="line">function_suite </span><br><span class="line">return [expression]</span><br></pre></td></tr></table></figure><p>加了星号（*）的变量args会存放所有未命名的变量参数，args为元组；</p><p>而加**的变量kwargs会存放命名参数，即形如key=value的参数，</p><p>kwargs为字典。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(a,b,*args,**kwargs)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>,a)</span><br><span class="line">    print(<span class="string">'b ='</span>,b)</span><br><span class="line">    print(<span class="string">'*args ='</span>,args)</span><br><span class="line">    print(<span class="string">'**kwargs ='</span>,kwargs)</span><br><span class="line"></span><br><span class="line"><span class="comment">#方式1</span></span><br><span class="line">fun(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,m=<span class="number">6</span>,n=<span class="number">7</span>,p=<span class="number">8</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#方式2：</span></span><br><span class="line">c = (<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">d = &#123;<span class="string">'m'</span>: <span class="number">6</span>, <span class="string">'n'</span>: <span class="number">7</span>, <span class="string">'p'</span>: <span class="number">8</span>&#125;</span><br><span class="line">fun(<span class="number">1</span>,<span class="number">2</span>,*c,**d)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a = 1</span><br><span class="line">b = 2</span><br><span class="line">*args = (3, 4, 5)</span><br><span class="line">**kwargs = &#123;&apos;p&apos;: 8, &apos;n&apos;: 7, &apos;m&apos;: 6&#125;</span><br><span class="line">a = 1</span><br><span class="line">b = 2</span><br><span class="line">*args = (3, 4, 5)</span><br><span class="line">**kwargs = &#123;&apos;p&apos;: 8, &apos;n&apos;: 7, &apos;m&apos;: 6&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="匿名函数"><a class="markdownIt-Anchor" href="#匿名函数"></a> 匿名函数</h4><p>定义：<br>不使用def这样的语句定义函数，使用lambda来创建匿名函数</p><p>用lambda关键词能创建小型匿名函数。这种函数得名于省略了用def声明函数的标准步骤。</p><p>lambda函数的语法只包含一个语句，如下：</p><p>lambda [arg1 [,arg2,…argn]]:expression</p><p>或者：</p><p>lambda 参数1,参数2,……,参数n:expression</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sum = <span class="keyword">lambda</span> arg1,arg2:arg1+arg2</span><br><span class="line"></span><br><span class="line">print(sum(<span class="number">10</span>,<span class="number">20</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(a,b,opt)</span>:</span></span><br><span class="line">    print(a)</span><br><span class="line">    print(b)</span><br><span class="line">    print(opt(a,b))</span><br><span class="line"></span><br><span class="line">fun(<span class="number">1</span>,<span class="number">2</span>,<span class="keyword">lambda</span> x,y:x+y)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">特点：</span></span><br><span class="line"><span class="string">1、lambda只是一个表达式，函数体比def简单</span></span><br><span class="line"><span class="string">2、lambda的主体是一个表达式，而不是代码块，仅仅只能在lambda表达式中封装简单的逻辑</span></span><br><span class="line"><span class="string">3、lambda函数有自己的命名空间,且不能访问自由参数列表之外的或全局命名空间的参数</span></span><br><span class="line"><span class="string">4、虽然lambda是一个表达式且看起来只能写一行，与C和C++内联函数不同。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意：</span></span><br><span class="line"><span class="string">Lambda函数能接收任何数量的参数但只能返回一个表达式的值</span></span><br><span class="line"><span class="string">匿名函数不能直接调用print，因为lambda需要一个表达式</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;\n特点：\n1、lambda只是一个表达式，函数体比def简单\n2、lambda的主体是一个表达式，而不是代码块，仅仅只能在lambda表达式中封装简单的逻辑\n3、lambda函数有自己的命名空间,且不能访问自由参数列表之外的或全局命名空间的参数\n4、虽然lambda是一个表达式且看起来只能写一行，与C和C++内联函数不同。\n\n\n注意：\nLambda函数能接收任何数量的参数但只能返回一个表达式的值\n匿名函数不能直接调用print，因为lambda需要一个表达式\n&apos;</span><br></pre></td></tr></table></figure><h4 id="回调函数"><a class="markdownIt-Anchor" href="#回调函数"></a> 回调函数</h4><p>定义：</p><p>回调函数就是一个通过函数指针调用的函数。如果你把函数的指针（地址）作为参数传递给另一个函数，当这个指针被用来调用其所指向的函数时，</p><p>我们就说这是回调函数。回调函数不是由该函数的实现方直接调用，而是在特定的事件或条件发生时由另外的一方调用的，用于对该事件或条件进行</p><p>响应</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x*<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quadruple</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x*<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#中间函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOddNumber</span><span class="params">(k,getEvenNUmber)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + getEvenNUmber(k)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    k = <span class="number">1</span></span><br><span class="line">    i = getOddNumber(k,double)</span><br><span class="line">    print(i)</span><br><span class="line">    i = getOddNumber(k,quadruple)</span><br><span class="line">    print(i)</span><br><span class="line">   </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="面向对象"><a class="markdownIt-Anchor" href="#面向对象"></a> 面向对象</h3><h4 id="面向对象思想"><a class="markdownIt-Anchor" href="#面向对象思想"></a> 面向对象思想</h4><p>面向过程：根据业务逻辑从上到下写代码</p><p>面向对象：将数据与函数绑定到一起，进行封装，这样能够更快速的开发程序，减少了重复代码的重写过程</p><p>面向过程编程最易被初学者接受，其往往用一长段代码来实现指定功能，开发过程的思路是将数据与函数按照执行的逻</p><p>辑顺序组织在一起，数据与函数分开考虑。</p><p>定义：</p><p>面向对象(object-oriented ;简称: OO) 至今还没有统一的概念 我这里把它定义为: 按人们 认识客观世界的系</p><p>统思维方式,采用基于对象(实体) 的概念建立模型,模拟客观世界分析、设 计、实现软件的办法。</p><p>面向对象编程(Object Oriented Programming-OOP) 是一种解决软件复用的设计和编程方法。 这种方法把软件</p><p>系统中相近相似的操作逻辑和操作 应用数据、状态,以类的型式描述出来,以对象实例的形式在软件系统中复用,以达</p><p>到提高软件开发效率的作用。</p><h4 id="类和对象"><a class="markdownIt-Anchor" href="#类和对象"></a> 类和对象</h4><p>面向对象编程的2个非常重要的概念：类和对象</p><p>对象是面向对象编程的核心，在使用对象的过程中，为了将具有共同特征和行为的一组对象抽象定义，</p><p>提出了另外一个新的概念——类</p><p>类就相当于制造飞机时的图纸，用它来进行创建的飞机就相当于对象</p><h5 id="类"><a class="markdownIt-Anchor" href="#类"></a> 类</h5><p>具有相似内部状态和运动规律的实体的集合(或统称为抽象)。</p><p>具有相同属性和行为事物的统称</p><p>定义：</p><p>类是抽象的,在使用的时候通常会找到这个类的一个具体的存在,使用这个具体的存在。一个类可以找到多个对象</p><h5 id="对象"><a class="markdownIt-Anchor" href="#对象"></a> 对象</h5><p>概述：</p><p>某一个具体事物的存在 ,在现实世界中可以是看得见摸得着的。</p><p>可以是直接使用的</p><p>总结：</p><p>类和对象之间的关系：</p><p>就像利用玩具的模型来创建多种不同的玩具</p><p>类就是创建对象的模板</p><h5 id="区分类和对象"><a class="markdownIt-Anchor" href="#区分类和对象"></a> 区分类和对象</h5><p>奔驰汽车 类</p><p>奔驰smart 类</p><p>张三的那辆奔驰smart 对象</p><p>狗 类</p><p>大黄狗 类</p><p>李四家那只大黄狗 对象</p><h4 id="类的设计"><a class="markdownIt-Anchor" href="#类的设计"></a> 类的设计</h4><p>类(Class) 由3个部分构成</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">类的名称:类名</span><br><span class="line">类的属性:一组数据</span><br><span class="line">类的方法:允许对进行操作的方法 (行为)</span><br></pre></td></tr></table></figure><p>&lt;1&gt; 举例：</p><p>1）人类设计,只关心3样东西:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">事物名称(类名):人(Person)</span><br><span class="line">属性:身高(height)、年龄(age)</span><br><span class="line">方法(行为/功能):跑(run)、打架(fight)</span><br></pre></td></tr></table></figure><p>2）狗类的设计</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">类名:狗(Dog)</span><br><span class="line">属性:品种 、毛色、性别、名字、 腿儿的数量</span><br><span class="line">方法(行为/功能):叫 、跑、咬人、吃、摇尾巴</span><br></pre></td></tr></table></figure><h4 id="定义类"><a class="markdownIt-Anchor" href="#定义类"></a> 定义类</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>:</span></span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getCarInfo</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'车轮子个数:%d, 颜色%s'</span>%(self.wheelNum, self.color))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"车正在移动..."</span>)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">说明：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    定义类时有2种：新式类和经典类，上面的Car为经典类，如果是Car(object)则为新式类</span></span><br><span class="line"><span class="string">    类名 的命名规则按照"大驼峰"</span></span><br><span class="line"><span class="string"> """</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;\n说明：\n\n    定义类时有2种：新式类和经典类，上面的Car为经典类，如果是Car(object)则为新式类\n    类名 的命名规则按照&quot;大驼峰&quot;\n &apos;</span><br></pre></td></tr></table></figure><h4 id="对象创建"><a class="markdownIt-Anchor" href="#对象创建"></a> 对象创建</h4><p>python中，可以根据已经定义的类去创建出一个个对象</p><p>创建对象的格式为:</p><p>对象名 = 类名()</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">BMW = Car()</span><br><span class="line">BMW.move()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">车正在移动...</span><br></pre></td></tr></table></figure><h4 id="init"><a class="markdownIt-Anchor" href="#init"></a> <strong>init</strong>（）</h4><p>想一想:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在上一小节的demo中，我们已经给BMW这个对象添加了2个属性，wheelNum（车的轮胎数量）以及color（车的颜色），试想如果再次创建一个对象的话，肯定也需要进行添加属性，显然这样做很费事，那么有没有办法能够在创建对象的时候，就顺便把车这个对象的属性给设置呢？</span><br></pre></td></tr></table></figure><p>答:<br><strong>init</strong>()方法</p><p>使用方式：</p><p>def 类名:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#初始化函数，用来完成一些默认的设定</span><br><span class="line"></span><br><span class="line">def __init__():</span><br><span class="line"></span><br><span class="line">    pass</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.wheelnum = <span class="number">4</span></span><br><span class="line">        self.color = <span class="string">'蓝色'</span></span><br><span class="line"></span><br><span class="line">BMW = Car()</span><br><span class="line">print(BMW.color)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">蓝色</span><br></pre></td></tr></table></figure><h4 id="封装"><a class="markdownIt-Anchor" href="#封装"></a> 封装：</h4><ul><li>数据封装</li></ul><p>封装数据的主要原因是：保护隐私-私有属性</p><ul><li>方法封装</li></ul><p>封装方法的主要原因是：隔离复杂度–函数封装</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="继承"><a class="markdownIt-Anchor" href="#继承"></a> 继承</h4><p>继承的概念</p><p>在现实生活中，继承一般指的是子女继承父辈的财产</p><p>在程序中，继承描述的是事物之间的所属关系，例如猫和狗都属于动物，程序中便可以描述为猫和狗继承自动物；</p><p>同理，波斯猫和巴厘猫都继承自猫，而沙皮狗和斑点狗都继承足够，如下如所示：</p><p>格式：</p><p>子类在继承的时候，在定义类时，小括号()中为父类的名字</p><p>父类的属性、方法，会被继承给子类</p><h5 id="单继承"><a class="markdownIt-Anchor" href="#单继承"></a> 单继承</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#单继承</span></span><br><span class="line"><span class="comment"># 定义一个父类，如下:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, color=<span class="string">"白色"</span>)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.color = color</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s--在跑"</span>%self.name)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 定义一个子类，继承Cat类如下:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bosi</span><span class="params">(Cat)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setNewName</span><span class="params">(self, newName)</span>:</span></span><br><span class="line">        self.name = newName</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s--在吃"</span>%self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bs = Bosi(<span class="string">"印度猫"</span>)</span><br><span class="line">print(<span class="string">'bs的名字为:%s'</span>%bs.name)</span><br><span class="line">print(<span class="string">'bs的颜色为:%s'</span>%bs.color)</span><br><span class="line">bs.eat()</span><br><span class="line">bs.setNewName(<span class="string">'波斯'</span>)</span><br><span class="line">bs.run()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bs的名字为:印度猫</span><br><span class="line">bs的颜色为:白色</span><br><span class="line">印度猫--在吃</span><br><span class="line">波斯--在跑</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#注意点：设置私有属性</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span><span class="params">(object)</span>:</span></span><br><span class="line">    age = <span class="number">13</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=<span class="string">'动物'</span>, color=<span class="string">'白色'</span>)</span>:</span></span><br><span class="line">        self.__name = name</span><br><span class="line">        self.color = color</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__test</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.__name)</span><br><span class="line">        print(self.color)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.__name)</span><br><span class="line">        print(self.color)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dogTest1</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#print(self.__name) #不能访问到父类的私有属性</span></span><br><span class="line">        print(self.color)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dogTest2</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#self.__test() #不能访问父类中的私有方法</span></span><br><span class="line">        self.test()</span><br><span class="line"></span><br><span class="line">A = Animal()</span><br><span class="line"><span class="comment">#print(A.__name) #程序出现异常，不能访问私有属性</span></span><br><span class="line">print(A.color)</span><br><span class="line"><span class="comment">#A.__test() #程序出现异常，不能访问私有方法</span></span><br><span class="line">A.test()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"------分割线-----"</span>)</span><br><span class="line"></span><br><span class="line">D = Dog(name = <span class="string">"小花狗"</span>, color = <span class="string">"黄色"</span>)</span><br><span class="line">D.dogTest1()</span><br><span class="line">D.dogTest2()</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">总结：私有的属性，,不能通过对象直接访问，但是可以通过方法访问</span></span><br><span class="line"><span class="string">    私有的方法  不能通过对象直接访问</span></span><br><span class="line"><span class="string">    私有的属性、方法，不会被子类继承，也不能被访问  </span></span><br><span class="line"><span class="string">    一般情况下，私有的属性、方法都是不对外公布的，往往用来做内部的事情，起到安全的作用</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">白色</span><br><span class="line">动物</span><br><span class="line">白色</span><br><span class="line">------分割线-----</span><br><span class="line">黄色</span><br><span class="line">小花狗</span><br><span class="line">黄色</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&apos;\n总结：私有的属性，,不能通过对象直接访问，但是可以通过方法访问\n    私有的方法  不能通过对象直接访问\n    私有的属性、方法，不会被子类继承，也不能被访问  \n    一般情况下，私有的属性、方法都是不对外公布的，往往用来做内部的事情，起到安全的作用\n&apos;</span><br></pre></td></tr></table></figure><h5 id="多继承"><a class="markdownIt-Anchor" href="#多继承"></a> 多继承</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">理解：</span></span><br><span class="line"><span class="string">  骡子是马和驴的杂交品种</span></span><br><span class="line"><span class="string">所谓多继承，即子类有多个父类，并且具有它们的特征  </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment">#Python中多继承的格式如下:</span></span><br><span class="line"><span class="comment"># 定义一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printA</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'----A----'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printB</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'----B----'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个子类，继承自A、B</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(A,B)</span>:</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printC</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'----C----'</span>)</span><br><span class="line"></span><br><span class="line">obj_C = C()</span><br><span class="line">obj_C.printA()</span><br><span class="line">obj_C.printB()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">----A----</span><br><span class="line">----B----</span><br></pre></td></tr></table></figure><h4 id="多态"><a class="markdownIt-Anchor" href="#多态"></a> 多态</h4><p>多态的概念是应用于Java和C#这一类强类型语言中，而Python崇尚“鸭子类型”。</p><p>所谓多态：定义时的类型和运行时的类型不一样，此时就成为多态</p><p>Python伪代码实现Java或C#的多态</p><p>一个父类有多个子类</p><h4 id="类属性和实例属性"><a class="markdownIt-Anchor" href="#类属性和实例属性"></a> 类属性和实例属性</h4><p>类属性就是类对象所拥有的属性，它被所有类对象的实例对象所共有，</p><p>在内存中只存在一个副本，这个和C++中类的静态成员变量有点类似。对于公有的类属性，</p><p>在类外可以通过类对象和实例对象访问</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span><span class="params">(object)</span>:</span></span><br><span class="line">    name = <span class="string">'Tom'</span></span><br><span class="line">    __age = <span class="number">12</span></span><br><span class="line">    </span><br><span class="line">p = People()</span><br><span class="line">print(p.name)</span><br><span class="line">print(People.name)</span><br><span class="line"><span class="comment"># print(p.__age)</span></span><br><span class="line"><span class="comment"># print(People.__age)</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Tom</span><br><span class="line">Tom</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span><span class="params">(object)</span>:</span></span><br><span class="line">    address = <span class="string">'beijing'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.name = <span class="string">'Tom'</span></span><br><span class="line">        self.age = <span class="number">12</span></span><br><span class="line">        </span><br><span class="line">p = People()</span><br><span class="line">print(p.address)</span><br><span class="line">print(p.name)</span><br><span class="line">print(p.age)</span><br><span class="line"></span><br><span class="line">print(People.address)</span><br><span class="line">print(People.name)</span><br><span class="line"><span class="comment"># print(p.age)</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">beijing</span><br><span class="line">Tom</span><br><span class="line">12</span><br><span class="line">beijing</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">AttributeError                            Traceback (most recent call last)</span><br><span class="line"></span><br><span class="line">&lt;ipython-input-22-e63e70d527d3&gt; in &lt;module&gt;</span><br><span class="line">     11 </span><br><span class="line">     12 print(People.address)</span><br><span class="line">---&gt; 13 print(People.name)</span><br><span class="line">     14 # print(p.age)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AttributeError: type object &apos;People&apos; has no attribute &apos;name&apos;</span><br></pre></td></tr></table></figure><h3 id="模块"><a class="markdownIt-Anchor" href="#模块"></a> 模块</h3><p>目前代码比较少，写在一个文件中还体现不出什么缺点，但是随着代码量越来越多，代码就越来越难以维护。</p><p>为了解决难以维护的问题，我们把很多相似功能的函数分组，分别放到不同的文件中去。</p><p>这样每个文件所包含的内容相对较少，而且对于每一个文件的大致功能可用用文件名来体现。</p><p>很多编程语言都是这么来组织代码结构。一个.py文件就是一个模块</p><p>在Python中有一个概念叫做模块（module），这个和C语言中的头文件以及Java中的包很类似，</p><p>比如在Python中要调用sin函数，必须用import关键字引入math这个模块，下面就来了解一下Python中的模块。</p><p>说的通俗点：模块就好比是工具包，要想使用这个工具包中的工具(就好比函数)，就需要导入这个模块</p><p>优点：</p><ul><li>提高代码的可维护性</li><li>提高了代码的复用度，当一个模块完毕，可以被多个地方引用</li><li>引用其他的模块(内置模块和三方模块和自定义模块)</li><li>避免函数名和变量名的冲突</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#常见的几种格式</span></span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> abs</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange <span class="keyword">as</span> rr</span><br></pre></td></tr></table></figure><h3 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h3><p>概述：</p><p>常见的txt/avi/html/zip/word等都称之为文件</p><p>文件作用：</p><p>存储数据</p><h4 id="文件打开"><a class="markdownIt-Anchor" href="#文件打开"></a> 文件打开</h4><p>在python，使用open函数，可以打开一个已经存在的文件，或者创建一个新文件</p><p>open(文件名，访问模式)</p><p>示例如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f = open(&apos;test.txt&apos;, &apos;w&apos;)</span><br></pre></td></tr></table></figure><p>说明:<br>访问模式 说明<br>r 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</p><p>w 打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</p><p>a 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到</p><p>已有内容之后。如果该文件不存在，创建新文件进行写入。</p><p>rb 以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</p><p>wb 以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</p><p>ab 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，</p><p>新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</p><p>r+ 打开一个文件用于读写。文件指针将会放在文件的开头。</p><p>w+ 打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</p><p>a+ 打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。</p><p>如果该文件不存在，创建新文件用于读写。</p><p>rb+ 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</p><p>wb+ 以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</p><p>ab+ 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。</p><p>如果该文件不存在，创建新文件用于读写。</p><h4 id="文件关闭"><a class="markdownIt-Anchor" href="#文件关闭"></a> 文件关闭</h4><p>使用函数：<br>close( )</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#示例如下：</span></span><br><span class="line"><span class="comment"># 新建一个文件，文件名为:test.txt</span></span><br><span class="line">f = open(<span class="string">'test.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">    <span class="comment"># 关闭这个文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>文件读写</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写</span></span><br><span class="line"><span class="comment">#使用write()可以完成向文件写入数据</span></span><br><span class="line">f = open(<span class="string">'test.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">f.write(<span class="string">'hello world, i am here!'</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">注意：</span></span><br><span class="line"><span class="string">    如果文件不存在那么创建，如果存在那么就先清空，然后写入数据</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取内容</span></span><br><span class="line"><span class="comment">#1.read()</span></span><br><span class="line"><span class="comment">#2.readlines()</span></span><br><span class="line"><span class="comment">#3.readline()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = open(<span class="string">'test.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line">content = f.read(<span class="number">5</span>)</span><br><span class="line">print(content)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="文件定位读写"><a class="markdownIt-Anchor" href="#文件定位读写"></a> 文件定位读写</h4><p>什么是定位？</p><p>通俗的讲就是找到一个合适的位置</p><p>在软件开发中文件的读写定为该如何实现？</p><h5 id="获取当前读写的位置"><a class="markdownIt-Anchor" href="#获取当前读写的位置"></a> 获取当前读写的位置</h5><h1 id="在读写文件的过程中如果想知道当前的位置"><a class="markdownIt-Anchor" href="#在读写文件的过程中如果想知道当前的位置"></a> 在读写文件的过程中，如果想知道当前的位置，</h1><h1 id="可以使用tell来获取这里是光标开始的位置"><a class="markdownIt-Anchor" href="#可以使用tell来获取这里是光标开始的位置"></a> 可以使用tell()来获取,这里是光标开始的位置</h1><h5 id="定位到某个位置"><a class="markdownIt-Anchor" href="#定位到某个位置"></a> 定位到某个位置</h5><p>如果在读写文件的过程中，需要从另外一个位置进行操作的话，可以使用seek()</p><h4 id="文件重命名"><a class="markdownIt-Anchor" href="#文件重命名"></a> 文件重命名</h4><p>os模块中的rename()可以完成对文件的重命名操作</p><p>格式：</p><p>rename(需要修改的文件名, 新的文件名)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.rename(<span class="string">'test.txt'</span>,<span class="string">'haht.txt'</span>)</span><br></pre></td></tr></table></figure><h4 id="文件删除"><a class="markdownIt-Anchor" href="#文件删除"></a> 文件删除</h4><p>概述：os模块中的remove()可以完成对文件的删除操作</p><p>格式：</p><p>remove(待删除的文件名)</p><h3 id="文件夹操作"><a class="markdownIt-Anchor" href="#文件夹操作"></a> 文件夹操作</h3><h4 id="创建文件夹"><a class="markdownIt-Anchor" href="#创建文件夹"></a> 创建文件夹</h4><p>使用os模块中的mkdir()函数</p><p>格式：</p><p>mkdir(str)</p><h4 id="获取当前目录"><a class="markdownIt-Anchor" href="#获取当前目录"></a> 获取当前目录</h4><p>使用os模块中的getcwd()函数</p><p>格式：<br>getcwd()</p><h4 id="获取目录列表"><a class="markdownIt-Anchor" href="#获取目录列表"></a> 获取目录列表</h4><p>使用os模块中的listdir()函数</p><p>格式：<br>listdir()</p><h4 id="删除文件夹"><a class="markdownIt-Anchor" href="#删除文件夹"></a> 删除文件夹</h4><p>使用os模块中的rmdir()函数</p><p>rmdir(str)—&gt;str:表示需要删除的文件夹名称</p><h3 id="异常"><a class="markdownIt-Anchor" href="#异常"></a> 异常</h3><h4 id="异常的处理"><a class="markdownIt-Anchor" href="#异常的处理"></a> 异常的处理</h4><p>当出现异常情况时改如何处理？</p><p>捕获异常</p><p>捕获异常的基本格式：</p><p>try…except…</p><h4 id="else"><a class="markdownIt-Anchor" href="#else"></a> else</h4><p>咱们应该对else并不陌生，在if中，它的作用是当条件不满足时执行的实行；</p><p>同样在try…except…中也是如此，即如果没有捕获到异常，那么就执行else中的事情</p><h4 id="tryfinally"><a class="markdownIt-Anchor" href="#tryfinally"></a> try…finally…</h4><p>try…finally…语句用来表达这样的情况：</p><p>在程序中，如果一个段代码必须要执行，即无论异常是否产生都要执行，那么此时就需要使用finally。</p><p>比如文件关闭，释放锁，把数据库连接返还给连接池等</p><h4 id="自定义异常"><a class="markdownIt-Anchor" href="#自定义异常"></a> 自定义异常</h4><p>你可以用raise语句来引发一个异常</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShortInputException</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,length,atleast)</span>:</span></span><br><span class="line">        self.length = length</span><br><span class="line">        self.atleast = atleast</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = input(<span class="string">'请输入---&gt;'</span>)</span><br><span class="line">        <span class="keyword">if</span> len(s) &lt; <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">raise</span> ShortInputException(len(s),<span class="number">3</span>)</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> ShortInputException <span class="keyword">as</span> result:</span><br><span class="line">        print(result.length,result.atleast)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'没有异常发生'</span>)</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="生成器"><a class="markdownIt-Anchor" href="#生成器"></a> 生成器</h3><p>通过列表生成式，我们可以直接创建一个列表。但是，受到内存限制，列表容量肯定是有限的。</p><p>而且，创建一个包含100万个元素的列表，不仅占用很大的存储空间，如果我们仅仅需要访问前面几个元素，</p><p>那后面绝大多数元素占用的空间都白白浪费了。</p><p>所以，如果列表元素可以按照某种算法推算出来，那我们是否可以在循环的过程中不断推算出后续的元素呢？</p><p>这样就不必创建完整的list，从而节省大量的空间。在Python中，这种一边循环一边计算的机制，</p><p>称为生成器：generator。</p><h4 id="创建生成器"><a class="markdownIt-Anchor" href="#创建生成器"></a> 创建生成器</h4><h3 id="迭代器"><a class="markdownIt-Anchor" href="#迭代器"></a> 迭代器</h3><p>迭代:</p><p>访问集合元素的一种方式。</p><p>迭代器:</p><p>是一个可以记住遍历的位置的对象。</p><p>迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。</p><p>迭代器的特点：</p><p>迭代器只能往前不会后退。</p><h4 id="迭代对象"><a class="markdownIt-Anchor" href="#迭代对象"></a> 迭代对象</h4><p>以直接作用于 for 循环的数据类型有以下几种：</p><p>一类是集合数据类型，如 list 、 tuple 、 dict 、 set 、 str 等；</p><p>一类是 generator ，包括生成器和带 yield 的generator function。</p><p>这些可以直接作用于 for 循环的对象统称为可迭代对象： Iterable 。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line">a = isinstance([],Iterable)</span><br><span class="line">b = isinstance(&#123;&#125;,Iterable)</span><br><span class="line">c = isinstance(<span class="string">'abc'</span>,Iterable)</span><br><span class="line">d = isinstance(<span class="number">100</span>,Iterable)</span><br><span class="line">e = isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)),Iterable)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterator</span><br><span class="line">a = isinstance(iter([]),Iterator)</span><br><span class="line">b = isinstance(&#123;&#125;,Iterator)</span><br><span class="line">c = isinstance(<span class="string">'abc'</span>,Iterator)</span><br><span class="line">d = isinstance(<span class="number">100</span>,Iterator)</span><br><span class="line">e = isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)),Iterator)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><h4 id="迭代器使用"><a class="markdownIt-Anchor" href="#迭代器使用"></a> 迭代器使用</h4><h4 id="iter函数"><a class="markdownIt-Anchor" href="#iter函数"></a> iter()函数</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">1.凡是可作用于 for 循环的对象都是 Iterable 类型；</span></span><br><span class="line"><span class="string">2.凡是可作用于 next() 函数的对象都是 Iterator 类型</span></span><br><span class="line"><span class="string">3.集合数据类型如 list 、 dict 、 str 等是 Iterable 但不是 Iterator ，</span></span><br><span class="line"><span class="string">不过可以通过 iter() 函数获得一个 Iterator 对象。</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><h3 id="装饰器"><a class="markdownIt-Anchor" href="#装饰器"></a> 装饰器</h3><p>装饰器是程序开发中经常会用到的一个功能，用好了装饰器，开发效率如虎添翼，所以这也是Python面试中必问的问题，但对于好多初次接触这个知识的人来讲，这个功能有点绕，自学时直接绕过去了，然后面试问到了就挂了，因为装饰器是程序开发的基础知识，这个都不会，别跟人家说你会Python, 看了下面的文章，保证你学会装饰器。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#首先要先搞明白下面的代码：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第一波 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'foo'</span>)</span><br><span class="line"></span><br><span class="line">foo     <span class="comment">#表示是函数</span></span><br><span class="line">foo()   <span class="comment">#表示执行foo函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二波</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'foo'</span>)</span><br><span class="line"></span><br><span class="line">foo = <span class="keyword">lambda</span> x: x + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">foo(<span class="number">1</span>)   <span class="comment"># 执行下面的lambda表达式，而不再是原来的foo函数，因为foo这个名字被重新指向了另外一个匿名函数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"haha"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">"*******************"</span>)</span><br><span class="line">        func()</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="comment">#f是函数func1的加强版本</span></span><br><span class="line">f = outer(func1)</span><br><span class="line">f()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#如何理解装饰器</span></span><br><span class="line"><span class="comment">#需求：</span></span><br><span class="line"><span class="comment">#一个企业有N个业务部门，1个基础平台部门，基础平台负责提供底层的功能，</span></span><br><span class="line"><span class="comment">############### 基础平台提供的功能如下 ###############</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f3'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">############### 业务部门A 调用基础平台提供的功能 ###############</span></span><br><span class="line"></span><br><span class="line">f1()</span><br><span class="line">f2()</span><br><span class="line">f3()</span><br><span class="line">f4()</span><br><span class="line"></span><br><span class="line"><span class="comment">############### 业务部门B 调用基础平台提供的功能 ###############</span></span><br><span class="line"></span><br><span class="line">f1()</span><br><span class="line">f2()</span><br><span class="line">f3()</span><br><span class="line">f4()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#第一版</span></span><br><span class="line"><span class="comment">############### 基础平台提供的功能如下 ############### </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 验证1</span></span><br><span class="line">    <span class="comment"># 验证2</span></span><br><span class="line">    <span class="comment"># 验证3</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 验证1</span></span><br><span class="line">    <span class="comment"># 验证2</span></span><br><span class="line">    <span class="comment"># 验证3</span></span><br><span class="line">    print(<span class="string">'f2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 验证1</span></span><br><span class="line">    <span class="comment"># 验证2</span></span><br><span class="line">    <span class="comment"># 验证3</span></span><br><span class="line">    print(<span class="string">'f3'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 验证1</span></span><br><span class="line">    <span class="comment"># 验证2</span></span><br><span class="line">    <span class="comment"># 验证3</span></span><br><span class="line">    print(<span class="string">'f4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">############### 业务部门不变 ############### </span></span><br><span class="line"><span class="comment">### 业务部门A 调用基础平台提供的功能### </span></span><br><span class="line"></span><br><span class="line">f1()</span><br><span class="line">f2()</span><br><span class="line">f3()</span><br><span class="line">f4()</span><br><span class="line"></span><br><span class="line"><span class="comment">### 业务部门B 调用基础平台提供的功能 ### </span></span><br><span class="line"></span><br><span class="line">f1()</span><br><span class="line">f2()</span><br><span class="line">f3()</span><br><span class="line">f4()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二版</span></span><br><span class="line"><span class="comment">############### 基础平台提供的功能如下 ############### </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 验证1</span></span><br><span class="line">    <span class="comment"># 验证2</span></span><br><span class="line">    <span class="comment"># 验证3</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    check_login()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    check_login()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'f2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    check_login()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'f3'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    check_login()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'f4'</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="comment">#第三版</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w1</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        func()</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f2'</span>)</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f3'</span>)</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f4'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#装饰器的基本使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义函数：完成包裹数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeBold</span><span class="params">(fn)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;b&gt;"</span> + fn() + <span class="string">"&lt;/b&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义函数：完成包裹数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeItalic</span><span class="params">(fn)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;i&gt;"</span> + fn() + <span class="string">"&lt;/i&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> wrapped</span><br><span class="line"></span><br><span class="line"><span class="meta">@makeBold</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello world-1"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@makeItalic</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello world-2"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@makeBold</span></span><br><span class="line"><span class="meta">@makeItalic</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello world-3"</span></span><br><span class="line"></span><br><span class="line">print(test1())</span><br><span class="line">print(test2())</span><br><span class="line">print(test3())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>口语学习8-做饭or叫外卖</title>
      <link href="/post/e6a09d9d.html"/>
      <url>/post/e6a09d9d.html</url>
      
        <content type="html"><![CDATA[<p>做饭or叫外卖？</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><ol><li><p>Order 定购; 下单</p></li><li><p>Delivery 递送</p></li><li><p>Takeout 外卖</p></li><li><p>Home-cooked 家里煮的</p></li><li><p>Homemade 自制的；家里做的</p></li></ol><p> </p><hr><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><ol><li><p>I’m gonna order a pizza.<br>我来点个披萨外卖。</p></li><li><p>That’s the chicken delivery guy.<br>那是送鸡肉外卖的小伙。</p></li><li><p>Hey, I got Chinese.<br>嘿，我买了中餐。</p></li><li><p>Are you hungry? I made curry.<br>饿了吗 我做了咖喱。</p></li><li><p>We’ll have the takeout.<br>我们吃外卖吧。</p></li><li><p>I’m cooking.<br>我在做饭呢。</p></li><li><p>I need you to take care of dinner for me.<br>我需要你帮我做晚餐。</p></li><li><p>Okay, I’ll just go start dinner.<br>好吧，我直接开始做晚饭。</p></li><li><p>I’m just dropping off another home-cooked meal.<br>我就是拿给你另一道家常菜。</p></li><li><p>You know what you need? Some homemade chicken soup.<br>你知道你需要什么？来点自制鸡汤。</p></li></ol><p> </p><hr><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>现代人的每日难题：今天吃什么？一起来学习和吃饭有关的地道表达吧!</p><h2 id="part-1打电话叫外卖-delivery"><a class="markdownIt-Anchor" href="#part-1打电话叫外卖-delivery"></a> Part 1：打电话叫外卖-Delivery</h2><ol><li>I’m gonna order a pizza. 我来点个披萨外卖。<br>主语 be going to +order 食物.</li></ol><p>比起出去就餐，在疲惫或天冷的时候也许你更喜欢订餐，足不出户就可以享用美食。<br>动词order有很多意思：</p><ol><li>订购，订货；</li><li>命令，指挥；<br>3）点菜，(餐厅）点单等等。<br>视频里呈现的语境中，order就是打电话叫外卖的意思。</li></ol><p>Gonna=going to的口语形式。句子使用be going to+动词 结构表示将来，而不用will+动词。<br>因为be going to 表示近期、眼下就要发生的事情。Will 表示的将来时间则较远一些。<br>发音：单词pizza/ˈpi:tsə/的重音在第一音节，长元音/i:/的发音要饱满和清晰。发辅音/ts/时，舌尖抵住上齿龈，送出气流，类似于汉字“刺”的音。</p><ol start="2"><li>That’s the chicken delivery guy. 那是送鸡肉外卖的小伙。<br>That is + the 食物 delivery guy/girl</li></ol><p>虽然chicken可以做形容词，指某人胆怯和懦弱。在叫外卖的语境里，chicken delivery guy是指送鸡肉外卖的小哥。</p><p>单词chicken和delivery都是名词guy的修饰语，所以a chicken delivery guy 相当于a guy who delivers chicken。<br>更多表达：<br>That’s the pizza delivery boy. 那是披萨外卖的男孩。<br>Who is taking care of the food delivery? 谁负责送餐。</p><h2 id="part-2打包带走-takeout"><a class="markdownIt-Anchor" href="#part-2打包带走-takeout"></a> Part 2：打包带走-Takeout</h2><p>除了打电话叫外卖，还可以选择去餐厅打包带回家吃。毕竟国外的运送费加上服务费，也是一笔不小的开支。</p><ol start="3"><li>We’ll have the takeout. 我们吃外卖吧。<br>We will have +食物</li></ol><p>Will have sth. 指要吃什么。I’ll have fish and chips. 我要吃炸鱼和薯条。</p><p>Takeout是食物外卖的统称。和food delivery不同的是，takeout是顾客到餐厅购买，再带出外吃的；而delivery是顾客在家等食物送上门的意思。</p><p>发音：takeout ['teɪkaʊt]的重音在第一音节[teɪ]。要发好这个单词，一定要把元音/eɪ/和/e/区分。另外，/t/音在词尾会有省读的现象。</p><ol start="4"><li>Hey, I got Chinese. 嘿，我买了中餐。<br>主语 get +某种料理</li></ol><p>动词get 也有很多意思：<br>1）使得；获得；<br>2）变得，变为；<br>3) 购买；<br>4）得到等等。<br>Chinese除了指“中国的”，“中国人”，还有“中餐”的意思。<br>结合语境看，例句省略了takeout一词，说话的人拿着一大袋子食物进门，指他买了（得到了）中餐。</p><p>更多表达：<br>We’re gonna order Thai. 我们要点泰国菜外卖。<br>What did you get? Chinese? 你买了啥？中餐吗？<br>I ordered some Chinese food. 我订了中餐外卖。</p><p>Part 3：做饭-Cooking</p><ol start="5"><li>Are you hungry? I made curry. 饿了吗？我做了咖喱。<br>主语 make +某种料理</li></ol><p>Make curry指“煮咖喱”。采用一般过去时，因为“煮”是一个已经完成的动作。<br>美剧中出镜率很高的家常菜还有casserole砂锅炖菜， beef stew炖牛肉，pasta意大利面，lasagne意式宽面等。</p><p>更多表达：<br>I want to make curry for dinner. 晚餐我想煮咖喱<br>Do you know how to make curry? 你知道怎么做咖喱吗<br>发音：用are 引导的一般疑问句是升调结尾，而陈述句是降调结尾。另外陈述句里带有一个信息焦点词“curry”，所以音高会有明显差别。<br>“I made curry”音高的变化如下图：</p><p>上升的地方是cu-，发-rry时音调往下走。</p><ol start="6"><li>I’m cooking. 我在做饭呢。<br>主语 +be cooking</li></ol><p>Be cooking是现在进行时，它可以表示正在进行的动作，也可以用在口语里表示将来的动作。<br>比如who’s cooking？可以指谁在做饭或者谁来做饭？</p><p>更多表达：<br>Are you cooking tonight? 今晚你来做饭吗<br>Your mother is busy. She’s cooking. 你老妈很忙 她在做饭<br>发音：Cooking['kʊkɪŋ]的发音难点在于重读音节中的元音/ʊ/。这是个短元音，发音更加短促，嘴唇嘟起来一下就要缩回来。要注意和/u:/区分，否则听起来会像“酷课”。</p><ol start="7"><li>I need you to take care of dinner for me. 我需要你帮我搞定晚餐。<br>主语 need 某人 +to take care of 某物.</li></ol><p>做饭也是件很占用时间的事。忙不过来时，可以求助家人来搭把手。<br>To take care of sth. 指照料，负责, 处理等。例句里的take care of dinner就是指负责晚餐。<br>句首的I need sb to do sth.，和句尾的for me都是为了强调“请求”，“求助”的意思。<br>视频中的说话人是夫妻，所以并没有任何的礼貌用语，语气也比较强硬。大家使用时这个句型时要注意对方的身份哦。<br>更多表达：<br>I need you to make dinner for me. 我需要你帮我煮晚餐<br>Could you please take care of dinner for me? 你能帮我搞定晚餐吗？</p><ol start="8"><li>Okay. I’ll just go start dinner.好吧，我直接开始做晚饭。<br>主语 will go start +某物</li></ol><p>Start dinner在视频里指开始做晚餐，是start making dinner的简短版。<br>不要理解成开始吃晚饭。一定要结合语境才能正确地解读和表达出最准确的意思。<br>发音：例句中just和start的词尾/t/音会失去爆破。因爆破音/t/后面紧跟着另一个爆破音时，对于/t/音，只作姿势，不发音也不送气。</p><ol start="9"><li>I’m just dropping off another home-cooked meal！我就是拿给你另一道家常菜。<br>主语 be dropping off + home-cooked 食物</li></ol><p>有些人自己做好了饭，还想着送点给邻居，能住在这样的人旁边真的太幸福了！<br>I’m just +doing sth., 表达了我只是做某事。副词just代表“只不过”，在句子里有强调的作用。潜台词是：没别的意思，就是来给你送点菜，别放在心上。</p><p>形容词home-cooked 特别强调了是在家煮的，类似的合成形容词还有man-made人工的, color-blind色盲的, heart-broken伤心的等等。</p><ol start="10"><li>You know what you need? Some homemade chicken soup. 你知道你需要什么？来点自制鸡汤。<br>Some homemade +食物</li></ol><p>没错，chicken soup就是鸡汤本“汤”。当你情绪低落时，你的美国朋友非常可能对你说这句。<br>Homemade也是“名词+过去分词”的合成形容词, 类似handmade手工的. 合成形容词可以带横杠或者两个词直接合并一起，成为一个词。<br>Chicken soup 在西方人的文化里有特殊的意义。它是代表治愈的食物，也是常常作为营养品而给生病的人准备的。<br>这也是为什么某些安慰+励志类的文章被称作“chicken soup for the soul series”，鸡汤文。</p><p>注意：chicken soup也属于comfort food慰藉食物。后者常常指口感好并能使享用者情绪好转的食物，但很多人会把高热量高油脂的食物也称作comfort food。</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLP基础介绍</title>
      <link href="/post/c939a57a.html"/>
      <url>/post/c939a57a.html</url>
      
        <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p>自然语言处理是一门融语言学、计算机科学、人工智能于一体的科学，解决的是”让机器可以理解自然语言“。</p><p> </p><hr><h1 id="发展阶段"><a class="markdownIt-Anchor" href="#发展阶段"></a> 发展阶段：</h1><p>1950年代，基于规则的方式；</p><p>1970年代，统计语言学；</p><p>2003年，神经网络。</p><p> </p><hr><h1 id="主要研究方向"><a class="markdownIt-Anchor" href="#主要研究方向"></a> 主要研究方向：</h1><p>词法短语：分词，词性标注，命名实体识别，组块分析，Term权重，Term紧密度</p><p>句法语义：语言模型，依存句法分析，词义消歧，语义角色标注，深层语义分析</p><p>篇章理解：文本分类、聚类，文本摘要，文本生成，篇章关系识别，篇章衔接关系，指带消歧，语义表示，语义匹配，主题模型，情感分析，舆情监控</p><p>系统应用：信息抽取，只是图谱(表示，建图，补全，推理等)，信息检索(索引，召回，排序等)，Query分析，自动问答，智能对话，阅读理解，机器翻译，语音识别、合成，OCR，图像文字生成</p><p> </p><hr><h1 id="词法阶段的工具"><a class="markdownIt-Anchor" href="#词法阶段的工具"></a> 词法阶段的工具：</h1><p>NLTK</p><ul><li>官网地址：<a href="http://www.nltk.org" target="_blank" rel="noopener">http://www.nltk.org</a></li><li>Python上著名的自然语言处理库，具有一下优点：<ul><li>自带语料库，词性分类库</li><li>自带分词，POS（词性标注），NER（命名实体识别）等功能</li><li>强大的社区支持</li></ul></li></ul><p> </p><hr><h1 id="词法处理流水线"><a class="markdownIt-Anchor" href="#词法处理流水线"></a> 词法（处理流水线）</h1><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/NLP%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D%E5%9B%BE/image-1.png" alt></p><p>Raw_Text表示一句话或者一个文本；Tokenize表示分词；POS Tag表示词性标注；Lemma/Stemming表示词的泛化，比如am, is, are可以转化成be这种形式，或 worked, working转化成work的形式；stopwords表示停用词；最后转化成一个Word_List。</p><h2 id="tokenize"><a class="markdownIt-Anchor" href="#tokenize"></a> Tokenize</h2><p>吧长句子拆成有“意义”的小部件</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line">sentence = <span class="string">"hello, world"</span></span><br><span class="line">tokens = nltk.word_tokenize(sentence)</span><br><span class="line">tokens</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'hello'</span>, <span class="string">','</span>, <span class="string">'world'</span>]</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/NLP%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D%E5%9B%BE/image-2.png" alt></p><p>jieba中文分词工具</p><h2 id="词性归一化"><a class="markdownIt-Anchor" href="#词性归一化"></a> 词性归一化：</h2><ul><li><p>Stemming 词干提取：一般来说，就是把不影响词性的inflection的小尾巴砍掉</p><p>walking 砍ing = walk</p><p>walked 砍ed = walk</p></li><li><p>Lemmatization 词性归一：把各种类型的词的变形，都归为一个形式</p><p>went 归一 = go</p><p>are 归一 = be</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.stem <span class="keyword">import</span> SnowballStemmer</span><br><span class="line">snowball_stemmer = SnowballStemmer(<span class="string">"english"</span>)</span><br><span class="line">snowball_stemmer.stem(<span class="string">'maximum'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'maximum'</span></span><br><span class="line"></span><br><span class="line">snowball_stemmer.stem(<span class="string">'presumably'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'presum'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.stem <span class="keyword">import</span> WordNetLemmatizer</span><br><span class="line">wordnet_lemmatizer = WordNetLemmatizer()</span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'dogs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'dog'</span></span><br><span class="line"></span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'churches'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'church'</span></span><br><span class="line"></span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'aardwolves'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'aardwolf'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有 POS Tag，默认是 NN 名词</span></span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'are'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'are'</span></span><br><span class="line"></span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'is'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'is'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上 POS Tag</span></span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'is'</span>, pos=<span class="string">'v'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'be'</span></span><br><span class="line"></span><br><span class="line">wordnet_lemmatizer.lemmatize(<span class="string">'are'</span>, pos=<span class="string">'v'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="string">'be'</span></span><br></pre></td></tr></table></figure><h2 id="词性标注"><a class="markdownIt-Anchor" href="#词性标注"></a> 词性标注</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line">text = nltk.word_tokenize(<span class="string">"what does the fox say"</span>)</span><br><span class="line">text</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'what'</span>, <span class="string">'does'</span>, <span class="string">'the'</span>, <span class="string">'fox'</span>, <span class="string">'say'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 词性标注</span></span><br><span class="line">nltk.pos_tag(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[(<span class="string">'what'</span>, <span class="string">'WDT'</span>),</span><br><span class="line"> (<span class="string">'does'</span>, <span class="string">'VBZ'</span>),</span><br><span class="line"> (<span class="string">'the'</span>, <span class="string">'DT'</span>),</span><br><span class="line"> (<span class="string">'fox'</span>, <span class="string">'NNS'</span>),</span><br><span class="line"> (<span class="string">'say'</span>, <span class="string">'VBP'</span>)]</span><br></pre></td></tr></table></figure><h2 id="命名实体识别"><a class="markdownIt-Anchor" href="#命名实体识别"></a> 命名实体识别</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># NER</span></span><br><span class="line"><span class="keyword">from</span> nltk <span class="keyword">import</span> ne_chunk, pos_tag, word_tokenize</span><br><span class="line">sentence = <span class="string">"John studies at Stanford University."</span></span><br><span class="line">ner = ne_chunk(pos_tag(word_tokenize(sentence)))</span><br><span class="line"></span><br><span class="line">print(ner), type(ner)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">(S</span><br><span class="line">  (PERSON John/NNP)</span><br><span class="line">  studies/NNS</span><br><span class="line">  at/IN</span><br><span class="line">  (ORGANIZATION Stanford/NNP University/NNP)</span><br><span class="line">  ./.)</span><br><span class="line">(<span class="literal">None</span>, nltk.tree.Tree)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="string">" "</span>.join(w <span class="keyword">for</span> w, t <span class="keyword">in</span> elt) <span class="keyword">for</span> elt <span class="keyword">in</span> ner <span class="keyword">if</span> isinstance(elt, nltk.Tree)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'John'</span>, <span class="string">'Stanford University'</span>]</span><br></pre></td></tr></table></figure><h2 id="停用词"><a class="markdownIt-Anchor" href="#停用词"></a> 停用词</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载stopwords词库，nltk.down('stopwords')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stopwords</span></span><br><span class="line"><span class="keyword">from</span> nltk.corpus <span class="keyword">import</span> stopwords</span><br><span class="line"><span class="comment"># 先token一把，得到一个word_list</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="comment"># 然后filter一把</span></span><br><span class="line">filter_words = [word <span class="keyword">for</span> word <span class="keyword">in</span> word_list <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> stopwords.words(<span class="string">'english'</span>)]</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/NLP%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D%E5%9B%BE/image-3.png" alt></p><p> </p><hr><h1 id="篇章理解情感分析"><a class="markdownIt-Anchor" href="#篇章理解情感分析"></a> 篇章理解：情感分析</h1><p>最简单的sentiment dictionary</p><p>like 1</p><p>good 2</p><p>bad -2</p><p>terrible -3</p><p>类似于关键词打分机制</p><p>比如：AFINN-111</p><p>下载地址: <a href="https://gist.github.com/damianesteban/06e8be3225f641100126" target="_blank" rel="noopener">https://gist.github.com/damianesteban/06e8be3225f641100126</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 篇章理解：情感分析</span></span><br><span class="line"></span><br><span class="line">sentiment_dictionary = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">'./AFINN-111.txt'</span>):</span><br><span class="line">    word, score = line.split(<span class="string">'\t'</span>)</span><br><span class="line">    sentiment_dictionary[word] = int(score)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 把这个打分表记录在Dict上以后</span></span><br><span class="line"><span class="comment"># 跑一遍整个句子，把对应的值想加</span></span><br><span class="line">words = [<span class="string">'like'</span>, <span class="string">'love'</span>, <span class="string">'beautiful'</span>]</span><br><span class="line">total_score = sum(sentiment_dictionary.get(word, <span class="number">0</span>) <span class="keyword">for</span> word <span class="keyword">in</span> words)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">描述</span></span><br><span class="line"><span class="string">Python 字典(Dictionary) get() 函数返回指定键的值，如果值不在字典中返回默认值。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">语法</span></span><br><span class="line"><span class="string">get()方法语法：</span></span><br><span class="line"><span class="string">dict.get(key, default=None)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">参数</span></span><br><span class="line"><span class="string">key -- 字典中要查找的键。</span></span><br><span class="line"><span class="string">default -- 如果指定键的值不存在时，返回该默认值值。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">返回值</span></span><br><span class="line"><span class="string">返回指定键的值，如果值不在字典中返回默认值None。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有值就是Dict中的值，没有就是0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 于是你就得到了一个 sentiment score</span></span><br><span class="line"></span><br><span class="line">total_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><p>显然这个方法太Navie</p><p>新词怎么办？</p><p>特殊词汇怎么办？</p><p>更深层次的玩意怎么办？</p><p>改进：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 改进</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> nltk.classify <span class="keyword">import</span> NaiveBayesClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随手造点训练集</span></span><br><span class="line">s1 = <span class="string">'this is a good book'</span></span><br><span class="line">s2 = <span class="string">'this is a awesome book'</span></span><br><span class="line">s3 = <span class="string">'this is a bad book'</span></span><br><span class="line">s4 = <span class="string">'this is a terrible book'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preprocess</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="comment"># Func: 句子处理</span></span><br><span class="line">    <span class="comment"># 这里简单的用了split()，把句子中每个单词分开</span></span><br><span class="line">    <span class="comment"># 显然，还有更多的processing method可以用</span></span><br><span class="line">    <span class="keyword">return</span> &#123;word: <span class="literal">True</span> <span class="keyword">for</span> word <span class="keyword">in</span> s.lower().split()&#125;</span><br><span class="line">    <span class="comment"># return 长这样：</span></span><br><span class="line">    <span class="comment"># &#123;'this': True, 'is': True, 'a': True, 'good': True, 'book': True&#125;</span></span><br><span class="line">    <span class="comment"># 其中，前一个叫fname，对应每个出现的文本单词；</span></span><br><span class="line">    <span class="comment"># 后一个叫fval，指的是每个文本单词对应的值。</span></span><br><span class="line">    <span class="comment"># 这里我们用最简单的 True 来表示这个词【出现在当前的句子中】的意义。</span></span><br><span class="line">    <span class="comment"># 当然，我们可以升级这个方程，让它带有更牛的fval，比如word2vec</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 把训练集给做成标准形式</span></span><br><span class="line">training_data = [[preprocess(s1), <span class="string">'pos'</span>],  <span class="comment"># pos, neg 为label</span></span><br><span class="line">                 [preprocess(s2), <span class="string">'pos'</span>],</span><br><span class="line">                 [preprocess(s3), <span class="string">'neg'</span>],</span><br><span class="line">                 [preprocess(s4), <span class="string">'neg'</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 喂给model</span></span><br><span class="line">model = NaiveBayesClassifier.train(training_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打出结果</span></span><br><span class="line">print(model.classify(preprocess(<span class="string">'this is a good book'</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">pos</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先把数据都读进来</span></span><br><span class="line">pos_data = []</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'PATH_TO_rt-polarity-pos.txt, encoding='</span>latin<span class="number">-1</span><span class="string">') as f:</span></span><br><span class="line"><span class="string">    for line in f:</span></span><br><span class="line"><span class="string">        pos_data.append([preprocess(line), '</span>pos<span class="string">'])</span></span><br><span class="line"><span class="string">          </span></span><br><span class="line"><span class="string">neg_data = []</span></span><br><span class="line"><span class="string">with open('</span>PATH_TO_rt-polarity-neg.txt, encoding=<span class="string">'latin-1'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">          neg_data.append([preprocess(line), <span class="string">'neg'</span>]) </span><br><span class="line">          </span><br><span class="line"><span class="comment"># 把测试集和训练集分开</span></span><br><span class="line">training_data = pos_data[:<span class="number">4000</span>] + neg_data[:<span class="number">4000</span>]</span><br><span class="line">testing_data = pos_data[<span class="number">4000</span>:] + neg_data[<span class="number">4000</span>:]</span><br><span class="line">          </span><br><span class="line"><span class="comment"># 引入model</span></span><br><span class="line">model = NaiveBayesClassifier.train(training_data)</span><br><span class="line">          </span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">print(model.classify(preprocess(<span class="string">'this is a bad movie'</span>)))</span><br></pre></td></tr></table></figure><h2 id="词袋模型bow"><a class="markdownIt-Anchor" href="#词袋模型bow"></a> 词袋模型（BOW）</h2><p>词袋模型能够把一个句子转化为向量表示，是比较简单直白的一种方法，它不考虑句子中单词的顺序，只考虑词表（vocabulary）中单词在这个句子中的出现次数。</p><p>缺点：</p><ul><li>词汇：词汇表需要精心设计，最重要的是为了管理大小，这会影响文档表示的稀疏性。</li><li>稀疏性：由于计算原因（空间和时间复杂性）以及信息原因，稀疏表示更难以建模，其中挑战是模型在如此大的代表空间中利用如此少的信息。</li><li>含义：丢弃单词顺序忽略了上下文，而<strong>忽略了文档中单词的含义</strong>（语义）。上下文和意义可以为模型提供很多东西，如果建模可以说出不同排列的相同单词之间的区别（“this is interesting”  vs “is this interesting”），同义词(“old bike” vs “used bike”)， 以及更多例子。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line">corpus = [</span><br><span class="line">    <span class="string">"John likes to watch movies, Mary likes movies too"</span>,</span><br><span class="line">    <span class="string">"John also likes to watch football games"</span>,</span><br><span class="line">]</span><br><span class="line">vectorizer = CountVectorizer()</span><br><span class="line">X = vectorizer.fit_transform(corpus)</span><br><span class="line">print(vectorizer.get_feature_names())</span><br><span class="line">print(X.toarray())</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'also'</span>, <span class="string">'football'</span>, <span class="string">'games'</span>, <span class="string">'john'</span>, <span class="string">'likes'</span>, <span class="string">'mary'</span>, <span class="string">'movies'</span>, <span class="string">'to'</span>, <span class="string">'too'</span>, <span class="string">'watch'</span>]</span><br><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure><h2 id="tf-idf"><a class="markdownIt-Anchor" href="#tf-idf"></a> TF-IDF</h2><p>TF: Term Frequency，衡量一个term在文档中出现的有多频繁。</p><p>TF(t) = (t出现在文档中的次数) / (文档中的term总数)</p><p>IDF: Inverse Document Frequency，衡量一个term有多重要。</p><p>有些词出现的很多，但是明显不是很有用。比如：‘is’, ‘the’, 'and’之类的。</p><p>为了平衡，我们把罕见的词的重要性（weight）提高，把常见词的重要性降低。</p><p>IDF(t) = In(文档总数 / 含有t的文档总数)</p><p><strong>TF-IDF = TF * IDF</strong></p><p>举例：</p><p>一个文档中有100个单词，其中单词baby出现了3次。</p><p>那么，TF(baby) = (3 / 100) = 0.03</p><p>如果我们有10M的文档，baby出现在其中的1000个文档中。</p><p>则，IDF(baby) = In(10000000 / 1000)</p><p>所以，TF-IDF(baby) = TF(baby) * IDF(baby) = 0.03 * 4 = 0.12</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfVectorizer</span><br><span class="line">corpus = [</span><br><span class="line">    <span class="string">'This is the first document.'</span>,</span><br><span class="line">    <span class="string">'This document is the second document.'</span>,</span><br><span class="line">    <span class="string">'And this is the third one.'</span>,</span><br><span class="line">    <span class="string">'Is this the first document?'</span>,</span><br><span class="line">]</span><br><span class="line">vectorizer = TfidfVectorizer()</span><br><span class="line">X = vectorizer.fit_transform(corpus)</span><br><span class="line"></span><br><span class="line">print(vectorizer.get_feature_names())</span><br><span class="line">print(X)</span><br><span class="line">print(X.toarray())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'and'</span>, <span class="string">'document'</span>, <span class="string">'first'</span>, <span class="string">'is'</span>, <span class="string">'one'</span>, <span class="string">'second'</span>, <span class="string">'the'</span>, <span class="string">'third'</span>, <span class="string">'this'</span>]</span><br><span class="line">  (<span class="number">0</span>, <span class="number">1</span>)<span class="number">0.46979138557992045</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">2</span>)<span class="number">0.5802858236844359</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">6</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">3</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">8</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">5</span>)<span class="number">0.5386476208856763</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">1</span>)<span class="number">0.6876235979836938</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">6</span>)<span class="number">0.281088674033753</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">3</span>)<span class="number">0.281088674033753</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">8</span>)<span class="number">0.281088674033753</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">4</span>)<span class="number">0.511848512707169</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">7</span>)<span class="number">0.511848512707169</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">0</span>)<span class="number">0.511848512707169</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">6</span>)<span class="number">0.267103787642168</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">3</span>)<span class="number">0.267103787642168</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">8</span>)<span class="number">0.267103787642168</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">1</span>)<span class="number">0.46979138557992045</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">2</span>)<span class="number">0.5802858236844359</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">6</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">3</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">8</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">[[<span class="number">0.</span>         <span class="number">0.46979139</span> <span class="number">0.58028582</span> <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.</span></span><br><span class="line">  <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.38408524</span>]</span><br><span class="line"> [<span class="number">0.</span>         <span class="number">0.6876236</span>  <span class="number">0.</span>         <span class="number">0.28108867</span> <span class="number">0.</span>         <span class="number">0.53864762</span></span><br><span class="line">  <span class="number">0.28108867</span> <span class="number">0.</span>         <span class="number">0.28108867</span>]</span><br><span class="line"> [<span class="number">0.51184851</span> <span class="number">0.</span>         <span class="number">0.</span>         <span class="number">0.26710379</span> <span class="number">0.51184851</span> <span class="number">0.</span></span><br><span class="line">  <span class="number">0.26710379</span> <span class="number">0.51184851</span> <span class="number">0.26710379</span>]</span><br><span class="line"> [<span class="number">0.</span>         <span class="number">0.46979139</span> <span class="number">0.58028582</span> <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.</span></span><br><span class="line">  <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.38408524</span>]]</span><br></pre></td></tr></table></figure><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/NLP%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D%E5%9B%BE/image-4.png" alt></p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/NLP%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D%E5%9B%BE/image-5.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TF-IDF </tag>
            
            <tag> NLTK </tag>
            
            <tag> BOW </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习7-花式表达和回应谢谢</title>
      <link href="/post/faa27955.html"/>
      <url>/post/faa27955.html</url>
      
        <content type="html"><![CDATA[<p>花式表达和回应“谢谢”</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><p>1.thank [θæŋk] v. 感谢<br>2.much [mʌtʃ] adv. 非常<br>3.owe [oʊ] v. 欠…债<br>4.appreciate [əˈpriʃiˌet] v. 感激<br>5.pleasure [ˈplɛʒɚ] n. 荣幸，愉快<br>6.mention [ˈmɛnʃən] v. 提到，说起</p><p> </p><hr><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><ol><li>Thank you so much!<br>非常感谢你！</li><li>Thank you for coming.<br>感谢你的光临。</li><li>Thank you for everything. Thanks for your time.<br>感谢你所做的一切。多谢你的宝贵时间。</li><li>I’d like to thank you.<br>我想谢谢你。</li><li>I really appreciate it.<br>我非常感激。</li><li>I owe you one. <br>我欠你一个人情。</li><li>You’re very welcome.<br>你太客气了。</li><li>It’s my pleasure.<br>是我的荣幸。</li><li>Don’t mention it.<br>别客气。</li><li>No problem.<br>没问题。</li></ol><p> </p><hr><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>如何感谢别人？ 来掌握6大常用句子和4种回应方式。</p><p>Let’s be thankful!<br>Part 1: Thank you+花样</p><ol><li>Thank you so much! 非常感谢你！<br>Thank you +副词</li></ol><p>表达了更多的情感。<br>不止是谢谢，而是非常感谢。</p><p>更多表达：<br>Thank you very much. 把so换成very。<br>发音：突出so 或 very，所以是升调。Much降调。</p><ol start="2"><li>Thank you for coming. 感谢你的光临。<br>Thank you +for 动词-ing<br>强调了值得被感谢的行为。<br>Thank you for doing something, 指“因为你做了某件事而感谢你”。</li></ol><p>更多表达：<br>看孩子 babysit变成-ing形式：Thank you for babysitting 或 Thank you for watching the baby。</p><p>（babysitting 或 watching the child/baby）</p><p>主人对客人说：<br>Thank you for coming! 感谢您的到来。<br>感谢对方给了你某样东西：<br>Thank you for giving it to me. 感谢你把它送给我。</p><ol start="3"><li>Thank you for everything. 感谢你所做的一切。<br>Thank you +for 名词</li></ol><p>(图片翻译：bird seed =鸟食)</p><p>当对方做了太多事情 so many things，没办法一个一个数？<br>不如用everything来代替吧。<br>句型和第二句有一丢丢的不同，for后面接名词。</p><p>更多表达：<br>Your help 你的帮助。<br>Thank you for your help. 感谢你的帮助。<br>Your time 你的时间。<br>Thank you for your time. 多谢你的宝贵时间。</p><p>(your time 指对方花时间来听你说或与你交流)</p><p>Part 2: 正式感谢</p><ol start="4"><li>I’d like to thank you. 我想谢谢你。<br>I would like +to thank +某人</li></ol><p>更多表达：<br>感谢其他人：I’d like to thank my parents. 我想感谢我的父母。<br>简短版：I want to thank you. Want替换would like。</p><ol start="5"><li>I really appreciate it. 我非常感激。<br>I really +appreciate +某件事</li></ol><p>(得奖者很爱用这句，搭配眼泪)</p><p>Appreciate表达出浓浓的感谢。<br>用在非常重要，非常值得感谢的事情。<br>It 是指某件值得感谢的事。比如：</p><p>-I will lent you my car. 我会把车借给你。<br>-I really appreciate it. 我非常感激。<br>这里的it不是指车，而是“借给你车”这件事。</p><p>发音：It 的t不发音。连读appreciate it。两个单词会读成&quot;appreciati&quot;。</p><ol start="6"><li>I owe you one. 我欠你一个人情。<br>I owe you +某物/事</li></ol><p>One可理解成one favor的省略版。<br>关于欠人情，中国人不喜欢放在口头上，但西方人会很大方地说出来。这也许是东西方的文化差异。</p><p>适合范围：熟人和亲人之间的道谢。<br>注意：避免对陌生人用。<br>素不相识的两个人可能以后也不会见面，你要如何还这个人情呢？</p><p>Part 3：回应感谢</p><ol start="7"><li>You’re very welcome.你太客气了。<br>（不是“你很受欢迎”的意思哦）</li></ol><p>加了very可以加强语气。</p><p>更多表达：<br>还有一些随意轻松的版本：<br>Uh-huh. /ə 'hə/ 嗯嗯。<br>Anytime. 随时吩咐。<br>Welcome. 客气了。</p><p>（酷酷地回答 welcome 也是可以哒）</p><p>发音：Welcome [ˈwɛlkəm] 中 wel- 的发音需要双唇收圆突出，让气流从口自然的呼出。<br>说 very 和 wel- 时的语调上升，-come 的调下降。</p><ol start="8"><li>It’s my pleasure. 是我的荣幸。<br>It is +某人的 pleasure<br>意思和不客气相同，是很绅士的回答。<br>当然，女生也是可以用的。</li></ol><p>更多表达：<br>My pleasure. 我的荣幸。<br>It’s our pleasure. 这是我们的荣幸。<br>The pleasure is mine. 是我的荣幸。宾语pleasure变成主语。My要变成mine。</p><p>发音：Pleasure [ˈplɛʒɚ]里 -sure 的发音是类似“者”，不送气的，不要说成“舌”哦。</p><ol start="9"><li>Don’t mention it. 别客气。<br>Do not +mention +某件事</li></ol><p>Mention是提及，提起，加上否定 don’t 就是“别提了”，<br>和appreciate it一样，it是指某件值得感谢的事情。</p><p>适用范围：偏随意，建议对朋友和亲密的人说。</p><p>发音：Don’t 和it的t可以不读或弱读。Mention 和 it 连读成 men-tioni。</p><ol start="10"><li>No problem. 没问题。<br>No +名词</li></ol><p>非常适合回应一些很小的事情,也可以用来回应道歉。例如：<br>-I’m sorry!<br>-No problem.</p><p>适用范围：适合熟人之间使用。</p><p>更多表达：<br>No worries. 不用放在心上。</p><p>关于感谢和回应的句型就是这些啦！<br>感谢你的观看! Thank you for watching and reading!</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习6-睡觉那些事</title>
      <link href="/post/f2d6eb28.html"/>
      <url>/post/f2d6eb28.html</url>
      
        <content type="html"><![CDATA[<p>睡觉那些事</p><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><ol><li>bedtime 就寝时间</li><li>get ready for 为……做准备</li><li>asleep 睡着的，进入睡眠状态</li><li>take a nap 睡午觉；小睡一下</li><li>tuck sb. in 为…盖好被子</li></ol><p> </p><hr><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><ol><li><p>Okay. Bedtime.<br>好啦，睡觉时间到啦。</p></li><li><p>Time to get ready for bed.<br>到时间准备上床睡觉了。</p></li><li><p>Brush your teeth and get to bed.<br>刷牙，然后到床上去。</p></li><li><p>Go back to sleep.<br>回去睡觉。</p></li><li><p>You should probably get some sleep, huh?<br>你也许应该补眠，对吗？</p></li><li><p>She’s still asleep.<br>她还在睡。</p></li><li><p>He’s taking a nap.<br>他在小憩。</p></li><li><p>I fed them, bathed them and put them to bed.<br>我给他们喂饭、洗澡、然后抱他们上床。</p></li><li><p>I was gonna tuck her in.<br>我本来打算哄她睡觉的。</p></li><li><p>Sweet dreams / Good night / Sleep tight / Nighty night.<br>做个美梦！</p></li></ol><p> </p><hr><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>去睡觉只会说“go to sleep”？10个句子让你花样“催睡”！</p><ol><li>Okay. Bedtime. 好啦，睡觉时间到啦。<br>(It is）+ 名词-time</li></ol><p>Bedtime是一个组合词，由名词bed和time组合起来的词语。<br>此类句型多用于提醒对方“现在是需要做某事的时间”。例如：<br>It’s lunchtime. 午餐时间到啦。<br>发音： bed的词尾是爆破音/d/，后面接词首爆破音/t/，导致/d/音失去爆破，只做口型不发音。舌头做短暂停顿后，直接发出/t/音。</p><ol start="2"><li>Time to get ready for bed. 到时间准备上床睡觉了。<br>（It is）time +to get ready for 某事/物</li></ol><p>和上一句表达的意思几乎一模一样：it’s time to do sth., 是“该是做某事的时候了”的意思。<br>Get ready for sth. 指准备好做某事。For bed，指上床睡觉这个动作。<br>更多表达：<br>Are you ready for bed?<br>When is your bedtime?<br>发音：注意句子重音在time，ready和bed。To和for在句子里属于功能词，是非重读单词，而且会弱读。</p><ol start="3"><li>Brush your teeth and get to bed. 刷牙 然后到床上去。<br>(第二人称you) +brush one’s teeth +and (第二人称you) +get to某地方</li></ol><p>Get to…，指“到达某地”，在句子里指“到床上去”。<br>并列连词and将两句祈使句连接起来成并列结构。<br>对比go to 和 get to：区别并不明显。<br>只是 go to 更强调“去”的这个动作和过程。<br>get to 强调“到达”，它意思等于reach、arrive at / in。</p><ol start="4"><li>Go back to sleep. 回去睡觉。<br>(You) +go back to 某事/物</li></ol><p>Go back to…指“回到/去某个事情或状态”。<br>名词sleep指睡眠。<br>对比go back 和get back 的区别：<br>Go back 是“回去”，而get back除了有“使返回到某种状态”，也有“拿回,取回”的意思。例如：<br>Get your book back. 去把你的书拿回来。<br>发音：当爆破音/k/在back的词尾，后面接上/t/开头的to, /k/音可能会出现半爆破或完全失去爆破的现象。To在句子中作为非重读的虚词，会弱读。</p><ol start="5"><li>You should probably get some sleep, huh? 你也许应该好好睡一觉，对吗？<br>主语 should +get some sleep</li></ol><p>语法结构上是陈述句，但在语境里却是疑问句。<br>情态动词should在这有请求和建议的意思。<br>名词sleep作为不可数名词，在前面加上限定词some。some 多用于肯定句，而any 多用于否定或疑问句。</p><p>Huh是美式英语中常见的感叹词, 也被称作独立的语法单位。它可以当作附加疑问句。<br>知识拓展：<br>附加疑问句是指当提问的人对前面所叙述的事实有怀疑或没有把握, 而需要进一步加以证实,要求对方用Yes或No回答）<br>发音： 附加疑问句的语调通常是下降。</p><ol start="6"><li>She’s still asleep. 她还在睡觉。<br>主语 be +still+asleep.</li></ol><p>副词still表达了“仍然, 还是”的意思。如果去掉still，句子会变成“她睡着了”。<br>对比asleep和sleeping：asleep强调“已经睡着”的状态。Sleeping强调“正在睡觉”的动作。<br>更多表达：<br>She fell asleep at his desk. 她伏在书桌上睡着了。</p><p>She was still half asleep. 她仍然睡眼惺忪。<br>发音：She’s是代词she + be动词的缩约式读法，读作[ʃiz]。</p><ol start="7"><li>He’s taking a nap. 他在小憩<br>主语 be taking a nap.</li></ol><p>Take a nap指小睡，大约十几分钟到一两个小时不等。<br>这是一个词组搭配: take + a nap。 类似的还有take + a break; take +a shower。<br>发音：He’s是代词he+be动词的缩约式读法，读作[hiz]。</p><ol start="8"><li>I fed them, bathed them and put them to bed. 我给他们喂饭、洗澡、然后抱他们上床。<br>主语 put 某人 to bed<br>Put sb to bed指把某人安置到床上。这里的某人，是“被动地”上床睡觉。<br>通常用来指给小朋友或某些需要特殊照顾的人群（如老人，残疾人士或者喝醉酒的人）。</li><li>I was gonna tuck her in. 我本来打算哄她睡觉的。<br>主语 +be going +to tuck 某人 in.</li></ol><p>Gonna是going to的口语形式，属于非正式的表达。<br>Tuck sb in通常指哄小孩子睡觉的方式，是“为小孩盖好被子”的意思。<br>可以用开玩笑的方式对成年人说，效果类似“睡觉觉”。<br>更多表达：<br>I read Lily a story and tucked her in. 我给莉莉读了一篇故事，然后给她盖好被子。</p><ol start="10"><li>Sweet dreams / Good night / Sleep tight / Nighty night. 做个美梦！</li></ol><p>以上都是用来道别“晚安”的常见用语。<br>还有一个比较俏皮的表达：<br>Don’t let the bedbugs bite!<br>它直译是“别让臭虫咬了”，其实是祝对方一夜好眠。</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github上删除文件后与本地同步</title>
      <link href="/post/4f1c03a6.html"/>
      <url>/post/4f1c03a6.html</url>
      
        <content type="html"><![CDATA[<p>当在github上删除了一些文件后，本地仓库数据和远程仓库数据不一致。</p><p>下面两个操作可以同步仓库和本地的全部内容：</p><ol><li><p>先抓取并合并远程仓库全部内容<code>git pull origin master</code></p></li><li><p>再推送本地仓库数据<code>git push origin master</code></p></li></ol><p>这样就同步两端的数据了。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习5-表达时间</title>
      <link href="/post/32c58198.html"/>
      <url>/post/32c58198.html</url>
      
        <content type="html"><![CDATA[<p>“花式”表达时间</p><a id="more"></a><h1 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h1><p>1.Quarter n. 四分之一<br>2.Half n. 一半<br>3.Time difference 时差<br>4.Hour n. 小时</p><h1 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h1><p>1.Excuse me, do you have the time?<br>不好意思，请问现在几点了？<br><a href="http://2.It" target="_blank" rel="noopener">2.It</a>’s a quarter after five.<br>现在五点十五分。<br><a href="http://3.It" target="_blank" rel="noopener">3.It</a>’s a quarter to five.<br>现在是四点四十五分。<br><a href="http://4.It" target="_blank" rel="noopener">4.It</a>’s half past eleven.<br>现在是十一点半。<br><a href="http://5.It" target="_blank" rel="noopener">5.It</a>’s seven thirty-three.<br>现在是七点三十三分。<br>6.What is the time difference to your city from New York?<br>纽约和你的城市的时差是多少？<br>7.The time difference between my city and New York is 15 hours.<br>我的城市和纽约之间差15小时。</p><h1 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h1><p>表达时间不光是“念数字”这一种方式，今天就让我们一起来看看，如何“花式”的表达时间吧。</p><ol><li>Excuse me, do you have the time? 不好意思，请问现在几点了？</li></ol><p>当不知道时间时，我们可以用这句询问他人。这个句式是较为礼貌的用法，适用于向陌生人询问时间，记得要加上Excuse me。<br>更多表达：<br>如果向熟人、朋友询问时间，可以说：<br>What time is it? 现在几点了？<br>或者去掉excuse me，直接说后半句Do you have the time?<br>注意：<br>千万不要说成“Do you have time”了。两句话虽然只差一个字，意思却有很大的差别。<br>Do you have the time? 请问现在几点了？<br>Do you have time? 请问你有空吗？<br>偶尔也会问Do you have a time? 但是这是非常口语化，如果习惯说a，可以把最后的time换成moment：Do you have a moment? 表示相同的意思。<br>发音：<br>句尾语调上扬，提问的语气会更足。</p><ol start="2"><li>It’s a quarter after five. 现在五点十五分。<br>It’s a quarter after + number</li></ol><p>Quarter的意思是“四分之一”。一小时是60分钟，它的四分之一就是15分钟。美国人很喜欢用a quarter来表达一切单位。<br>例如：<br>A quarter miles – 四分之一英里（约等于400米）<br>The end of a quarter – 季度末<br>更多表达：<br>可以用past替换after，表示相同的意思。<br>例如：<br>It’s twenty past five. 现在是五点二十分。<br>It’s nineteen past seven. 现在是七点十九分。<br>注意：<br>只有在30分之前（包括30分）用after或者past。一小时内的第31分钟开始，就不能用这两个介词了。并没有three quarters past five这样的说法。<br>发音：</p><ol><li>连读It’s a，连读音标/ts</li><li>重读after five，强调时间。</li><li>It’s a quarter to five. 现在是四点四十五分。<br>It’s a quarter + to number</li></ol><p>上面是30分之内时用到的，这个是30分之后会用到的表达方式。<br>用到to时，后面跟的数字是“下一小时”的小时数，所以to前面的数字，需要我们做一个简单的数学题：用60减去现在的分钟数，就是放在to前的数字了。<br>例如：<br>It’s twenty to five. 现在是四点四十分。（现在是4点40分，还有20分钟到5点，所以60-40=20，to前面要说twenty）<br>It’s five to six. 现在是五点五十五分（60-55=5）<br>发音：<br>重读数字和to。</p><ol start="4"><li>It’s half past eleven. 现在是十一点半。<br>Half past</li></ol><p>当提到“几点半”时，会用到half past这个词组。Half是一半的意思。<br>和quarter一样，half也是西方很喜欢用到的量词。<br>例如：<br>Half pounds - 半磅（约等于4两5）<br>Half a year - 半年<br>更多表达：<br>可以直接用thirty来代表半点。<br>例如：<br>It’s eleven thirty. 现在是十一点半。</p><ol start="5"><li>It’s seven thirty-three. 现在是七点三十三分。<br>It’s + number</li></ol><p>这是最直接的回答几点的方式，直接把数字念出来就好。<br>例如：<br>It’s three fifty-five. 现在是三点五十五分。<br>更多表达：<br>当我们表达“整点”时，可以不需要在后面加上“o’clock”，而是加上am/pm。<br>例如：<br>It’s seven am. 现在是早上7点。<br>It’s nine pm. 现在是晚上9点。<br>需要注意的是，中午12点是12 pm，午夜0点是12 am；或者可以直接用“midnight”（午夜12点）以及“noon”（中午12点）来区分两者。</p><ol start="6"><li>What is the time difference to your city from New York? 纽约和你的城市的时差是多少？<br>Time difference to A from B</li></ol><p>这个句型是询问时差时最常用的句型之一。Time difference表示的是“时间差”，询问不同地方的时差时，只要把地名换一下即可。<br>例如：<br>What is the time difference to Shenzhen from Tokyo? 东京和深圳的时差是多少？<br>注意：<br>提到时差，可能会有同学想到“jet lag”这个词组。这个词组指的是“时差反应”，询问时差则需要用到time difference这个词组了。<br>例如：<br>I need to get over the jet lag. 我需要把时差倒过来。<br>发音：<br>What和is可以连读，变成What’s。</p><ol start="7"><li>The time difference between my city and New York is 15 hours. 我的城市和纽约之间差15小时。<br>The time difference + between A and B + is number hours</li></ol><p>这句是用来回答时差的。回答不同地区的时差时，把A和B地名替换一下即可。<br>例如：<br>The time difference between Shenzhen and Tokyo is 1 hour. 深圳和东京之间时差1小时。<br>发音：<br>重读地名以及时差数，达到强调句中的主要信息的作用。</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语言模型笔记2-Word2Vec词向量</title>
      <link href="/post/2c0d6d8e.html"/>
      <url>/post/2c0d6d8e.html</url>
      
        <content type="html"><![CDATA[<h1 id="语言模型"><a class="markdownIt-Anchor" href="#语言模型"></a> 语言模型</h1><p>语言模型：预测每个句子在语言中出现的概率。</p><h2 id="引出"><a class="markdownIt-Anchor" href="#引出"></a> 引出</h2><p>举例：机器翻译</p><p>​价格高</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mtext> </mtext><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>P</mi><mo stretchy="false">(</mo><mi>l</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mtext> </mtext><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(high \, price) &gt; P(large \, price)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mclose">)</span></span></span></span></p><p>举例：我 今天 下午 打 羽毛球</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE1.png" alt></p><p>P(s)被称为语言模型，即用来计算一个句子概率的模型。</p><p>计算：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(w_i|w_1,w_2,...,w_{i-1})=P(w_1,w_2,...,w_i)/P(w_1,w_2,...,w_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>缺点：</p><ol><li>数据过于稀疏（因为每个词要考虑前面很多的词，而且与前面很多词的组合概率很小，组合到一起的词越多，它的数据模型是越稀疏的）</li><li>参数空间太大</li></ol><p>解决思路：</p><p>举例：我 今天 下午 打 羽毛球</p><p>基于马尔科夫假设：下一个词的出现仅依赖于它前面的一个或几个词。</p><ul><li>假设下一个词的出现依赖它前面的一个词，则有：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(s)=P(w_1)P(w_2|w_1)P(w_3|w_1,w_2)...P(w_n|w_1,w_2,...,w_{n-1}) \\=P(w_1)P(w_2|w_1)P(w_3|w_2)...P(w_n|w_{n-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ul><li>假设下一个词的出现依赖它前面的两个词，则有：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(s)=P(w_1)P(w_2|w_1)P(w_3|w_1,w_2)...P(w_n|w_1,w_2,...,w_{n-1}) \\=P(w_1)P(w_2|w_1)P(w_3|w_1,w_2)...P(w_n|w_{n-2},w_{n-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="n-gram-模型"><a class="markdownIt-Anchor" href="#n-gram-模型"></a> n-gram 模型</h2><p>n-gram模型：假设当前词的出现概率只与它前面的 N-1 个词有关。</p><p>如何选择n：</p><ul><li>更大的n：对下一个词出现的约束信息更多，具有更大的<strong>辨别力</strong>。</li><li>更小的n：在训练语料库中出现的次数更多，具有更可靠的统计信息，具有更高的<strong>可靠性</strong>。</li></ul><p>理论上，n越大越好；经验上，trigram用的最多，尽管如此，原则上，能用bigram解决，绝不使用trigram。</p><p>构造语言模型：最大似然估计。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>C</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>C</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(w_i|w_1,w_2,w_3,...,w_{i-1})=\frac{Count(w_1,w_2,w_3,...,w_{i-1},w_i)}{Count(w_1,w_2,w_3,...,w_{i-1})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>Count(X)：在训练语料库单词序列X在训练预料中出现的次数。</p><p> </p><hr><h1 id="词向量简介"><a class="markdownIt-Anchor" href="#词向量简介"></a> 词向量简介</h1><h2 id="one-hot-representation独热编码"><a class="markdownIt-Anchor" href="#one-hot-representation独热编码"></a> One-hot Representation（独热编码）</h2><p>One-hot Representation：对应的词所在的位置设为1，其他为0.</p><p>缺点：</p><ul><li>语义鸿沟问题</li><li>维数灾难、稀疏</li><li>无法表示未出现的词汇</li></ul><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE2.png" alt></p><h2 id="distribution-word-representation分布式表示"><a class="markdownIt-Anchor" href="#distribution-word-representation分布式表示"></a> Distribution Word Representation（分布式表示）</h2><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE3.png" alt></p><p>词向量表示的核心：利用上下文信息进行词的表示。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE4.png" alt></p><p>英语和西班牙语两种语言的不同也并不能影响它们在向量空间上的表示，这就说明词向量的构造更关注于语言的内在逻辑。</p><p>分布式表示——词向量（Word embedding）</p><ul><li>词表示为：[0.792, -0.177, -0.107, 0.109, 0.542, …]</li><li>常见的维度50或100</li><li>解决“语义鸿沟”问题</li><li>可以通过计算向量之间的距离（欧式距离、余弦距离等）来体现词与词的相似性</li></ul><p>如何训练词向量？</p><p>并没有直接的模型可以训练得到分布式表示的词向量，但是我们可以通过在训练语言模型的同时得到词向量。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE5.png" alt></p><p>论文《Efﬁcient Estimation of Word Representations in Vector Space》如何通过语言模型训练词向量的。</p><p> </p><hr><h1 id="神经网络语言模型"><a class="markdownIt-Anchor" href="#神经网络语言模型"></a> 神经网络语言模型</h1><p>神经网络语言模型（NNLM）：直接从语言模型出发，将模型最优化过程转化为求词向量表示的过程。</p><ul><li>目标函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>t</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta)=\sum_{t} logP(w_t|w_{t-n+1},...,w_{t-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1308459999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>根据前 n-1 个单词，预测第t个位置单词的概率。</li><li>使用了非对称的前向窗函数，窗长度为 n-1</li><li>滑动窗口遍历整个语料库求和，计算量正比于语料库大小</li><li>概率P满足归一化条件，这样不同位置t处的概率才能相加，即</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo>∑</mo><mrow><mi>w</mi><mo>∈</mo><mo stretchy="false">{</mo><mi>v</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>b</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo stretchy="false">}</mo></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{w\in\{vocabulary\}}P(w|w_{t-n+1},...,w_{t-1})=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mrel mtight">∈</span><span class="mopen mtight">{</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>结构：</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE6.png" alt></p><ul><li>输入层（input）：输入（N-1）个前向词，One-hot 表示。</li><li>投影层（projection layer）：采用线性投影方式将词向量投影到稠密D维表示。</li><li>隐藏层（hidden layer）：做全连接“神经元”数量用户自定。</li><li>输出层（output）：softmax分类器。</li></ul><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE7.png" alt></p><p>每个训练样本的计算复杂度：Q=NxD+NxDxH+HxV</p><p>N为输入词语的个数，D是词向量的维度，H是隐藏层的节点数，V是输出向量的维数。</p><p>一个简单模型在大数据量上的表现比复杂模型在少数据量上表现会更好。</p><p> </p><hr><h1 id="循环神经网络语言模型"><a class="markdownIt-Anchor" href="#循环神经网络语言模型"></a> 循环神经网络语言模型</h1><p>循环神经网络语言模型（RNNLM）：基于循环神经网络的语言模型。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE8.png" alt></p><ul><li>w(t) 表示第t个时刻的当前输入单词，维度为V，V是词典的大小。One-hot表示。</li><li>s(t-1) 代表隐层的前一次输出。</li><li>y(t) 表示输出的</li></ul><p>计算复杂度：Q = HxH + HxV</p><p>H是隐藏层的节点数，V是输出向量的维数。</p><p> </p><hr><h1 id="word2vec"><a class="markdownIt-Anchor" href="#word2vec"></a> Word2Vec</h1><p>神经网络语言模型缺点：</p><ul><li>计算复杂度过大：<ul><li>NNLM：Q=NxD+NxDxH+HxV</li><li>RNNLM：Q = HxH + HxV</li></ul></li><li>参数较多</li></ul><p>如何解决？</p><p>Word2Vec：</p><ul><li>CBOW</li><li>Skip-gram</li></ul><h2 id="cbow模型-vs-skip-gram模型"><a class="markdownIt-Anchor" href="#cbow模型-vs-skip-gram模型"></a> CBOW模型 VS Skip-gram模型</h2><p>CBOW（Continuous Bag of Words）连续词袋模型，即利用中心词(Wt)的上下文(context)来预测中心词(Wt)。</p><p>Skip-gram，跳字模型，是根据中心词(Wt)来预测周围的词，即预测上下文(context)。</p><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE9.jpg" alt></p><h3 id="cbow模型"><a class="markdownIt-Anchor" href="#cbow模型"></a> CBOW模型</h3><p>CBOW模型：</p><ul><li><p>目标函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><msub><mo>∑</mo><mrow><mi>w</mi><mo>∈</mo><mi>C</mi></mrow></msub><mi>l</mi><mi>o</mi><mi>g</mi><mi>P</mi><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">∣</mi><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = \sum_{w\in C}logP(w|Context(w))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></li><li><p>无隐层</p></li><li><p>使用双向上下文窗口</p></li><li><p>上下文词序无关（BoW）</p></li><li><p>输入层直接使用低维稠密向量表示</p></li><li><p>投影层简化为求和、再平均（神经网络模型是使用拼接）</p></li></ul><p>训练优化：</p><ul><li>层次softmax（Hierarchical Softmax）</li><li>负采样（Negative Sampling）</li></ul><h3 id="skip-gram模型"><a class="markdownIt-Anchor" href="#skip-gram模型"></a> Skip-gram模型</h3><p>Skip-gram模型：</p><ul><li>目标函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><msub><mo>∑</mo><mrow><mi>w</mi><mo>∈</mo><mi>C</mi></mrow></msub><mi>l</mi><mi>o</mi><mi>g</mi><mi>P</mi><mo stretchy="false">(</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = \sum_{w\in C}logP(Context(w)|w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></li><li>输入层：只含当前样本的中心词w的词向量</li><li>投影层：恒等投影，为了和CBOW模型对比</li><li>输出层：和CBOW模型一样，输出层也是一颗Huffman树</li></ul><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE10.png" alt></p><p>V是词表的大小，d是我们想要得到词向量的维度</p><h2 id="词向量的评估任务"><a class="markdownIt-Anchor" href="#词向量的评估任务"></a> 词向量的评估任务</h2><p><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/Word2Vec%E7%AC%94%E8%AE%B0%E5%9B%BE/%E5%9B%BE11.png" alt></p><h2 id="word2vec存在问题"><a class="markdownIt-Anchor" href="#word2vec存在问题"></a> Word2Vec存在问题</h2><p>存在问题：</p><ul><li>对每个局部上下文窗口单独训练，没有利用包含在全局共现矩阵中的统计信息。</li><li>对多义词无法很好的表示和处理，因为使用了唯一的词向量。（比如：Apple是表示苹果还是表示苹果公司呢）</li></ul><p>解决方式：</p><ul><li>Glove：利用全局信息编码词向量。</li></ul>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> word2vec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习4-表达歉意</title>
      <link href="/post/37abc7b5.html"/>
      <url>/post/37abc7b5.html</url>
      
        <content type="html"><![CDATA[<p>表达歉意</p><h2 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h2><p>1.Excuse 原谅<br>2.Whoops 哎呀<br>3.Apology 道歉<br>4.Apologize 道歉<br>5.Forgive 原谅<br>6.Inconvenience 不便<br>7.Accepted 接受<br>8.Bridge 桥</p><p> </p><hr><h2 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h2><p>1.Pardon, ma’am. Excuse me. Sorry about that.<br>不好意思，女士。不好意思。抱歉。</p><p>2.Whoops. Sorry. That’s my bad.<br>哎呀，对不起。我的错。</p><p>3.A thousand apologies.<br>万分抱歉。</p><p>4.Can you forgive me?<br>你能原谅我吗?</p><p>5.I owe you an apology.<br>我欠你一句道歉。</p><p>6.I cannot apologize to you enough.<br>我无论怎样道歉也不过分。</p><p>7.We’re sorry for the inconvenience.<br>抱歉造成你的不便。</p><p>8.Don’t worry. Apology accepted.<br>别在意。接受你的道歉。</p><p>9.That’s okay. These things happen.<br>没关系。这种事常发生。</p><p>10.I forgive you.<br>我原谅你。</p><p>11.That was water under the bridge.<br>那些事都过去了。</p><p> </p><hr><h2 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h2><p>美国人好喜欢道歉啊！做错事情、打扰别人、没听清、就连打个喷嚏也要道歉。这么多场合要表示歉意，仅仅靠一句‘I’m sorry’不够用了。来掌握10种表达和回应道歉的方式吧！</p><h3 id="part-1-表达不好意思"><a class="markdownIt-Anchor" href="#part-1-表达不好意思"></a> PART 1: 表达“不好意思”</h3><ol><li>Pardon, ma’am. Excuse me. Sorry about that. 不好意思，女士。不好意思。抱歉。</li></ol><p>在口语里，常用来表达“抱歉”或“不好意思”的词有sorry，excuse me，还有pardon.<br>Excuse me和pardon比单纯只说sorry更礼貌。Pardon更加正式。</p><p>Sorry about that，指“对刚刚做的某件事感到抱歉”，而且这件事比较小，不会造成太严重的后果。</p><p>使用pardon，excuse me，sorry about that.的常见场合：<br>发出比较大的声音时（如打嗝；打喷嚏等）；<br>打断别人或无意碰撞到别人时；<br>引起别人注意或询问某事时；<br>纠正别人或表达不同意见时。<br>注意：I beg your pardon？和excuse me？都可以用来表示惊讶或者受了冒犯。 类似中文里的“你再说一次？！”。暗示对方的话出乎预料。句尾用升调（配上瞪大的眼睛和抬高的眉毛效果更佳）。<br>发音：<br>Pardon, ma’am.<br>[ˈpɑ:rdn] [məm]<br>（注意音标是美式发音；而视频的说话者是英式口音）<br>Excuse me.<br>[ɪkˈskjʊs mi]<br>Sorry about that.<br>[ˈsɔ:ri əˈbaʊt ðæt]</p><ol start="2"><li>Whoops. Sorry. That’s my bad. 哎呀，对不起。我的错。</li></ol><p>Whoops，感叹词，“哎呀“的意思。表达自己无意中犯了一个小错误。<br>注意：whoops后面最好接上直接表达歉意的词语，比如sorry，excuse me等。如果单纯说一句whoops, 别人只知道你犯错了，却接收不到”抱歉“的信息。<br>适用范围：熟悉亲密的人。正式场合中尽量别用Whoops。</p><p>That’s my bad, 指“那是我的不好”。Bad在这里是名词，表“坏事”。口语中也常用fault代替bad。<br>注意：fault比bad所表达的错误程度要更严重；fault更加正式。<br>更多表达：<br>Whoops! I’m sorry. 哎呀，我错了。<br>My bad. 抱歉啊。<br>发音：<br>Whoops. Sorry.<br>[wʊps] [ˈsɔ:ri] <br>That’s my bad.<br>[ðæts maɪ bæd]</p><ol start="3"><li>A thousand apologies. 万分抱歉。</li></ol><p>一种夸张的表达，表示“我有一千份歉意”。<br>可以用在犯了严重的错误时。但在实际的运用中，更多在正式的交流中为一些“小事情”道歉。<br>例如，视频中的说话者在打工作电话，但被旁人强行打断，他转头对电话那头说：“A thousand apologies.”。<br>他只是为了中断谈话道歉（小事情），但语气听起来很正式。<br>发音：<br>A thousand apologies.<br>[eˈθaʊzənd əˈpɑ:lədʒiz]</p><h3 id="part-2-请求原谅"><a class="markdownIt-Anchor" href="#part-2-请求原谅"></a> PART 2: 请求原谅</h3><ol start="4"><li>Can you forgive me? 你能原谅我吗?<br>Can sb. forgive sb.?</li></ol><p>有些错误比较大，可不是简单的一句“哎呀，不好意思”就能让对方原谅。有时候我们需要使用更真诚和正式的表达。</p><p>Can you forgive sb., 指“你能原谅某人吗”。<br>如果道歉的是“我们”，可以说can you forgive us?<br>如果犯错的人叫Jerry：Can you forgive Jerry?<br>注意：更礼貌的说法是 could you forgive me？<br>更多表达：<br>Will you forgive me？也是类似的表达，不过will有“意愿”的意思。暗示对方是否“愿意”原谅自己。<br>用can是问对方是否“能够”原谅自己。<br>Will you forgive me？你会愿意原谅我吗？<br>发音：<br>Can you forgive me?<br>[kænju: fərˈɡɪv mi:] (一般疑问句的语调在句尾是升调）</p><ol start="5"><li>I owe you an apology. 我欠你一句道歉。<br>I owe sb. an apology.</li></ol><p>I owe sb., 指“我欠某人…”。后面接an apology，常用来表达现在的自己为过去的某件错事道歉。<br>注意：不要和I owe you one搞混。那是“我欠你一个人情”，是用来感谢对方的用语。<br>发音： <br>I owe you an apology.<br>[aɪ oʊ ju: ænə’pɑ:lədʒi] <br>（注意连读I owe和an apology；其中I 的词尾和owe的词首都是元音，会出现滑音/j/来连接前后的元音）</p><ol start="6"><li>I cannot apologize to you enough. 我无论怎样道歉也不过分。<br>I can not apologize to sb. enough。</li></ol><p>Apologize to sb.，指“向某人道歉”。<br>Can not do sth. enough, 指“无论怎样做也不过分”。<br>结合前后两句话就是：我无论怎样道歉都不过分=我太抱歉了。<br>注意：一定不能漏掉enough，否则句子会变成“我不能向你道歉”。<br>更多表达：<br>I want to apologize to you. 我想向你道歉。<br>Thank you for understanding. 感谢理解。<br>发音： <br>I cannot apologize to you enough.<br>[aɪ ˈkænɑ:təˈpɑ:lədʒaɪz tə ju: ɪˈnʌf]</p><ol start="7"><li>We’re sorry for the inconvenience. 抱歉造成你的不便。<br>Sb. is sorry for the inconvenience.</li></ol><p>Be sorry for the inconvenience, 指“对（给你造成的）不方便而道歉”。<br>这也是很正式的用语，常出现在下面这些类型的沟通：<br>商家对顾客；<br>施工队对行人；<br>政府部门的公告等。<br>更多表达：<br>We’re sorry for the inconvenience caused.<br>对造成的不便我们很抱歉。<br>发音：<br>We’re sorry for the inconvenience.<br>[wɪr ˈsɔ:ri fər ðiˌɪnkənˈvi:nɪəns]</p><h3 id="part-3-接受道歉"><a class="markdownIt-Anchor" href="#part-3-接受道歉"></a> Part 3: 接受道歉</h3><ol start="8"><li>Don’t worry. Apology accepted. 别在意了。接受你的道歉。</li></ol><p>（图片：接受道歉…礼物拿来）</p><p>当对方正式地道歉后，如果要表达“没关系”，可以说：<br>Don’t worry 或者 don’t worry about something.<br>通常指一件不太严重的事情，以至于说话者都觉得“不必在意”。<br>另一种简短的表达是：<br>Apology accepted. Accepted指“被接受”。<br>更多表达：<br>相反地，如果不接受道歉也可以说：<br>Apology not accepted.<br>发音：<br>Don’t worry. Apology accepted.<br>[dont ˈwʌrɪ]. [əˈpɑ:lədʒi əkˈseptɪd】</p><ol start="9"><li>That’s okay. These things happen. 没关系。这种事常发生。</li></ol><p>That’s okay或it’s okay, 都是常用的“没关系”的用语。<br>为了安慰道歉的人不要太过自责，可以加上一句：<br>These things happen.<br>These things, 指“这些糟心的状况”；happen，指“常常发生”。<br>注意：这个场景里happen不要用过去时，应该采用一般现在时来表达“经常发生或反复发生的动作”。<br>发音：<br>That’s okay. These things happen.<br>[ðætsˌoʊˈkeɪ] [ði:z θɪŋzˈhæpən]</p><ol start="10"><li>I forgive you. 我原谅你。<br>I forgive sb.</li></ol><p>这是一句很正式的回应。常用来回应很严肃的道歉和比较严重的事情。<br>发音：<br>I forgive you.<br>[aɪ fərˈɡɪv ju:]<br>(连读forgive you，其中forgive的/v/音只做口型，没有送气，很快地过渡到/j/音）</p><ol start="11"><li>That was water under the bridge. 那些事都过去了。</li></ol><p>这是一句美式俚语。因为“桥下的水一旦流过，就永远流过了”，就像过去的事情、过去的矛盾也要像河水一样，过去了就不要再纠缠。<br>如果是指很久之前发生的事用be动词的过去时: that/it was；<br>如果是指当下发生的事情用现在时：that/it is。<br>更多表达：<br>It’s all water under the bridge. 事情全部都过去了。<br>发音：<br>That was water under the bridge.<br>[ðæt wəz ˈwɔ:tər ˈʌndər ðə brɪdʒ] <br>(注意waterd的/t/在美语里浊化成/d/；bridge的词尾发/dʒ/：发音时舌身抬高，舌端抵上齿龈后部，气流通过时发出破擦音, 声带振动)</p><p>（《Water Under the Bridge》是流行歌手Adele阿黛尔演唱的一首歌曲）</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习3-餐后结账</title>
      <link href="/post/fa52f81c.html"/>
      <url>/post/fa52f81c.html</url>
      
        <content type="html"><![CDATA[<p>餐后结账</p><h2 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h2><p>1.Check 账单；支票<br>2.Bill 账单<br>3.Cash 现金<br>4.Card （刷）银行卡<br>5.Change 零钱</p><p> </p><hr><h2 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h2><p>1.Check, please.<br>请结账。<br>2.Waiter, could we please have the check? Thank you.<br>服务员，结账？谢谢。<br>3.I’ll pay the bill.<br>我来买单。<br>4.Whenever you’re ready.<br>买单喊我。<br>5.Allow me. How much do we tip?<br>请让我来。小费要给多少呀？<br>（视频原句：Mr, Mrs Axford, allow me.  Axford夫妇，请让我来。）<br>6.Cash only.<br>只收现金。<br>7.Keep the change.<br>别找钱了。</p><p> </p><hr><h2 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h2><p>​无论是一个人吃，还是聚餐，在外高高兴兴吃完一顿饭了却在结账时碰壁？其实结账并不麻烦，这节课会探讨几种买单时的地道说法和表达，几个简单轻松的句子帮你搞定！</p><ol><li><p>Check, please. 请结账。</p><p>在所有请求结账的句子里，这句话是在美国最简单明了的一句，适合比较休闲的场合同时又不失礼貌。<br>【Check】在这是名词，而非“检查”动词。Check是【cheque】的美式写法，原意为“支票”，美国不仅拼法不一样，口语上还多了“结账”的意思，成为了买单时的常见说法。<br>在其他国家，（英式英语）cheque依然是单指“支票”，而账单则会更常用【bill】表示。然而，bill在美国单独拿出来是“钞票”的意思。因此，check和bill虽然同样都可以指结账，也可以在不同语境下有其他意思。<br>更多表达：<br>Excuse me. Bill, please. 不好意思，请结账。<br>The bill, please. 请结账。<br>发音：<br>Check失爆，结尾的/k/不发音。</p></li><li><p>Waiter, could we please have the check? Thank you. 服务员，结账？谢谢。</p><ol><li>Waiter,…</li><li>Could we get/have the check/bill?</li></ol><p>这整句话是上一个主题句（Check, please.）的完整正式版。<br>从呼唤服务员开始：Waiter是服务员的意思，严格来说是“男服务员”，而“女服务员”是【Waitress】。也可以用不分男女的【Server】，它不仅是有“服务员”的意思，也是上菜机器，或者电脑服务器。<br>背景小知识：<br>尽管waiter已经越来越中性化了，waiter也逐渐被server所取代了。在美国，server性别的中立更加符合政治正确的潮流，以反对性别歧视和一些职业只能由男性担任的刻板印象。<br>服务员到来了之后，【could/can we please get/have…】 是请求某服务的标准句式，跟点菜相同。Could在表达请求时比can更加委婉礼貌。<br>注意：Check和bill用the特指，强调“本次”用餐的账单。如果使用a check或者a bill，则有可能被分别理解成“一张支票”和“一张钞票”。<br>更多表达：<br>Server, can we have the bill please? Thanks. 服务员，结账？谢谢。<br>发音：<br>Waiter, could we please have the check? Thank you.<br>一般疑问句语调上升，Thank you连读。</p></li><li><p>I’ll pay the bill. 我来买单。<br>Pay the bill</p><p>“我会支付账单”也就是“我来买单”，这句话一般是跟同坐的人说表明你要去买单（说明行为），而不是直接跟服务员说。Pay the bill中the根据情况也可以替换成your、our等等。<br>注意：在上一主题句提到用the特指，而在这里要强调的是bill是单数。“Pay the bills”有付生活总体体开支、账单的意思。</p></li><li><p>Whenever you’re ready. 买单喊我。</p><p>无论是通过请求服务员还是服务员主动把账单给你，我们在收到账单后一般都要一些时间来核对账单和掏钱（现金、卡），这时服务员可能会加一句【Whenever you’re ready】。<br>什么叫“当你准备好时”？其实这句话并不完整，在餐厅语境下我们大可补全为“Whenever when you’re ready to pay, call for me（当你准备好掏钱时，呼唤我）”，重点在于“准备掏钱”。<br>更多表达：<br>Whenever you’re ready, go to the cashier to pay. 当你准备好时，去柜台付钱。<br>发音：<br>Whenever you’re ready. You’re ready连读：yourready。</p></li><li><p>Allow me. 请让我来。<br>(Please) allow me.</p><p>虽然AA制确实流行，但是朋友间轮流请客，或是请顾客、家人吃饭也是常见的。除了之前学到的那句“I’ll pay the bill.”以外，也可以用【Allow me】来表示“请让我来（请客）”。Allow me虽然是祈使句，但在这里并不是命令、要求，更像是一种请求、主张。<br>更多表达：<br>Allow me, please. I’ll pay your bill. 请让我来吧。我来帮你买单。</p></li><li><p>Cash only. 只收现金。<br>Sth. only.</p><p>【Sth. only.】 本身不是一个完整的句子，而是“只限某物”。在餐厅环境下，我们可以把句子补全为“We accept cash only（我们只收现金）”或者“You can use cash only here（你在这只能用现金）”。<br>背景小知识：<br>谈到支付方式，我们国内第一时间想到的是微信、支付宝的普及。在国外，虽然也有applepay那样的移动支付，但主要还是刷卡（信用卡credit card和借记卡debit card）、现金cash、支票check占多。<br>更多表达：<br>Check only. No cash or card. 只收支票。不接受现金或刷卡。<br>The restaurant accepts cash only. 餐厅只收现金。<br>Staff only. 闲人免入。<br>发音：<br>Cash only可连读：cashonly。</p></li><li><p>Keep the change. 别找钱了。</p><ol><li>Keep sth.</li><li>The change</li></ol><p>在西方国家，许多价格精确到分（0.01货币单位）。如果想现金支付，就会面临凑零钱或找零钱的麻烦，因此可以选择跟服务员说“不用找了”。<br>【Keep sth.】是个祈使句，让对方保留、保持、遵守某物。<br>Change在这里是不可数名词，意思是“零钱”，并且用the特指。<br>注意：The change在其它语境下也能表达“某物的变化”，这时change是可数的。<br>更多表达：<br>Keep your promise. 遵守你的承诺。<br>Don’t forget your change. 别忘了找给你的零钱。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习2-坐出租车</title>
      <link href="/post/2526e673.html"/>
      <url>/post/2526e673.html</url>
      
        <content type="html"><![CDATA[<p>坐出租车 - 交通出行</p><h2 id="一重点词汇"><a class="markdownIt-Anchor" href="#一重点词汇"></a> 一.重点词汇</h2><p>1.Take the taxi 坐出租车<br>2.Trunk n. 后备箱<br>3.Ride n. 行程<br>4.Drive n. 驾车旅程<br>5.Drop sb. off 让某人下车，放下……</p><h2 id="二实用主题句"><a class="markdownIt-Anchor" href="#二实用主题句"></a> 二.实用主题句</h2><p>1.Taxi!<br>的士！<br>2.I’ll take a taxi.<br>我坐出租车。<br>3.Open the trunk.<br>打开后备箱。<br>4.Take me to the National Airport.<br>送我去国家机场。<br>5.How much is this ride?<br>这趟车多少钱?<br>6.How long is this drive going to take?<br>这一趟要多久？<br>7.You can just drop me off here.<br>你可以让我在这下车吧。</p><h2 id="三内容精讲"><a class="markdownIt-Anchor" href="#三内容精讲"></a> 三.内容精讲</h2><p><strong>1. Taxi!</strong></p><p>伸出一只手招手然后高呼“Taxi”是最简单的打车方式之一，我们把这种行为称之为【hail a taxi】（在路边）叫出租车。<br>但在一些国外小城市里，出租车并不是随处可见的，因此需要提前预定出租车：【book a taxi】或【reserve a taxi】。<br>以上都是【get a taxi】叫车的方式，如果仅仅是“叫出租车”，我们可用最简单的“get”表达。<br>注意：get是“得到”，而get in是“进入”，因此【get a taxi】叫车和【get in a taxi】上车意思也不一样。<br><font color="green">背景小知识：</font><br>Taxi一词来自taxicab，而taxicab来自taximeter（计价器）+ cabriolet（两轮带蓬马车）。如今taxi, cab, taxicab都可以指出租车，其中taxi最常见，cab最地道。<br><font color="green">更多表达：</font><br>How do I get a taxi? 我怎么叫车好？<br>Can I hail a cab on this street? 我能在这条街上叫出租车吗？<br>Could you book a taxi for me please? 你能帮我预订一辆出租车吗？<br>发音：<br>喊“Taxi!”时为了拉长后面的/si/音，我们可以选择把重音也放到后面（与平时读taxi不一样）。</p><p><strong>2. l will take a taxi. 我坐出租车去。</strong></p><p>讲完了叫车，那“坐出租车”本身怎么说呢？</p><p>与坐其他交通工具类似，我们用【take】来表示“乘坐”：take a taxi坐出租车，take a bus/train…</p><p>也可以用【go by taxi】。</p><p>如果想说“一起坐车”呢？除了加together以外，我们可以用“分享”【share】来表达：【share a taxi/cab/ride】=【take a taxi together】一起坐出租车。</p><p>更多表达：</p><p>I want to go to the airport by taxi. 我想坐出租车去机场。</p><p>Maybe we can share a cab. 我们说不定能共乘出租车。</p><p>发音：</p><p>ta<u><strong>ke a</strong></u>…连读</p><p><strong>3. Open the trunk. 打开后备箱。</strong></p><p><img src="https://image.wu-mi.cn/images/f/W/s/35AvaE.jpg" alt></p><p>“后备箱”的美式英语是【trunk】，英式英语是【boot】，并且用the特指“汽车的”后备箱。</p><p>在视频里，男主角在搜寻被绑架的女儿，因此他用这个带命令语气的祈使句去让司机开后备箱。</p><p>生活中，我们应当后面加一个please或者用“Could/Can you…”的问句来礼貌地请求打开后备箱。</p><p>更多表达：</p><p>Could you open the trunk, please? 请你打开后备箱，好吗？</p><p>I would like to put my luggage in the trunk. 我想把行李放在后备箱里。</p><p><strong>4. Take me to the National Airport. 送我去国家机场。</strong></p><p><em>Take 某人 to 某地方</em></p><p><img src="https://image.wu-mi.cn/images/f/u/P/dNJyR1.jpg" alt></p><p>这也是一句祈使句，告诉司机你想去的地方。</p><p>与第二句take【乘坐】不一样，这里的take是“带走、带去”的意思。【Take me to】是“带我去”接某个地点、地址。</p><p>想跟司机表达去某地点也可以直接用【某地方, please.】</p><p>更多表达：</p><p>Take me to Ramada Inn, 161 Lexington. 带我去罗曼达酒店，列克星敦161号。（《幸福终点站》）</p><p>Take me to your heart. 带我走进你的心。</p><p>Watergate Hotel, please. 请去水门酒店。</p><p>发音：</p><p>Take失爆，尾音/k/只做口型不发音。</p><p><strong>5. How much is this ride? 这趟车多少钱?</strong></p><p><em>1） How much</em></p><p><em>2） ride</em></p><p>（背景提示：三轮脚踏车有时也被称为【bike taxi】。由于两位小姐姐正在参加竞赛活动，付钱时与当地语言不太通，因此视频中说这句话时比较大声、缓慢。）</p><p><img src="https://image.wu-mi.cn/images/f/8/z/Ec3s5J.jpg" alt></p><p>无论是上车前了解价格，还是下车前付费，我们都可以向司机询问一下价格。</p><p>【How much (money)】是最常见的问价钱方式，一般省略money默认是问价格。除此之外还可以用【What’s the price】来询问。</p><p>【ride】在此不作动词“骑”，而作名词“行程”，因此这整句是在司机了解目的地后我们问他这趟旅程多少钱。</p><p>更多表达：</p><p>Roughly how much to Ramada Inn? = About how much is the fare to Ramada Inn? 去罗曼达酒店大概要多少钱？ （【Roughly, About】为“大概”，【fare】则是“车费”）</p><p>What’s the price of this ride? 这趟车价格时是多少？</p><p>场景假设：</p><p>在有计费表的出租车里有关车费的问与答：</p><p>How much should I pay? 我应该付多少？</p><p>The meter reads $15. 计费表显示15美元。</p><p><strong>6. How long is this drive going to take? 这一趟要多久？</strong></p><p>​<em>How long</em></p><p><img src="https://image.wu-mi.cn/images/f/6/B/u1Htco.jpg" alt></p><p>上车前除了问价格，我们还可以问旅程的时间。</p><p>【How long】是问“多长”的意思，既可以指物理上的长度，也可以是时间长度。</p><p>【drive】在这里与上一句的ride相似，作名词“驾车旅程”使用，而不是动词“开车”。</p><p>那么根据后面的内容（此处take是“耗费（时间）”），我们可以判断这个问题是在问时间。</p><p>更多表达：</p><p>How long is this drive? 这一趟要多久？</p><p>How long will this trip take? 这一趟旅程要多久？ （be going to = will）</p><p>场景假设：</p><p>当车已经开了一会时，我们想问“还要多久时间”我们可以用：</p><p>How much longer to Ramada Inn? 还要多久到罗曼达酒店？</p><p><strong>7. You can just drop me off here. 你可以让我在这下车吧。</strong></p><p><em>Drop sb. off + 某地</em></p><p><img src="https://image.wu-mi.cn/images/f/j/e/LHtkOg.gif" alt></p><p>到达了目的地附近，想下车怎么说？</p><p>【Drop sb. off】是让某人下车，后面可接介词+地点（用here、there等时不需要介词）表示在某地下车，如：Drop him off at the entrance. 让他在门口下车。</p><p>更多表达：</p><p>Could you drop me off at Lexington 161? 你可以在列克星敦161号让我下车吗？</p><p>Pull over and let me off please. 请靠边停让我下车。</p><p>Please stop right here. 请就在这里停下吧。</p><p>发音：</p><p>Just和Drop失爆，尾音/t/和/p/只做口型不发音。</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口语学习1-如何破冰</title>
      <link href="/post/4e7971b3.html"/>
      <url>/post/4e7971b3.html</url>
      
        <content type="html"><![CDATA[<p>如何破冰</p><h2 id="重点词汇"><a class="markdownIt-Anchor" href="#重点词汇"></a> 重点词汇</h2><ol><li>a big fan of  特别喜欢</li><li>shirt  n. 衬衫</li><li>Waldo  n.瓦尔多(人名)</li></ol><p> </p><hr><h2 id="实用主题句"><a class="markdownIt-Anchor" href="#实用主题句"></a> 实用主题句</h2><ol><li><p>You are looking good today.</p><p>你今天真好看。</p></li><li><p>I like your shirt.</p><p>我喜欢你的衬衫。</p></li><li><p>Where did you get it?</p><p>你在哪买的？</p></li><li><p>I’m a big fan of Waldo book?</p><p>我特别喜欢《瓦尔多在哪里》这个系列的书。</p></li><li><p>Do you like shoes?</p><p>你喜欢鞋子吗？</p></li></ol><p> </p><hr><h2 id="内容精讲"><a class="markdownIt-Anchor" href="#内容精讲"></a> 内容精讲</h2><ol><li><p><strong>You are looking good today.  你今天真好看。</strong></p><p>某人 + be looking + 形容词</p><p>想开启一场对话，先夸赞对方是一个不错的选择。</p><p>我们会用这个主题句式来夸奖对方当下的外表真好看，或者状态真不错。</p><p><font color="green"><strong>更多表达：</strong></font></p><p>如果觉得 good 太单调，可以用以下形容词来替换:</p><p>stunning(极有魅力的) / amazing(令人惊喜（或惊羡、惊叹）的) / gorgeous(非常漂亮的)</p><p><strong>例如:</strong></p><p><strong>You are looking stunning/amazing/gorgeous tonight.  你今晚美翻了。</strong></p><p>还有一个句式也能用来夸奖对方状态很好:</p><p><strong>You look good.  你状态真不错</strong></p><p><font color="red"><strong>注意: 以上形容词更多用于夸奖女性，夸奖男性我们可以用 sharp 来替换。</strong> </font></p><p><strong>例如:</strong></p><p><strong>You are looking sharp.  你今天看起来真帅。</strong></p><p> </p></li><li><p><strong>I like your shirt.  我喜欢你的衬衫。</strong></p><p>某人 + like(s) + 某物</p><p>单单夸一句 “You are looking good” 显得诚意不足。这时，我们可以从对方的衣着上下手，随便找出一样你觉得可以开启话题的物品来夸一夸。</p><p><font color="green"><strong>句式解析:</strong></font></p><p>人称加上动词 Like，是最常见的表达 &quot;喜欢某物/人&quot;的表达方式。</p><p><strong>例如:</strong></p><p><strong>I like your shoes.  我喜欢你的鞋子。</strong></p><p><strong>I like your necklace.  我喜欢你的项链。</strong></p><p><font color="green"><strong>更多表达:</strong></font></p><p>如果感情更加强烈，可以用 love 或 really fancy 替代 like。</p><p><strong>例如:</strong></p><p><strong>I love sports!  我特别喜欢运动。</strong></p><p><strong>I really fancy your shirt.  我特别喜欢你的衬衫。</strong></p><p> </p></li><li><p><strong>Where did you get it?  你在哪儿买的？</strong></p><p>Where + did 某人 + get 某样物品</p><p>听到你的夸奖后，对方会礼貌性的回答 “Thank you”，表示谢谢。这时你可以追加一句“在哪里买的？”，这样抛出问题后，对方需要回应，自然而然的对话就能继续下去了。同时，加上一句 Where did you get it 会让你的夸奖更真诚。</p><p><font color="green"><strong>更多表达:</strong></font></p><p>可以用 buy 代替 get，表达相同的意思。</p><p><strong>例如:</strong></p><p><strong>Where did you buy your shoes?  你在哪里买的鞋子？</strong></p><p> </p></li><li><p><strong>I’m a big fan of Waldo books.  我特别喜欢《瓦尔多在哪里》这个系列的书</strong></p><p>某人 + be a big fan + of 某样东西</p><p>夸奖完对方某样东西之后，加上这句，就足以显示出你是真的喜欢，而不是在假意夸奖。<br>I’m a big fan of 这个句式是用来表达喜欢某样东西、某件事的地道方式之一。<br>Fan这个词的本意除了“狂热爱好者”之外，还有“风扇”的意思在里面，注意不要弄混咯。</p><p><font color="green"><strong>场景假设：</strong></font></p><p><strong>同事开车送你回家，在车上听到了自己喜欢的歌：</strong><br><strong>你：Wow! This song!</strong><br><strong>哇！这首歌！</strong><br><strong>同事：You like Jay Chou, too?</strong><br><strong>你也喜欢周杰伦吗？</strong><br><strong>你：I’m a big fan of his.</strong><br><strong>我特别喜欢他。</strong></p><p><font color="green"><strong>背景小知识:</strong></font></p><p>《瓦尔多在哪里》系列图书是由英国儿童书绘者Martin Handford创作的游戏书。这本书的每一关都是找到穿着红色条纹衣服的Waldo。该系列在国外深受儿童欢迎。</p><p><font color="blue">发音：</font></p><ol><li><font color="blue">重读big fan和of后面的单词，强调自己特别喜欢什么东西。</font></li><li><font color="blue">I’<u><strong>m a</strong></u> 连读。</font></li></ol><p> </p></li><li><p><strong>Do you like motorcycles?  你喜欢摩托车吗？</strong></p><p>Do/Does + 某人 + like 某物</p><p>最后用这样一个问题抛回给对方，让对方顺着你的话说下去，这样就能很好的开启接下来的对话了。<br>句式解析：<br>Do/Does someone like something/someone 这个句型常用于询问他人，是否喜欢某样东西/某人。<br><strong>例如：</strong><br><strong>Do you like animals?  你喜欢动物吗？</strong><br><strong>Do you like music?  你喜欢音乐吗？</strong><br><strong>Does he like Jay Chou?  他喜欢周杰伦吗？</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oral </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Presentation注意事项</title>
      <link href="/post/e2a88a8e.html"/>
      <url>/post/e2a88a8e.html</url>
      
        <content type="html"><![CDATA[<h2 id="各阶段准备"><a class="markdownIt-Anchor" href="#各阶段准备"></a> 各阶段准备</h2><p>开场：</p><ul><li><p>稍正式些</p><p>It’s great to be here with you today.  很高兴今天能来这里</p><p>Thanks for having me today.  感谢邀请我</p></li><li><p>稍随意</p><p>Hi everyone, good morning.  直接问候早上下午好之类的</p><p>Hi guys, how’s everyone doing?</p></li></ul><p> <br>介绍自己：</p><p>稍正式：</p><p>Let me briefly introduce myself.  我先简短的介绍一下自己</p><p>My name is (chenhao) and I’m the (student) of (BUPT).  我叫某某，我是某单位的某职位</p><p> <br>今天要说啥:</p><p>Today, I’d like to talk to you about …</p><p>My topic today is …</p><p> <br>Overview - 今天概述</p><p>Let me direct your attention to the screen.  请大家看大屏幕</p><p>(As you can see) This presentation is divided into (four) parts.  今天的展示主要分四部分</p><p> <br>详细概述</p><p>I want to begin by/with (按情况选介词) A,</p><p>and then I’ll move on to B,</p><p>next we’re talking about C,</p><p>and finally we’ll land on D (maybe a conclusion).</p><p> <br>具体内容</p><p>Let me begin by giving you some background information about (this issue).</p><p>先给大家介绍一些背景信息吧</p><p>To get started, let’s take a look at (this chart) here.</p><p>首先咱们先看这个表</p><p> <br>之后就说自己的第一部分</p><p> <br>下一个话题（第二部分）</p><p>Now, I’d like to move on to the second part of the presentation.</p><p>Moving on to the next topic.</p><p>To give you an example, let’s take a look at this.  举例子</p><p>A good example of this is …</p><p> <br>结尾</p><p>That concludes my presentation.</p><p>That brings us/brought us to the end of my presentation.</p><p> <br>Q&amp;A Time</p><p>Does anyone has any questions or comments ?  大家有问题或有什么要说的吗？</p><p> <br>Pass the baton 把接力棒给下一人</p><p>If there are no further questions at this point, I’d like to give the stage to my coworker/teammate Amy.</p><p>如果没什么问题了呢，有请我的同事/队友Amy来为大家做下面的讲解。</p><p> <br>如果没有同事/队友了</p><p>That’s it from me, thank you for your attention.  我的就结束了，感谢大家。</p><p> </p><hr><h2 id="内容"><a class="markdownIt-Anchor" href="#内容"></a> 内容</h2><ol><li>根据Presentation的主题简单罗列需要传达的内容，如内容模块A/内容模块B/内容模块C/…</li><li>按照顺序重新排列组合：开头+简介—&gt;内容模块A—&gt;内容模块B—&gt;内容模块C—&gt;(…)—&gt;总结+结尾</li><li>详细展开每一个内容模块。内容模块A—&gt;A1—&gt;A2—&gt;A3，内容模块B—&gt;B1—&gt;B2—&gt;B3，内容模块C—&gt;C1—&gt;C2—&gt;C3</li><li>修改内容及语句+完善过渡语，例如：首先/其次/再次/(…) 让表达更有逻辑</li><li>一边练习一边完善</li></ol><p> </p><hr><h2 id="slides-requires"><a class="markdownIt-Anchor" href="#slides-requires"></a> Slides Requires:</h2><ul><li><p>Structure</p></li><li><p>Outline</p></li><li><p>Members</p></li><li><p>Keywords</p></li><li><p>Resonable</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> presentation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单词拼写纠错</title>
      <link href="/post/409250ae.html"/>
      <url>/post/409250ae.html</url>
      
        <content type="html"><![CDATA[<p>所需数据集:</p><p><a href="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-DataSet/NLP/%E5%8D%95%E8%AF%8D%E6%8B%BC%E5%86%99%E7%BA%A0%E9%94%99/spell-errors.txt" target="_blank" rel="noopener">spell-errors.txt</a></p><p><a href="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-DataSet/NLP/%E5%8D%95%E8%AF%8D%E6%8B%BC%E5%86%99%E7%BA%A0%E9%94%99/testdata.txt" target="_blank" rel="noopener">testdata.txt</a></p><p><a href="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-DataSet/NLP/%E5%8D%95%E8%AF%8D%E6%8B%BC%E5%86%99%E7%BA%A0%E9%94%99/vocab.txt" target="_blank" rel="noopener">vocab.txt</a></p><h2 id="词典库"><a class="markdownIt-Anchor" href="#词典库"></a> 词典库</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 词典库</span></span><br><span class="line">vocab = set([line.rstrip() <span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">'vocab.txt'</span>)]) <span class="comment"># 用set效率高一些(时间复杂度)</span></span><br></pre></td></tr></table></figure><hr><h2 id="需要生成所有候选集合"><a class="markdownIt-Anchor" href="#需要生成所有候选集合"></a> 需要生成所有候选集合</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要生成所有候选集合</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_candidates</span><span class="params">(word)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    word: 给定的输入(错误的输入)</span></span><br><span class="line"><span class="string">    返回所有(valid)候选集合</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment"># 生成编辑距离为1的单词</span></span><br><span class="line">    <span class="comment"># 1.insert 2.delete 3.replace</span></span><br><span class="line">    <span class="comment"># 假设使用26个字符</span></span><br><span class="line">    letters = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    </span><br><span class="line">    splits = [(word[:i], word[i:]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(word)+<span class="number">1</span>)]</span><br><span class="line">    <span class="comment"># insert 操作</span></span><br><span class="line">    inserts = [L+c+R <span class="keyword">for</span> L, R <span class="keyword">in</span> splits <span class="keyword">for</span> c <span class="keyword">in</span> letters] <span class="comment"># insert操作后的结果</span></span><br><span class="line">    <span class="comment"># delete 操作</span></span><br><span class="line">    deletes = [L+R[<span class="number">1</span>:] <span class="keyword">for</span> L, R <span class="keyword">in</span> splits <span class="keyword">if</span> R]   <span class="comment"># if R 判断R不为空</span></span><br><span class="line">    <span class="comment"># replace</span></span><br><span class="line">    replaces = [L+c+R[<span class="number">1</span>:] <span class="keyword">for</span> L, R <span class="keyword">in</span> splits <span class="keyword">if</span> R <span class="keyword">for</span> c <span class="keyword">in</span> letters] <span class="comment"># 把c替换为R中删掉的字符</span></span><br><span class="line">    </span><br><span class="line">    candidates = set(inserts+deletes+replaces)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 过滤掉不存在于词典库里面的单词</span></span><br><span class="line">    <span class="keyword">return</span> [word <span class="keyword">for</span> word <span class="keyword">in</span> candidates <span class="keyword">if</span> word <span class="keyword">in</span> vocab]</span><br></pre></td></tr></table></figure><hr><h2 id="读取语料库"><a class="markdownIt-Anchor" href="#读取语料库"></a> 读取语料库</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.corpus <span class="keyword">import</span> reuters</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取语料库</span></span><br><span class="line">categories = reuters.categories()   <span class="comment"># 路透社语料库的类别</span></span><br><span class="line">corpus = reuters.sents(categories=categories) <span class="comment"># sents()指定分类中的句子</span></span><br></pre></td></tr></table></figure><hr><h2 id="构建语言模型"><a class="markdownIt-Anchor" href="#构建语言模型"></a> 构建语言模型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建语言模型：bigram</span></span><br><span class="line">term_count = &#123;&#125;</span><br><span class="line">bigram_count = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> doc <span class="keyword">in</span> corpus:</span><br><span class="line">    doc = [<span class="string">'&lt;s&gt;'</span>] + doc   <span class="comment"># '&lt;s&gt;'表示开头</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(doc)<span class="number">-1</span>):</span><br><span class="line">        <span class="comment"># bigram: [i,i+1]</span></span><br><span class="line">        term = doc[i]          <span class="comment"># term是doc中第i个单词</span></span><br><span class="line">        bigram = doc[i:i+<span class="number">2</span>]    <span class="comment"># bigram为第i,i+1个单词组成的</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> term <span class="keyword">in</span> term_count:</span><br><span class="line">            term_count[term] += <span class="number">1</span>   <span class="comment"># 如果term存在term_count中，则加1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            term_count[term] = <span class="number">1</span>    <span class="comment"># 如果不存在，则添加，置为1</span></span><br><span class="line">        </span><br><span class="line">        bigram = <span class="string">' '</span>.join(bigram)</span><br><span class="line">        <span class="keyword">if</span> bigram <span class="keyword">in</span> bigram_count:</span><br><span class="line">            bigram_count[bigram] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            bigram_count[bigram] = <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h2 id="用户打错的概率"><a class="markdownIt-Anchor" href="#用户打错的概率"></a> 用户打错的概率</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用户打错的概率统计 - channel probability</span></span><br><span class="line">channel_prob = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">'spell-errors.txt'</span>):</span><br><span class="line">    items = line.split(<span class="string">":"</span>)  <span class="comment"># 按":"分割成两个子项(在items列表中)</span></span><br><span class="line">    correct = items[<span class="number">0</span>].strip()</span><br><span class="line">    mistakes = [item.strip() <span class="keyword">for</span> item <span class="keyword">in</span> items[<span class="number">1</span>].strip().split(<span class="string">","</span>)]</span><br><span class="line">    channel_prob[correct] = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> mis <span class="keyword">in</span> mistakes:</span><br><span class="line">        channel_prob[correct][mis] = <span class="number">1.0</span>/len(mistakes)</span><br></pre></td></tr></table></figure><hr><h2 id="纠错"><a class="markdownIt-Anchor" href="#纠错"></a> 纠错</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">V = len(term_count.keys())</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">"testdata.txt"</span>, <span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    items = line.rstrip().split(<span class="string">'\t'</span>)   <span class="comment"># 句子存放在items[2]中</span></span><br><span class="line">    line = items[<span class="number">2</span>].split()    <span class="comment"># 得到句子中所有单词</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> line:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> vocab:   <span class="comment"># 若单词不存在词典中，则是错误的单词</span></span><br><span class="line">            <span class="comment"># 需要替换word成正确的单词</span></span><br><span class="line">            <span class="comment"># Step1: 生成所有的(valid)候选集合</span></span><br><span class="line">            candidates = generate_candidates(word)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 若candidates为空</span></span><br><span class="line">            <span class="comment"># 一种方式：多生成几个candidates，比如编辑距离不大于2</span></span><br><span class="line">            <span class="comment"># <span class="doctag">TODO:</span> 根据条件生成更多的候选集合</span></span><br><span class="line">            <span class="keyword">if</span> len(candidates) &lt; <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">continue</span>   <span class="comment"># 不建议这么做</span></span><br><span class="line">                </span><br><span class="line">            probs = []</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 对于每一个candidate，计算它的score</span></span><br><span class="line">            <span class="comment"># score = p(correct)*p(mistake|correct)</span></span><br><span class="line">            <span class="comment">#       = log p(correct) + log p(mistake|correct)</span></span><br><span class="line">            <span class="comment"># 返回 score 最大的 candidate</span></span><br><span class="line">            <span class="keyword">for</span> candi <span class="keyword">in</span> candidates:</span><br><span class="line">                prob = <span class="number">0</span></span><br><span class="line">                <span class="comment"># a. 计算 channel probability</span></span><br><span class="line">                <span class="keyword">if</span> candi <span class="keyword">in</span> channel_prob <span class="keyword">and</span> word <span class="keyword">in</span> channel_prob[candi]:</span><br><span class="line">                    prob += np.log(channel_prob[candi][word])</span><br><span class="line">                <span class="keyword">else</span>:   <span class="comment"># word not in channel_prob[candi]</span></span><br><span class="line">                    prob += np.log(<span class="number">0.0001</span>)</span><br><span class="line">            </span><br><span class="line">                <span class="comment"># b. 计算语言模型的概率</span></span><br><span class="line">                idx = items[<span class="number">2</span>].index(word)+<span class="number">1</span>   <span class="comment"># +1是因为每句前面加了&lt;s&gt;</span></span><br><span class="line">                <span class="keyword">if</span> items[<span class="number">2</span>][idx<span class="number">-1</span>] <span class="keyword">in</span> bigram_count <span class="keyword">and</span> condi <span class="keyword">in</span> bigram_count[items[<span class="number">2</span>][idx<span class="number">-1</span>]]:</span><br><span class="line">                    prob += np.log((bigram_count[items[<span class="number">2</span>][idx<span class="number">-1</span>]][candi] + <span class="number">1.0</span>) / (term_count[bigram_count[items[<span class="number">2</span>][idx - <span class="number">1</span>]]] + V))</span><br><span class="line">                <span class="comment"># <span class="doctag">TODO:</span> 也要考虑当前[word，post_word]，上面只考虑了[pre_word, word]</span></span><br><span class="line">                <span class="comment"># prob += np.log(bigram概率)</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    prob += np.log(<span class="number">1.0</span> / V)</span><br><span class="line">                    </span><br><span class="line">                probs.append(prob)</span><br><span class="line">            max_idx = probs.index(max(probs))</span><br><span class="line">            print(word, candidates[max_idx])</span><br></pre></td></tr></table></figure><hr><h2 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protectionst protectionist</span><br><span class="line">products. products</span><br><span class="line">long-run, long-run</span><br><span class="line">gain. gain</span><br><span class="line">17, 17</span><br><span class="line">retaiation retaliation</span><br><span class="line">cost. coste</span><br><span class="line">busines, business</span><br><span class="line">ltMC.T. ltMC.T</span><br><span class="line">U.S., U.S.</span><br><span class="line">Murtha, Murtha</span><br><span class="line">worried. worried</span><br><span class="line">seriousnyss seriousness</span><br><span class="line">aganst against</span><br><span class="line">us, us</span><br><span class="line">named. named</span><br><span class="line">year, year</span><br><span class="line">sewll sell</span><br><span class="line">dlrs, dlrs</span><br><span class="line">world&apos;s worlds</span><br><span class="line">largest. largest</span><br><span class="line">markets, markets</span><br><span class="line">importsi imports</span><br><span class="line">Products, Products</span><br><span class="line">Retaliation, Retaliation</span><br><span class="line">Group. Group</span><br><span class="line">Korea&apos;s Koreans</span><br><span class="line">Korea, Korea</span><br><span class="line">Japan. Japan</span><br><span class="line">Koreva Korea</span><br><span class="line">U.S., U.S.</span><br><span class="line">1985. 1985</span><br><span class="line">Malaysia, Malaysian</span><br><span class="line">......</span><br></pre></td></tr></table></figure><hr><h2 id="附-语料库基本函数表"><a class="markdownIt-Anchor" href="#附-语料库基本函数表"></a> 附: 语料库基本函数表</h2><table><thead><tr><th>示例</th><th>描述</th></tr></thead><tbody><tr><td>fileids()</td><td>语料库中的文件</td></tr><tr><td>fileids([categories])</td><td>这些分类对应的语料库中的文件</td></tr><tr><td>categories()</td><td>语料库中的分类</td></tr><tr><td>categories([fileids])</td><td>这些文件对应的语料库中的分类</td></tr><tr><td>raw()</td><td>语料库的原始内容</td></tr><tr><td>raw(fileids=[f1,f2,f3])</td><td>指定文件的原始内容</td></tr><tr><td>raw(categories=[c1,c2])</td><td>指定分类的原始内容</td></tr><tr><td>words()</td><td>整个语料库中的词汇</td></tr><tr><td>words(fileids=[f1,f2,f3])</td><td>指定文件中的词汇</td></tr><tr><td>words(categories=[c1,c2])</td><td>指定分类中的词汇</td></tr><tr><td>sents()</td><td>指定分类中的句子</td></tr><tr><td>sents(fileids=[f1,f2,f3])</td><td>指定文件中的句子</td></tr><tr><td>sents(categories=[c1,c2])</td><td>指定分类中的句子</td></tr><tr><td>abspath(fileid)</td><td>指定文件在磁盘上的位置</td></tr><tr><td>encoding(fileid)</td><td>文件的编码（如果知道的话）</td></tr><tr><td>open(fileid)</td><td>打开指定语料库文件的文件流</td></tr><tr><td>root()</td><td>到本地安装的语料库根目录的路径</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 拼写纠错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-装饰器</title>
      <link href="/post/2d63a785.html"/>
      <url>/post/2d63a785.html</url>
      
        <content type="html"><![CDATA[<p>装饰器，又叫语法糖、注解。</p><a id="more"></a><h2 id="无参数的装饰器"><a class="markdownIt-Anchor" href="#无参数的装饰器"></a> 无参数的装饰器</h2><p>‘@’装饰符引用已有的函数，对下面的函数进行修饰。引用函数必须放在修饰函数的上面，引用函数的返回值，返回给被修饰的函数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取函数的运行时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">        func()</span><br><span class="line">    <span class="keyword">return</span> get_time</span><br><span class="line"></span><br><span class="line"><span class="comment"># ‘@’引用已有的函数，对下面的函数进行修饰。引用函数必须放在修饰函数的上面，引用函数的返回值，返回给被修饰的函数</span></span><br><span class="line"><span class="meta">@runtime    # 装饰器的写法，把student_run传到runtime()中，也就是func=student_run</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run</span><span class="params">()</span>:</span>    <span class="comment"># 不放参数</span></span><br><span class="line">    print(<span class="string">"学生跑"</span>)</span><br><span class="line">    </span><br><span class="line">student_run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568798582.171165</span></span><br><span class="line">学生跑</span><br></pre></td></tr></table></figure><hr><h2 id="一个参数的装饰器"><a class="markdownIt-Anchor" href="#一个参数的装饰器"></a> 一个参数的装饰器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果函数有参数怎么解决</span></span><br><span class="line"><span class="comment"># 有参数的装饰器</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">(i)</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">        func(i)</span><br><span class="line">    <span class="keyword">return</span> get_time</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run</span><span class="params">(i)</span>:</span></span><br><span class="line">    print(<span class="string">"学生跑"</span>)</span><br><span class="line"></span><br><span class="line">student_run(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568798781.276151</span></span><br><span class="line">学生跑</span><br></pre></td></tr></table></figure><hr><h2 id="多个参数的装饰器"><a class="markdownIt-Anchor" href="#多个参数的装饰器"></a> 多个参数的装饰器</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">(i, j)</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">        func(i, j)</span><br><span class="line">    <span class="keyword">return</span> get_time</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run</span><span class="params">(i, j)</span>:</span></span><br><span class="line">    print(<span class="string">"学生跑"</span>)</span><br><span class="line"></span><br><span class="line">student_run(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568798908.1603682</span></span><br><span class="line">学生跑</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 *args</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">(*args)</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">        func(*args)</span><br><span class="line">    <span class="keyword">return</span> get_time</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run</span><span class="params">(i)</span>:</span></span><br><span class="line">    print(<span class="string">"学生跑"</span>)</span><br><span class="line">    </span><br><span class="line">student_run(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run1</span><span class="params">(i, j)</span>:</span></span><br><span class="line">    print(<span class="string">"学生1跑"</span>)</span><br><span class="line"></span><br><span class="line">student_run1(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568797922.20975</span></span><br><span class="line">学生跑</span><br><span class="line"><span class="number">1568797922.210711</span></span><br><span class="line">学生<span class="number">1</span>跑</span><br></pre></td></tr></table></figure><hr><h2 id="关键字参数"><a class="markdownIt-Anchor" href="#关键字参数"></a> 关键字参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 **kwargs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决关键字参数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">(**kwargs)</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">        func(**kwargs)</span><br><span class="line">    <span class="keyword">return</span> get_time</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run1</span><span class="params">(**kwargs)</span>:</span></span><br><span class="line">    print(<span class="string">"学生1跑"</span>)</span><br><span class="line"></span><br><span class="line">student_run1(i=<span class="number">1</span>, j=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568797916.265962</span></span><br><span class="line">学生<span class="number">1</span>跑</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 同时使用 *args 和 **kwargs</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> get_time</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run</span><span class="params">(i, j)</span>:</span>  <span class="comment"># 参数</span></span><br><span class="line">    print(<span class="string">"学生跑"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run1</span><span class="params">(*args, **kwargs)</span>:</span>   <span class="comment"># 关键字参数</span></span><br><span class="line">    print(<span class="string">"学生1跑"</span>)</span><br><span class="line">    </span><br><span class="line"><span class="meta">@runtime    </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student_run2</span><span class="params">()</span>:</span>    <span class="comment"># 不放参数</span></span><br><span class="line">    print(<span class="string">"学生2跑"</span>)</span><br><span class="line"></span><br><span class="line">student_run1(<span class="number">5</span>, i=<span class="number">1</span>, j=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568799111.3302999</span></span><br><span class="line">学生跑</span><br><span class="line"><span class="number">1568799111.3304021</span></span><br><span class="line">学生<span class="number">1</span>跑</span><br><span class="line"><span class="number">1568799111.330451</span></span><br><span class="line">学生<span class="number">2</span>跑</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装饰器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-闭包</title>
      <link href="/post/403bb1d5.html"/>
      <url>/post/403bb1d5.html</url>
      
        <content type="html"><![CDATA[<p>闭包: 一个返回值是函数的函数</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用后打印当前的时间</span></span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runtime</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">now_time</span><span class="params">()</span>:</span></span><br><span class="line">        print(time.time())</span><br><span class="line">    <span class="keyword">return</span> now_time</span><br><span class="line"></span><br><span class="line">f = runtime()    <span class="comment"># f即为一个函数(now_time)</span></span><br><span class="line">f()              <span class="comment"># 调用f这个函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1568795086.316053</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看data.csv文件，该文件在本地当前目录下</span></span><br><span class="line">cat data.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">a,b,c,d,e</span><br><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br><span class="line"><span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读出一个文件中带有某个关键字的行</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_filter</span><span class="params">(keep)</span>:</span>             <span class="comment"># keep=8</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">the_filter</span><span class="params">(file_name)</span>:</span>     <span class="comment"># file_name=data.csv这个文件</span></span><br><span class="line">        file = open(file_name)     <span class="comment"># 打开文件</span></span><br><span class="line">        lines = file.readlines()   <span class="comment"># 读出文件的所有行</span></span><br><span class="line">        file.close()               <span class="comment"># 关闭文件</span></span><br><span class="line">        filter_doc = [i <span class="keyword">for</span> i <span class="keyword">in</span> lines <span class="keyword">if</span> keep <span class="keyword">in</span> i]</span><br><span class="line">        <span class="keyword">return</span> filter_doc</span><br><span class="line">    <span class="keyword">return</span> the_filter</span><br><span class="line"></span><br><span class="line">filter1 = make_filter(<span class="string">"8"</span>)         <span class="comment"># 这一行调用了make_filter函数，接受了the_filter函数作为返回值</span></span><br><span class="line"><span class="comment"># 也就是说这里的 filter1 就等于函数 the_filter</span></span><br><span class="line"></span><br><span class="line">filter_result = filter1(<span class="string">"data.csv"</span>)</span><br><span class="line">print(filter_result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'6,7,8,9,10\n'</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闭包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-三大推导式</title>
      <link href="/post/66eaf381.html"/>
      <url>/post/66eaf381.html</url>
      
        <content type="html"><![CDATA[<h2 id="列表推导式"><a class="markdownIt-Anchor" href="#列表推导式"></a> 列表推导式</h2><p>根据已有的列表推导出新的列表。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">f = map(<span class="keyword">lambda</span> x: x+x, list1)</span><br><span class="line">print(list(f))  <span class="comment"># 需要list强转</span></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">list2 = [i + i <span class="keyword">for</span> i <span class="keyword">in</span> list1]</span><br><span class="line">print(list2)</span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">list3 = [i**<span class="number">3</span> <span class="keyword">for</span> i <span class="keyword">in</span> list1]</span><br><span class="line">print(list3)</span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>, <span class="number">125</span>, <span class="number">216</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有选择性的筛选</span></span><br><span class="line">list4 = [i*i <span class="keyword">for</span> i <span class="keyword">in</span> list1 <span class="keyword">if</span> i &gt; <span class="number">3</span>]</span><br><span class="line">print(list4)</span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>]</span><br></pre></td></tr></table></figure><hr><h2 id="集合推导式"><a class="markdownIt-Anchor" href="#集合推导式"></a> 集合推导式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line">list2 = &#123;i + i <span class="keyword">for</span> i <span class="keyword">in</span> list1&#125;</span><br><span class="line">print(list2)</span><br><span class="line"></span><br><span class="line">list3 = &#123;i**<span class="number">3</span> <span class="keyword">for</span> i <span class="keyword">in</span> list1&#125;</span><br><span class="line">print(list3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有选择性的筛选</span></span><br><span class="line">list4 = &#123;i*i <span class="keyword">for</span> i <span class="keyword">in</span> list1 <span class="keyword">if</span> i &gt; <span class="number">3</span>&#125;</span><br><span class="line">print(list4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">&#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>&#125;</span><br><span class="line">&#123;<span class="number">64</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">216</span>, <span class="number">27</span>, <span class="number">125</span>&#125;</span><br><span class="line">&#123;<span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="字典推导式"><a class="markdownIt-Anchor" href="#字典推导式"></a> 字典推导式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = &#123;</span><br><span class="line">    <span class="string">"zhangsan"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">"lisi"</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="string">"wangwu"</span>: <span class="number">31</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿出所有的key，并变成列表</span></span><br><span class="line">s_key = [key <span class="keyword">for</span> key, value <span class="keyword">in</span> s.items()]</span><br><span class="line">print(s_key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># key和value颠倒</span></span><br><span class="line">s1 = &#123;value: key <span class="keyword">for</span> key, value <span class="keyword">in</span> s.items()&#125;</span><br><span class="line">print(s1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只拿出符合条件的值</span></span><br><span class="line">s2 = &#123;key:value <span class="keyword">for</span> key,value <span class="keyword">in</span> s.items() <span class="keyword">if</span> key == <span class="string">"lisi"</span>&#125;</span><br><span class="line">print(s2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br><span class="line">&#123;<span class="number">20</span>: <span class="string">'zhangsan'</span>, <span class="number">15</span>: <span class="string">'lisi'</span>, <span class="number">31</span>: <span class="string">'wangwu'</span>&#125;</span><br><span class="line">&#123;<span class="string">'lisi'</span>: <span class="number">15</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推导式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-高阶函数的使用</title>
      <link href="/post/a6f24307.html"/>
      <url>/post/a6f24307.html</url>
      
        <content type="html"><![CDATA[<h2 id="lambda表达式"><a class="markdownIt-Anchor" href="#lambda表达式"></a> lambda表达式</h2><p>又被称之为匿名函数<br>格式 lambda 参数列表:函数体</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">print(add(<span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_lambda = <span class="keyword">lambda</span> x,y: x + y</span><br><span class="line">add_lambda(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><hr><h2 id="三元运算符"><a class="markdownIt-Anchor" href="#三元运算符"></a> 三元运算符</h2><p>三元运算符通常在Python里被称为条件表达式，这些表达式基于真(true)/假(false)的条件判断。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">condition = <span class="literal">True</span></span><br><span class="line">print(<span class="number">1</span> <span class="keyword">if</span> condition <span class="keyword">else</span> <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">condition = <span class="literal">False</span></span><br><span class="line">print(<span class="number">1</span> <span class="keyword">if</span> condition <span class="keyword">else</span> <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><hr><h2 id="map函数"><a class="markdownIt-Anchor" href="#map函数"></a> map函数</h2><p>map() 会根据提供的函数对指定序列做映射。<br>格式<code>map(func, *iterables) --&gt; map object</code></p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Python/Python%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%9B%BE/map.png"></center><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">r = map(<span class="keyword">lambda</span> x: x + x, list1)</span><br><span class="line">print(list(r))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m1 = map(<span class="keyword">lambda</span> x, y : x * x + y, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">print(list(m1))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">20</span>, <span class="number">30</span>]</span><br></pre></td></tr></table></figure><hr><h2 id="filter-过滤器"><a class="markdownIt-Anchor" href="#filter-过滤器"></a> filter 过滤器</h2><p>格式<code>filter(function or None, iterable) --&gt; filter object</code></p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Python/Python%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%9B%BE/filter.png"></center><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_not_none</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s <span class="keyword">and</span> len(s.strip()) &gt; <span class="number">0</span></span><br><span class="line">list2 = [<span class="string">' '</span>, <span class="string">''</span>, <span class="string">'hello'</span>, <span class="string">'greedy'</span>, <span class="literal">None</span>, <span class="string">'ai'</span>]</span><br><span class="line">result = filter(is_not_none, list2)</span><br><span class="line">print(list(result))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'hello'</span>, <span class="string">'greedy'</span>, <span class="string">'ai'</span>]</span><br></pre></td></tr></table></figure><hr><h2 id="reduce函数"><a class="markdownIt-Anchor" href="#reduce函数"></a> reduce函数</h2><p><strong>reduce()</strong> 函数会对参数序列中元素进行累积。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Python/Python%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%9B%BE/reduce.png"></center><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">f = <span class="keyword">lambda</span> x, y : x + y</span><br><span class="line">r = reduce(f, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">print(r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">f = <span class="keyword">lambda</span> x, y : x + y</span><br><span class="line">r = reduce(f, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], <span class="number">10</span>)  <span class="comment"># 10为初始化的值，默认为0</span></span><br><span class="line">print(r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高阶函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语言模型笔记1-简单介绍</title>
      <link href="/post/3423f471.html"/>
      <url>/post/3423f471.html</url>
      
        <content type="html"><![CDATA[<p>语言模型是用来计算一个句子的概率的模型，通俗的说，语言模型是用来判断一句话从语法上是否通顺。</p><p>如下：</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/%E4%BD%BF%E5%8F%A5%E5%AD%90%E5%8F%98%E9%80%9A%E9%A1%BA.png"></center><p>通过概率计算得出正确的句子顺序：</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/%E6%A6%82%E7%8E%87%E8%AE%A1%E7%AE%97.png"></center><hr><h1 id="n-gramn元语言模型"><a class="markdownIt-Anchor" href="#n-gramn元语言模型"></a> N-gram(n元语言模型)</h1><h2 id="unigram一元语言模型"><a class="markdownIt-Anchor" href="#unigram一元语言模型"></a> Unigram(一元语言模型)</h2><p>当n=1时，称为Unigram，一元语言模型假设词语之间是相互独立的。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/unigram.png"></center><p>缺点：不考虑单词之间的顺序。</p><h2 id="bigram二元语言模型"><a class="markdownIt-Anchor" href="#bigram二元语言模型"></a> Bigram(二元语言模型)</h2><p>n=2时，称为Bigram。当前词的出现概率与前一个词有关，考虑了两个单词之间的顺序。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Bigram.png"></center><h2 id="trigram三元语言模型"><a class="markdownIt-Anchor" href="#trigram三元语言模型"></a> Trigram(三元语言模型)</h2><p>n=3时，称为Trigram。当前词的出现概率与前两个词有关。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Trigram.png"></center><hr><h1 id="估计语言模型的概率"><a class="markdownIt-Anchor" href="#估计语言模型的概率"></a> 估计语言模型的概率</h1><h2 id="unigram模型的概率计算"><a class="markdownIt-Anchor" href="#unigram模型的概率计算"></a> Unigram模型的概率计算</h2><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/unigram%E8%AE%A1%E7%AE%97.png"></center><h2 id="bigram模型的概率计算"><a class="markdownIt-Anchor" href="#bigram模型的概率计算"></a> Bigram模型的概率计算</h2><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Bigram%E8%AE%A1%E7%AE%97.png"></center><h2 id="trigram模型的概率计算"><a class="markdownIt-Anchor" href="#trigram模型的概率计算"></a> Trigram模型的概率计算</h2><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Trigram%E8%AE%A1%E7%AE%97.png"></center><hr><h1 id="评估语言模型指标"><a class="markdownIt-Anchor" href="#评估语言模型指标"></a> 评估语言模型指标</h1><h2 id="perplexity"><a class="markdownIt-Anchor" href="#perplexity"></a> Perplexity</h2><p>计算过程：</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Perplexity.png"></center><p>Perplexity的值越小，说明模型越好。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Perplexity%E5%AE%9E%E9%AA%8C%E7%BB%93%E6%9E%9C.png"></center><p>还有其他的一些评估语言模型的方法，根据不同的应用场景，使用不同的评估方法。</p><hr><h1 id="smoothing平滑操作"><a class="markdownIt-Anchor" href="#smoothing平滑操作"></a> Smoothing(平滑操作)</h1><h2 id="add-one-smoothing"><a class="markdownIt-Anchor" href="#add-one-smoothing"></a> Add-one Smoothing</h2><p>Add-one Smoothing也称为拉普拉斯平滑(Laplace Smoothing)。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/add-one_Smoothing.png"></center><p>分子上加1是为了保证分子不为0，分母上加V(词典的大小)是为了保证概率之和为1。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/add-one_Smoothing%E8%AE%A1%E7%AE%97.png"></center><h2 id="add-k-smoothing"><a class="markdownIt-Anchor" href="#add-k-smoothing"></a> Add-K Smoothing</h2><p>Add-K Smoothing可以看作Add-one Smoothing的特例，当K=1时，Add-K Smoothing也就等于Add-one Smoothing。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/add-K_Smoothing%E8%AE%A1%E7%AE%97.png"></center><p>K如何选择呢？</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/add-K_Smoothing%E9%80%89%E6%8B%A9K.png"></center><h2 id="interpolation"><a class="markdownIt-Anchor" href="#interpolation"></a> Interpolation</h2><p>核心思想：在计算Trigram概率时同时考虑Unigram、Bigram、Trigram出现的频次。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Interpolation.png"></center><h2 id="good-turning-smoothing"><a class="markdownIt-Anchor" href="#good-turning-smoothing"></a> Good-Turning Smoothing</h2><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Good-Turning_Smoothing.png"></center><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/GTSmoothing%E8%AE%A1%E7%AE%97.png"></center><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/GTSmoothing%E7%BB%93%E6%9E%9C.png"></center><p><strong>缺点</strong>: 当计算频次为n的概率需要依赖n+1频次的概率，如果n+1次的概率为0怎么办？</p><p><strong>解决</strong>: 利用机器学习方法拟合曲线去估计n+1次的概率。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/GTSmoothing%E7%BC%BA%E7%82%B9.png"></center><hr><h1 id="利用语言模型生成句子"><a class="markdownIt-Anchor" href="#利用语言模型生成句子"></a> 利用语言模型生成句子</h1><h2 id="unigram情况下"><a class="markdownIt-Anchor" href="#unigram情况下"></a> Unigram情况下</h2><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Unigram%E7%94%9F%E6%88%90%E5%8F%A5%E5%AD%90.png"></center><p>利用Unigram模型生成的句子没有逻辑性。</p><h2 id="bigram情况下"><a class="markdownIt-Anchor" href="#bigram情况下"></a> Bigram情况下</h2><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%9B%BE%E7%89%87/Bigram%E7%94%9F%E6%88%90%E5%8F%A5%E5%AD%90.png"></center>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> N-gram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本表示及相似度计算</title>
      <link href="/post/7875b6ba.html"/>
      <url>/post/7875b6ba.html</url>
      
        <content type="html"><![CDATA[<h1 id="文本表示"><a class="markdownIt-Anchor" href="#文本表示"></a> 文本表示</h1><h2 id="word-representation"><a class="markdownIt-Anchor" href="#word-representation"></a> Word Representation</h2><p>One-hot编码表示形式。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/WordRepresentation.png"></center><h2 id="sentence-representation"><a class="markdownIt-Anchor" href="#sentence-representation"></a> Sentence Representation</h2><h3 id="boolean"><a class="markdownIt-Anchor" href="#boolean"></a> boolean</h3><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/SentenceRePresentaion%28boolean%29.png"></center><h3 id="count"><a class="markdownIt-Anchor" href="#count"></a> count</h3><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/SentenceRepresentation%28count%29.png"></center><p>在某些文本中，某个单词并不是出现的越多就越重要，也并不是出现的越少就越不重要。</p><h2 id="tf-idf-representation"><a class="markdownIt-Anchor" href="#tf-idf-representation"></a> TF-IDF Representation</h2><h3 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h3><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/TF-IDF%E4%BB%8B%E7%BB%8D.png"></center><h3 id="计算"><a class="markdownIt-Anchor" href="#计算"></a> 计算</h3><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/TFIDF%E8%AE%A1%E7%AE%97.png"></center><hr><h1 id="文本相似度计算"><a class="markdownIt-Anchor" href="#文本相似度计算"></a> 文本相似度计算</h1><h2 id="句子之间的相关性基于one-hot-representation"><a class="markdownIt-Anchor" href="#句子之间的相关性基于one-hot-representation"></a> 句子之间的相关性(基于One-hot Representation)</h2><h3 id="欧式距离"><a class="markdownIt-Anchor" href="#欧式距离"></a> 欧式距离</h3><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/%E6%AC%A7%E5%BC%8F%E8%B7%9D%E7%A6%BB%E8%AE%A1%E7%AE%97.png"></center><p><strong>优点</strong>：简单，应用广泛。<br><strong>缺点</strong>：没有考虑分量之间的相关性，体现单一特征的多个分量会干扰结果。</p><h3 id="余弦相似度"><a class="markdownIt-Anchor" href="#余弦相似度"></a> 余弦相似度</h3><p>余弦相似度用向量空间中两个向量夹角的余弦值作为衡量两个个体间差异的大小。相比距离度量，余弦相似度更加注重两个向量在方向上的差异，而非距离或长度上。</p><p><strong>优点</strong>：不受坐标轴旋转，放大缩小的影响。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/CosineSimilarity.png"></center><h2 id="单词之间的相关性基于distributed-representation"><a class="markdownIt-Anchor" href="#单词之间的相关性基于distributed-representation"></a> 单词之间的相关性(基于Distributed Representation)</h2><h3 id="one-hot-representation的局限性"><a class="markdownIt-Anchor" href="#one-hot-representation的局限性"></a> One-hot Representation的局限性</h3><p>One-hot编码无法表示单词之间的相关性。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/onehot%E6%97%A0%E6%B3%95%E8%A1%A8%E7%A4%BA%E8%AF%8D%E5%85%B3%E7%B3%BB.png"></center><p>One-hot编码的两个缺点：</p><ol><li>不能表示单词之间的相关性</li><li>sparsity（稀疏性）</li></ol><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/sparsty.png"></center><h3 id="distributed-representation词向量"><a class="markdownIt-Anchor" href="#distributed-representation词向量"></a> Distributed Representation（词向量）</h3><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/DistributedRepresentation.png"></center><h4 id="计算相似度"><a class="markdownIt-Anchor" href="#计算相似度"></a> 计算相似度</h4><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/%E8%AF%8D%E5%90%91%E9%87%8F%E8%AE%A1%E7%AE%97.png"></center><h4 id="思考题100维的one-hot表示法分布式表示法最多可以表达多少个单词"><a class="markdownIt-Anchor" href="#思考题100维的one-hot表示法分布式表示法最多可以表达多少个单词"></a> 思考题：100维的One-hot表示法/分布式表示法最多可以表达多少个单词？</h4><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/100%E7%BB%B4%E8%A1%A8%E7%A4%BA%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%8D%95%E8%AF%8D.png"></center><h4 id="学习词向量"><a class="markdownIt-Anchor" href="#学习词向量"></a> 学习词向量</h4><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/%E5%AD%A6%E4%B9%A0%E8%AF%8D%E5%90%91%E9%87%8F.png"></center><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/essence%E8%AF%8D%E5%90%91%E9%87%8F.png"></center><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/%E5%8F%AF%E8%A7%86%E5%8C%961.png"></center><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/%E5%8F%AF%E8%A7%86%E5%8C%962.png"></center><h4 id="from-word-embedding-to-sentence-embedding"><a class="markdownIt-Anchor" href="#from-word-embedding-to-sentence-embedding"></a> From Word Embedding to Sentence Embedding</h4><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E8%A1%A8%E7%A4%BA%E5%8F%8A%E7%9B%B8%E4%BC%BC%E5%BA%A6%E8%AE%A1%E7%AE%97%E5%9B%BE%E7%89%87/SentenceEmbedding.png"></center> ]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> One-hot </tag>
            
            <tag> TF-IDF </tag>
            
            <tag> 词向量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奥巴马20150307-让女孩们也有学习的机会</title>
      <link href="/post/c9a5ea33.html"/>
      <url>/post/c9a5ea33.html</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=45683243&&cid=8002124&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p>Hi, everybody!</p><p>Sunday is International Women’s Day, a day to celebrate remarkable women and girls worldwide and to re-dedicate ourselves to defending the fundamental rights and dignity of all people.</p><p>That’s why, this week, Michelle and I launched a new initiative on a topic that’s close to both our hearts: girls’ education.</p><p>It’s called “Let Girls Learn”.</p><p>And its goal is to help more girls around the world go to school and stay in school.</p><p>Right now, 62 million girls who should be in school, are not. And that’s not an accident.</p><p>It’s the direct result of Barries, large and small, that stand in the way of girls who want to learn.</p><p>Maybe their families can’t afford the school fees.</p><p>Maybe the risk of being hurt or kidnapped or even killed by men who will do anything to stop girls from learning is just too great.</p><p>Or maybe they aren’t in school beacause they’re expected to get married and become mothers while they’re still teenagers – or even earlier.</p><p>In too many parts of the world, girls are still valued more for their bodies than for their minds.</p><p>That’s just plain wrong. And we all have to do more to stop it.</p><p>That’s the idea behind “Let Girls Learn”.</p><p>We’re making it clear to any country that’s our partner or that wants to be our partner that they need to get serious about increasing the number of girls in school.</p><p>Our diplomats and development experts are already hard at work.</p><p>Our Peace Corps volunteers will play a big role, too.</p><p>And we’re putting our partnerships with NGOs, businesses and foundations to work on behalf of girls everywhere.</p><p>I come to this issue as the leader of the world’s largest economy and Commander-in-Chief of the world’s most powerful military, and I’m convinced that a world in which girls are educated is a safer, more stable, more prosperous place.</p><p>When girls are educated, their future children are healthier and better nourished.</p><p>Their future wages increase which in turn strengthens their families’ security.</p><p>National growth gets a boost, too.</p><p>And places where women and girls are treated as full and equal citizens trend to be more stable and more democratic.</p><p>I also come to this issue as the father of two wonderful young women.</p><p>And I know that there are lots of girls, just like Malia and Sasha out there, girls who are funny and caring and inquisitive and strong, and have so much to offer the world.</p><p>It’s a privilege to be the parent of girls.</p><p>And we want to make sure that no girl out there is denied her chance to learn that no girl is prevented from making her unique contributions to the world.</p><p>Because every girl – every girl – deserves our respect.</p><p>And every girl deserves an education。</p><p>Thanks, and have a great weekend.</p><p>大家好！</p><p>周日是国际妇女节，纪念世界上杰出妇女和女孩的日子，也是让我们自己重新下决心为所有人们基本权利和尊严继续奋斗的日子。</p><p>也因此，本周，米歇尔和我发起了一项新的倡议，这是一个与我们所有人密切关注的主题：女孩们的教育。</p><p>这项倡议叫做“让女孩们也有学习的机会”。</p><p>它的目标是帮助世界上更多的女孩去上学，并能一直接受教育。</p><p>当下，6200万教育适龄女孩不能上学。这不是偶然的。</p><p>这是大大小小的壁垒导致的直接结果，它们挡住了女孩们想去上学的路。</p><p>可能他们的家庭负担不起学校的费用。</p><p>可能仅仅是被那些将竭尽全力阻止女孩上学的人们伤害，或者被绑架，甚至是被杀害的风险太高了。</p><p>或者可能她们不去上学因为她们仍是青少年或者更小时就被迫结婚并成为母亲。</p><p>在世界上太多的地方，女孩们的更多价值仍然体现在她们的身体上，而不是她们的想法。</p><p>这是太简单的错误了。我们所有人必须做更多的事情来结束这种局面。</p><p>这正是“让女孩们也有学习机会”的想法。</p><p>我们正在让我们任何的伙伴国家，或者想成为我们伙伴的国家清楚，他们需要重视增加接受教育女孩的数量。</p><p>我们的外交官和发展专家已经准备好去努力地工作。</p><p>我们的和平组织志愿者也将发挥重大的作用。</p><p>我们正在代表着各地的女孩们与非政府组织、商家和基金会一起合作。</p><p>我提出这一事宜，作为世界上最大经济体的领导人，作为世界上最强军事力量的总司令，我深信女孩们接受教育的世界才是更安全、更稳定、更繁荣的。</p><p>当女孩们能接受教育，她们未来的孩子会更健康，会得到更好的营养。她们将来的工资会提高</p><p>，从而将增强她们家人的安全。</p><p>国家经济也会获得突飞猛进的增长。</p><p>妇女和女孩们作为完整、平等公民对待的地方将变得更加稳定和更加民主。</p><p>我提出这一事宜也是作为两个优秀年轻女孩的父亲。</p><p>我知道有众多像玛丽亚和萨莎这样的女孩，她们有趣、有同情心、好奇、坚强，能够给这个世界带来太多的东西。</p><p>成为女孩们的父亲是荣幸的。</p><p>我们想确保任何女孩都有机会去学习，任何女孩都不会被阻止为世界做出她独有的贡献。</p><p>因为每一个女孩–每一个女孩–都应该得到我们的尊重。</p><p>每一个女孩都应该获得教育的机会。</p><p>谢谢大家，周末快乐。</p>]]></content>
      
      
      <categories>
          
          <category> EnglishLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> presentation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jieba分词的简单使用</title>
      <link href="/post/20300dce.html"/>
      <url>/post/20300dce.html</url>
      
        <content type="html"><![CDATA[<p>Jieba是最常用的中文分词工具</p><a id="more"></a><h1 id="jieba的三种分词模式"><a class="markdownIt-Anchor" href="#jieba的三种分词模式"></a> jieba的三种分词模式</h1><p>Jieba中文分词包含三种模式，下面来介绍一下这三种模式的不同：</p><ol><li>精确模式：试图将句子最精确地切开，适合文本分析；</li><li>全模式：把句子中所有的可以成词的词语都扫描出来, 速度非常快，但是不能解决歧义问题；</li><li>搜索引擎模式：在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。</li></ol><p>同时结巴分词支持繁体分词和自定义字典方法。</p><h2 id="全模式"><a class="markdownIt-Anchor" href="#全模式"></a> 全模式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">seg_list = jieba.cut(<span class="string">"我来到南京东南大学"</span>, cut_all=<span class="literal">True</span>)</span><br><span class="line">print(<span class="string">"Full Mode: "</span> + <span class="string">"/ "</span>.join(seg_list))  <span class="comment"># 全模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">Full Mode: 我/ 来到/ 南京/ 京东/ 东南/ 东南大学/ 南大/ 大学</span><br></pre></td></tr></table></figure><h2 id="精确模式"><a class="markdownIt-Anchor" href="#精确模式"></a> 精确模式</h2><p>精确模式也是默认模式</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seg_list = jieba.cut(<span class="string">"我来到南京东南大学"</span>, cut_all=<span class="literal">False</span>)</span><br><span class="line">print(<span class="string">"Default Mode: "</span> + <span class="string">"/ "</span>.join(seg_list))  <span class="comment"># 精确模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">Default Mode: 我/ 来到/ 南京/ 东南大学</span><br></pre></td></tr></table></figure><h2 id="搜索引擎模式"><a class="markdownIt-Anchor" href="#搜索引擎模式"></a> 搜索引擎模式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seg_list = jieba.cut_for_search(<span class="string">"我来到南京东南大学"</span>)  <span class="comment"># 搜索引擎模式</span></span><br><span class="line">print(<span class="string">", "</span>.join(seg_list))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">Search Mode: 我/ 来到/ 南京/ 东南/ 南大/ 大学/ 东南大学</span><br></pre></td></tr></table></figure><hr><h1 id="jiebacut与jiebalcut的区别"><a class="markdownIt-Anchor" href="#jiebacut与jiebalcut的区别"></a> jieba.cut()与jieba.lcut()的区别</h1><p>jieba.cut生成的是一个生成器，generator，也就是可以通过for循环来取里面的每一个词。<br>jieba.lcut 直接生成的就是一个list。</p><h2 id="jiebacut"><a class="markdownIt-Anchor" href="#jiebacut"></a> jieba.cut()</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut(<span class="string">"贪心学院专注于人工智能教育"</span>, cut_all=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> seg_list:</span><br><span class="line">    print(i)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">贪心学院</span><br><span class="line">专注</span><br><span class="line">于</span><br><span class="line">人工智能</span><br><span class="line">教育</span><br></pre></td></tr></table></figure><h2 id="jiebalcut"><a class="markdownIt-Anchor" href="#jiebalcut"></a> jieba.lcut()</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">seg_list = jieba.lcut(<span class="string">"贪心学院专注于人工智能教育"</span>, cut_all=<span class="literal">False</span>)</span><br><span class="line">print(seg_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">[<span class="string">'贪心学院'</span>, <span class="string">'专注'</span>, <span class="string">'于'</span>, <span class="string">'人工智能'</span>, <span class="string">'教育'</span>]</span><br></pre></td></tr></table></figure><hr><h1 id="添加自己定义词语jiebaadd_word"><a class="markdownIt-Anchor" href="#添加自己定义词语jiebaadd_word"></a> 添加自己定义词语(jieba.add_word)</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut(<span class="string">"贪心学院专注于人工智能教育"</span>, cut_all=<span class="literal">False</span>)</span><br><span class="line">print(<span class="string">"Default Mode: "</span> + <span class="string">"/"</span>.join(seg_list))</span><br><span class="line"></span><br><span class="line">jieba.add_word(<span class="string">"贪心学院"</span>)</span><br><span class="line">seg_list = jieba.cut(<span class="string">"贪心学院专注于人工智能教育"</span>, cut_all=<span class="literal">False</span>)</span><br><span class="line">print(<span class="string">"Default Mode: "</span> + <span class="string">"/"</span>.join(seg_list))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">Default Mode: 贪心/学院/专注/于/人工智能/教育</span><br><span class="line">Default Mode: 贪心学院/专注/于/人工智能/教育</span><br></pre></td></tr></table></figure><hr><h1 id="添加停用词"><a class="markdownIt-Anchor" href="#添加停用词"></a> 添加停用词</h1><p>出现频率特别高的和频率特别低的词对于文本分析帮助不大，一般在预处理阶段会过滤掉。<br>在英文里，经典的停用词为 “The”, “an”…</p><p>方法一：自己建立一个停用词词典</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stop_words = [<span class="string">'the'</span>, <span class="string">'an'</span>, <span class="string">'is'</span>, <span class="string">'there'</span>]</span><br><span class="line"><span class="comment"># 在使用时：假设 word_list 包含了文本里的单词</span></span><br><span class="line">word_list = [<span class="string">'we'</span>, <span class="string">'are'</span>, <span class="string">'the'</span>, <span class="string">'students'</span>]</span><br><span class="line">filtered_words = [word <span class="keyword">for</span> word <span class="keyword">in</span> word_list <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> stop_words]</span><br><span class="line">print(filtered_words)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">[<span class="string">'we'</span>, <span class="string">'are'</span>, <span class="string">'students'</span>]</span><br></pre></td></tr></table></figure><p>方法二: 直接利用别人已经构建好的停用词库</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.corpus <span class="keyword">import</span> stopwords</span><br><span class="line">cachedStopWords = stopwords.words(<span class="string">'english'</span>)</span><br><span class="line">print(cachedStopWords)</span><br><span class="line"></span><br><span class="line">word_list = [<span class="string">'we'</span>, <span class="string">'are'</span>, <span class="string">'the'</span>, <span class="string">'students'</span>]</span><br><span class="line">filtered_words = [word <span class="keyword">for</span> word <span class="keyword">in</span> word_list <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> cachedStopWords]</span><br><span class="line">print(filtered_words)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Output</span></span><br><span class="line">[<span class="string">'i'</span>, <span class="string">'me'</span>, <span class="string">'my'</span>, <span class="string">'myself'</span>, <span class="string">'we'</span>, <span class="string">'our'</span>, <span class="string">'ours'</span>, <span class="string">'ourselves'</span>, <span class="string">'you'</span>, <span class="string">'your'</span>, <span class="string">'yours'</span>, <span class="string">'yourself'</span>, <span class="string">'yourselves'</span>, <span class="string">'he'</span>, <span class="string">'him'</span>, <span class="string">'his'</span>, <span class="string">'himself'</span>, <span class="string">'she'</span>, <span class="string">'her'</span>, <span class="string">'hers'</span>, <span class="string">'herself'</span>, <span class="string">'it'</span>, <span class="string">'its'</span>, <span class="string">'itself'</span>, <span class="string">'they'</span>, <span class="string">'them'</span>, <span class="string">'their'</span>, <span class="string">'theirs'</span>, <span class="string">'themselves'</span>, <span class="string">'what'</span>, <span class="string">'which'</span>, <span class="string">'who'</span>, <span class="string">'whom'</span>, <span class="string">'this'</span>, <span class="string">'that'</span>, <span class="string">'these'</span>, <span class="string">'those'</span>, <span class="string">'am'</span>, <span class="string">'is'</span>, <span class="string">'are'</span>, <span class="string">'was'</span>, <span class="string">'were'</span>, <span class="string">'be'</span>, <span class="string">'been'</span>, <span class="string">'being'</span>, <span class="string">'have'</span>, <span class="string">'has'</span>, <span class="string">'had'</span>, <span class="string">'having'</span>, <span class="string">'do'</span>, <span class="string">'does'</span>, <span class="string">'did'</span>, <span class="string">'doing'</span>, <span class="string">'a'</span>, <span class="string">'an'</span>, <span class="string">'the'</span>, <span class="string">'and'</span>, <span class="string">'but'</span>, <span class="string">'if'</span>, <span class="string">'or'</span>, <span class="string">'because'</span>, <span class="string">'as'</span>, <span class="string">'until'</span>, <span class="string">'while'</span>, <span class="string">'of'</span>, <span class="string">'at'</span>, <span class="string">'by'</span>, <span class="string">'for'</span>, <span class="string">'with'</span>, <span class="string">'about'</span>, <span class="string">'against'</span>, <span class="string">'between'</span>, <span class="string">'into'</span>, <span class="string">'through'</span>, <span class="string">'during'</span>, <span class="string">'before'</span>, <span class="string">'after'</span>, <span class="string">'above'</span>, <span class="string">'below'</span>, <span class="string">'to'</span>, <span class="string">'from'</span>, <span class="string">'up'</span>, <span class="string">'down'</span>, <span class="string">'in'</span>, <span class="string">'out'</span>, <span class="string">'on'</span>, <span class="string">'off'</span>, <span class="string">'over'</span>, <span class="string">'under'</span>, <span class="string">'again'</span>, <span class="string">'further'</span>, <span class="string">'then'</span>, <span class="string">'once'</span>, <span class="string">'here'</span>, <span class="string">'there'</span>, <span class="string">'when'</span>, <span class="string">'where'</span>, <span class="string">'why'</span>, <span class="string">'how'</span>, <span class="string">'all'</span>, <span class="string">'any'</span>, <span class="string">'both'</span>, <span class="string">'each'</span>, <span class="string">'few'</span>, <span class="string">'more'</span>, <span class="string">'most'</span>, <span class="string">'other'</span>, <span class="string">'some'</span>, <span class="string">'such'</span>, <span class="string">'no'</span>, <span class="string">'nor'</span>, <span class="string">'not'</span>, <span class="string">'only'</span>, <span class="string">'own'</span>, <span class="string">'same'</span>, <span class="string">'so'</span>, <span class="string">'than'</span>, <span class="string">'too'</span>, <span class="string">'very'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'can'</span>, <span class="string">'will'</span>, <span class="string">'just'</span>, <span class="string">'don'</span>, <span class="string">'should'</span>, <span class="string">'now'</span>, <span class="string">'d'</span>, <span class="string">'ll'</span>, <span class="string">'m'</span>, <span class="string">'o'</span>, <span class="string">'re'</span>, <span class="string">'ve'</span>, <span class="string">'y'</span>, <span class="string">'ain'</span>, <span class="string">'aren'</span>, <span class="string">'couldn'</span>, <span class="string">'didn'</span>, <span class="string">'doesn'</span>, <span class="string">'hadn'</span>, <span class="string">'hasn'</span>, <span class="string">'haven'</span>, <span class="string">'isn'</span>, <span class="string">'ma'</span>, <span class="string">'mightn'</span>, <span class="string">'mustn'</span>, <span class="string">'needn'</span>, <span class="string">'shan'</span>, <span class="string">'shouldn'</span>, <span class="string">'wasn'</span>, <span class="string">'weren'</span>, <span class="string">'won'</span>, <span class="string">'wouldn'</span>]</span><br><span class="line">[<span class="string">'students'</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jieba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取猫眼电影排行信息</title>
      <link href="/post/67646979.html"/>
      <url>/post/67646979.html</url>
      
        <content type="html"><![CDATA[<h1 id="爬取昨日国内热映的影片20190911"><a class="markdownIt-Anchor" href="#爬取昨日国内热映的影片20190911"></a> 爬取昨日国内热映的影片（2019.09.11）</h1><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1%E6%8E%92%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%9B%BE%E7%89%87/2019.09.11%E6%98%A8%E6%97%A5%E6%8E%92%E8%A1%8C%E6%A6%9C.png"></center><p>附代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取首页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36'</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则提取</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="comment"># 分析网页源码结构进行正则提取 电影排名、电影图片、电影名称、主演、发布时间、评分</span></span><br><span class="line">    pattern = re.compile(<span class="string">'&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;.*?data-src="(.*?)".*?name"&gt;&lt;a'</span></span><br><span class="line">                         + <span class="string">'.*?&gt;(.*?)&lt;/a&gt;.*?star"&gt;(.*?)&lt;/p&gt;.*?releasetime"&gt;(.*?)&lt;/p&gt;'</span></span><br><span class="line">                         + <span class="string">'.*?integer"&gt;(.*?)&lt;/i&gt;.*?fraction"&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;'</span>, re.S)</span><br><span class="line">    items = re.findall(pattern, html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        yield在函数中的功能类似于return，不同的是yield每次返回结果之后函数并没有退出，</span></span><br><span class="line"><span class="string">        而是每次遇到yield关键字后返回相应结果，并保留函数当前的运行状态，等待下一次的调用。</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="comment"># 生成字典</span></span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">'index'</span>: item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">'image'</span>: item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">'title'</span>: item[<span class="number">2</span>],</span><br><span class="line">            <span class="string">'actor'</span>: item[<span class="number">3</span>].strip()[<span class="number">3</span>:],</span><br><span class="line">            <span class="string">'time'</span>: item[<span class="number">4</span>].strip()[<span class="number">5</span>:],</span><br><span class="line">            <span class="string">'score'</span>: item[<span class="number">5</span>] + item[<span class="number">6</span>]    <span class="comment"># 评分获取的时候整数部分和小数部分是分开的比如9.5分，9和5</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="comment"># 'a'代表只能写，且追加</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'result.txt'</span>, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># JSON库的dumps()方法实现字典的序列化</span></span><br><span class="line">        <span class="comment"># json.dumps()用于将字典形式的数据转化为字符串</span></span><br><span class="line">        f.write(json.dumps(content, ensure_ascii=<span class="literal">False</span>) + <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">'http://maoyan.com/board/'</span></span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        print(item)</span><br><span class="line">        write_to_file(item)</span><br></pre></td></tr></table></figure><p>结果：</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1%E6%8E%92%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%9B%BE%E7%89%87/result.png"></center><hr><h1 id="爬取猫眼电影库中的经典影片前100名"><a class="markdownIt-Anchor" href="#爬取猫眼电影库中的经典影片前100名"></a> 爬取猫眼电影库中的经典影片前100名</h1><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1%E6%8E%92%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%9B%BE%E7%89%87/%E7%BB%8F%E5%85%B8%E5%BD%B1%E7%89%87%E6%8E%92%E8%A1%8C.png"></center><p>它的下面明显有10页，每一页显示10个电影，点击下一页，然后观察网页链接。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1%E6%8E%92%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%9B%BE%E7%89%87/offset.png"></center><p>offset代表偏移量值，如果偏移量为n，则显示的电影序号就是 n+1 到 n+10，每页显示10个。</p><p>附代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取首页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36'</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则提取</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="comment"># 分析网页源码结构进行正则提取 电影排名、电影图片、电影名称、主演、发布时间、评分</span></span><br><span class="line">    pattern = re.compile(<span class="string">'&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;.*?data-src="(.*?)".*?name"&gt;&lt;a'</span></span><br><span class="line">                         + <span class="string">'.*?&gt;(.*?)&lt;/a&gt;.*?star"&gt;(.*?)&lt;/p&gt;.*?releasetime"&gt;(.*?)&lt;/p&gt;'</span></span><br><span class="line">                         + <span class="string">'.*?integer"&gt;(.*?)&lt;/i&gt;.*?fraction"&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;'</span>, re.S)</span><br><span class="line">    items = re.findall(pattern, html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        yield在函数中的功能类似于return，不同的是yield每次返回结果之后函数并没有退出，</span></span><br><span class="line"><span class="string">        而是每次遇到yield关键字后返回相应结果，并保留函数当前的运行状态，等待下一次的调用。</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="comment"># 生成字典</span></span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">'index'</span>: item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">'image'</span>: item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">'title'</span>: item[<span class="number">2</span>],</span><br><span class="line">            <span class="string">'actor'</span>: item[<span class="number">3</span>].strip()[<span class="number">3</span>:],</span><br><span class="line">            <span class="string">'time'</span>: item[<span class="number">4</span>].strip()[<span class="number">5</span>:],</span><br><span class="line">            <span class="string">'score'</span>: item[<span class="number">5</span>] + item[<span class="number">6</span>]    <span class="comment"># 评分获取的时候整数部分和小数部分是分开的比如9.5分，9和5</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="comment"># 'a'代表只能写，且追加</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'result1.txt'</span>, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># JSON库的dumps()方法实现字典的序列化</span></span><br><span class="line">        <span class="comment"># json.dumps()用于将字典形式的数据转化为字符串</span></span><br><span class="line">        f.write(json.dumps(content, ensure_ascii=<span class="literal">False</span>) + <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整合代码</span></span><br><span class="line"><span class="comment"># 实现main()方法来调用前面实现的方法，将单页的电影结果写入到文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(offset)</span>:</span></span><br><span class="line">    <span class="comment"># offset代表偏移量值，如果偏移量为n，则显示的电影序号就是 n+1 到 n+10，每页显示10个。</span></span><br><span class="line">    url = <span class="string">'http://maoyan.com/board/4?offset='</span> + str(offset)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        print(item)</span><br><span class="line">        write_to_file(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 分页爬取</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        main(offset=i * <span class="number">10</span>)</span><br><span class="line">        <span class="comment"># 停一秒再继续爬</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1%E6%8E%92%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%9B%BE%E7%89%87/result1.png"></center><h1 id="正则提取说明"><a class="markdownIt-Anchor" href="#正则提取说明"></a> 正则提取说明</h1><p>我们获取了影片的排行、图片链接、影片名称、主演、上映日期、评分这些信息。具体是观察网页源代码然后进行正则匹配。</p><center>  <img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E7%88%AC%E8%99%AB/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1%E6%8E%92%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%9B%BE%E7%89%87/%E7%BD%91%E9%A1%B5%E8%AF%B7%E6%B1%82%E6%BA%90%E4%BB%A3%E7%A0%81.png"></center><p>可以观察到，一部电影信息对应的源代码是一个dd节点，然后具体要提取哪些信息就可以使用正则表达式去提取了。</p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ol><li>《Python3网络爬虫开发实战》, 催庆才</li></ol>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 猫眼电影排行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-正则表达式简单使用介绍</title>
      <link href="/post/fc635c56.html"/>
      <url>/post/fc635c56.html</url>
      
        <content type="html"><![CDATA[<p>正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。</p><a id="more"></a><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9B%BE%E7%89%87/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.jpg"></center><hr><h2 id="匹配字符串"><a class="markdownIt-Anchor" href="#匹配字符串"></a> 匹配字符串</h2><p>先看看如何判断正则表达式是否匹配:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">re.match(<span class="string">r'^\d&#123;3&#125;\-\d&#123;3,8&#125;$'</span>, <span class="string">'010-12345'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># return</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">9</span>), match=<span class="string">'010-12345'</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(re.match(<span class="string">r'^\d&#123;3&#125;\-\d&#123;3,8&#125;$'</span>, <span class="string">'010 12345'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line"><span class="literal">None</span></span><br></pre></td></tr></table></figure><p>match()方法判断是否匹配，如果匹配成功，返回一个Match对象，否则返回None。常见的判断方法就是：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test = <span class="string">'用户输入的字符串'</span></span><br><span class="line"><span class="keyword">if</span> re.match(<span class="string">r'正则表达式'</span>, test):</span><br><span class="line">    print(<span class="string">'ok'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'failed'</span>)</span><br></pre></td></tr></table></figure><p>如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test = <span class="string">'010-12345'</span></span><br><span class="line"><span class="keyword">if</span> re.match(<span class="string">r'^\d&#123;3&#125;\-\d&#123;3,8&#125;$'</span>, test):</span><br><span class="line">    print(<span class="string">'ok'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'failed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">ok</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test = <span class="string">'010 12345'</span></span><br><span class="line"><span class="keyword">if</span> re.match(<span class="string">r'^\d&#123;3&#125;\-\d&#123;3,8&#125;$'</span>, test):</span><br><span class="line">    print(<span class="string">'ok'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'failed'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">failed</span><br></pre></td></tr></table></figure><hr><h2 id="切分字符串"><a class="markdownIt-Anchor" href="#切分字符串"></a> 切分字符串</h2><p>用正则表达式切分字符串比用固定的字符更灵活，请看正常的切分代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'a b   c'</span>.split(<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure><p>无法识别连续的空格，用正则表达式试试：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># \s可以匹配一个空格（也包括Tab等空白符），\s+表示至少有一个空格</span></span><br><span class="line">re.split(<span class="string">r'\s+'</span>, <span class="string">'a b   c'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure><p>无论多少个空格都可以正常分割。加入 , 试试：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">re.split(<span class="string">r'[\s\,]+'</span>, <span class="string">'a,b, c   d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><p>再加入 ;</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">re.split(<span class="string">r'[\s\,\;]+'</span>, <span class="string">'a,b;; c   d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return </span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br></pre></td></tr></table></figure><hr><h2 id="分组"><a class="markdownIt-Anchor" href="#分组"></a> 分组</h2><p>除了简单地判断是否匹配之外，正则表达式还有提取子串的强大功能。用()表示的就是要提取的分组（Group）。</p><p>比如：^(\d{3})-(\d{3,8})$ 分别定义了两个组，可以直接从匹配的字符串中提取出区号和本地号码:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m = re.match(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>, <span class="string">'010-12345'</span>)</span><br><span class="line">m</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">9</span>), match=<span class="string">'010-12345'</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m.group(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line"><span class="string">'010-12345'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line"><span class="string">'010'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m.group(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line"><span class="string">'12345'</span></span><br></pre></td></tr></table></figure><p>如果正则表达式中定义了组，就可以在Match对象上用group()方法提取出子串来。注意到group(0)永远是原始字符串，group(1)、group(2)……表示第1、2、……个子串。提取子串非常有用。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t = <span class="string">'19:05:30'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 0[0-9]|1[0-9]|2[0-3]|[0-9] 匹配 00~09 或 10~19 或 20~23 或 0~9 这样的字符串</span></span><br><span class="line"></span><br><span class="line">m = re.match(<span class="string">r'^(0[0-9]|1[0-9]|2[0-3]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])$'</span>, t)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m.group(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return </span></span><br><span class="line"><span class="string">'19:05:30'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">m = re.match(<span class="string">r'^(\d&#123;2&#125;)\:(\d&#123;2&#125;)\:(\d&#123;2&#125;)$'</span>, t)</span><br><span class="line">m.group(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line"><span class="string">'19:05:30'</span></span><br></pre></td></tr></table></figure><hr><h2 id="贪婪匹配"><a class="markdownIt-Anchor" href="#贪婪匹配"></a> 贪婪匹配</h2><p>最后需要特别指出的是，正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。举例如下，匹配出数字后面的 0 ：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">re.match(<span class="string">r'^(\d+)(0*)$'</span>, <span class="string">'102300'</span>).groups()</span><br><span class="line"></span><br><span class="line"><span class="comment"># return </span></span><br><span class="line">(<span class="string">'102300'</span>, <span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>由于 \d+ 采用贪婪匹配，直接把后面的 0 全部匹配了，结果 0* 只能匹配空字符串了。</p><p>必须让 \d+ 采用非贪婪匹配（也就是尽可能少匹配），才能把后面的 0 匹配出来，加个 ? 就可以让 \d+ 采用非贪婪匹配：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">re.match(<span class="string">r'^(\d+?)(0*)$'</span>, <span class="string">'102300'</span>).groups()</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line">(<span class="string">'1023'</span>, <span class="string">'00'</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h2><p>当我们在Python中使用正则表达式时，re模块内部会干两件事情：</p><ol><li>编译正则表达式，如果正则表达式的字符串本身不合法，会报错；</li><li>用编译后的正则表达式去匹配字符串。</li></ol><p>如果一个正则表达式要重复使用几千次，出于效率的考虑，我们可以预编译该正则表达式，接下来重复使用时就不需要编译这个步骤了，直接匹配：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">re_telephone = re.compile(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">re_telephone.match(<span class="string">'010-12345'</span>).groups()</span><br><span class="line"></span><br><span class="line"><span class="comment"># return </span></span><br><span class="line">(<span class="string">'010'</span>, <span class="string">'12345'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">re_telephone.match(<span class="string">'010-8086'</span>).groups()</span><br><span class="line"></span><br><span class="line"><span class="comment"># return</span></span><br><span class="line">(<span class="string">'010'</span>, <span class="string">'8086'</span>)</span><br></pre></td></tr></table></figure><p>编译后生成Regular Expression对象，由于该对象自己包含了正则表达式，所以调用对应的方法时不用给出正则字符串。</p><hr><h2 id="match中的修饰符"><a class="markdownIt-Anchor" href="#match中的修饰符"></a> match()中的修饰符</h2><table><thead><tr><th>修饰符</th><th>描述</th></tr></thead><tbody><tr><td>re.I</td><td>使匹配对大小写不敏感</td></tr><tr><td>re.L</td><td>做本地化识别（locale-aware）匹配</td></tr><tr><td>re.M</td><td>多行匹配，影响^和$</td></tr><tr><td>re.S</td><td>使.匹配包括换行在内的所有字符</td></tr><tr><td>re.U</td><td>根据Unicode字符集解析字符。这个标志影响\w、\W、\b和\B</td></tr><tr><td>re.X</td><td>该标志通过给予你更灵活的格式以便你将正则表达式写得更容易理解</td></tr></tbody></table><p>在网页匹配中，较为常用的有 re.S 和 re.I。</p><hr><h2 id="正则表达式相关的链接"><a class="markdownIt-Anchor" href="#正则表达式相关的链接"></a> 正则表达式相关的链接</h2><h3 id="验证工具"><a class="markdownIt-Anchor" href="#验证工具"></a> 验证工具</h3><p><a href="http://regexr.com/" target="_blank" rel="noopener">http://regexr.com/</a></p><h3 id="练习和挑战"><a class="markdownIt-Anchor" href="#练习和挑战"></a> 练习和挑战</h3><p><a href="https://alf.nu/RegexGolf" target="_blank" rel="noopener">https://alf.nu/RegexGolf</a></p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><ol><li><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017639890281664" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1016959663602400/1017639890281664</a></p></li><li><p><a href="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9B%BE%E7%89%87/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html" target="_blank" rel="noopener">https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9B%BE%E7%89%87/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLP相关术语解释</title>
      <link href="/post/d2eda678.html"/>
      <url>/post/d2eda678.html</url>
      
        <content type="html"><![CDATA[<h1 id="nlp相关术语解释"><a class="markdownIt-Anchor" href="#nlp相关术语解释"></a> NLP相关术语解释</h1><h2 id="精确率-召回率-准确率"><a class="markdownIt-Anchor" href="#精确率-召回率-准确率"></a> 精确率、召回率、准确率</h2><p>精确率（Precision）：测量预测为 yes 的样本中，多少被正确分类；</p><p>召回率（Recall）：实际为 yes 的样本中，多少被成功预测；</p><p>准确率（Accuracy）：测量语料库中所有文本中正确预测了多少文本。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/NLP%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD%E8%A7%A3%E9%87%8A%E5%9B%BE%E7%89%87/%E9%A2%84%E6%B5%8B%E7%B1%BB%E5%88%AB.png" width="600" height="200"></center><p>精确率（Precision）计算公式为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Precision = \frac{TP}{TP+FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>召回率（Recall）计算公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mi>P</mi></mfrac></mrow><annotation encoding="application/x-tex">Recall = \frac{TP}{TP+FN}=\frac{TP}{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>准确率（Accuracy）计算公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>c</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Accuracy=\frac{TP+TN}{TP+TN+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">c</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="细粒度情感分析"><a class="markdownIt-Anchor" href="#细粒度情感分析"></a> 细粒度情感分析</h2><p>有时您可能想，更加准确地了解意见的极性水平，因此你可以考虑，以下类别而不仅仅是谈论积极，中立或消极的意见：</p><ul><li>非常积极</li><li>积极</li><li>中性</li><li>消极</li><li>非常消极</li></ul><p>这通常被称为细粒度情感分析。 例如，这可以在评论中映射到 5 星评级，例如：非常正= 5 星和非常负= 1 星。</p><h2 id="词袋模型bow"><a class="markdownIt-Anchor" href="#词袋模型bow"></a> 词袋模型（BOW）</h2><p>词袋模型能够把一个句子转化为向量表示，是比较简单直白的一种方法，它不考虑句子中单词的顺序，只考虑词表（vocabulary）中单词在这个句子中的出现次数。</p><p>缺点：</p><ul><li>词汇：词汇表需要精心设计，最重要的是为了管理大小，这会影响文档表示的稀疏性。</li><li>稀疏性：由于计算原因（空间和时间复杂性）以及信息原因，稀疏表示更难以建模，其中挑战是模型在如此大的代表空间中利用如此少的信息。</li><li>含义：丢弃单词顺序忽略了上下文，而<strong>忽略了文档中单词的含义</strong>（语义）。上下文和意义可以为模型提供很多东西，如果建模可以说出不同排列的相同单词之间的区别（“this is interesting”  vs “is this interesting”），同义词(“old bike” vs “used bike”)， 以及更多例子。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line">corpus = [</span><br><span class="line">    <span class="string">"John likes to watch movies, Mary likes movies too"</span>,</span><br><span class="line">    <span class="string">"John also likes to watch football games"</span>,</span><br><span class="line">]</span><br><span class="line">vectorizer = CountVectorizer()</span><br><span class="line">X = vectorizer.fit_transform(corpus)</span><br><span class="line">print(vectorizer.get_feature_names())</span><br><span class="line">print(X.toarray())</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'also'</span>, <span class="string">'football'</span>, <span class="string">'games'</span>, <span class="string">'john'</span>, <span class="string">'likes'</span>, <span class="string">'mary'</span>, <span class="string">'movies'</span>, <span class="string">'to'</span>, <span class="string">'too'</span>, <span class="string">'watch'</span>]</span><br><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure><h2 id="tf-idf"><a class="markdownIt-Anchor" href="#tf-idf"></a> TF-IDF</h2><p>TF: Term Frequency，衡量一个term在文档中出现的有多频繁。</p><p>TF(t) = (t出现在文档中的次数) / (文档中的term总数)</p><p>IDF: Inverse Document Frequency，衡量一个term有多重要。</p><p>有些词出现的很多，但是明显不是很有用。比如：‘is’, ‘the’, 'and’之类的。</p><p>为了平衡，我们把罕见的词的重要性（weight）提高，把常见词的重要性降低。</p><p>IDF(t) = In(文档总数 / 含有t的文档总数)</p><p><strong>TF-IDF = TF * IDF</strong></p><p>举例：</p><p>一个文档中有100个单词，其中单词baby出现了3次。</p><p>那么，TF(baby) = (3 / 100) = 0.03</p><p>如果我们有10M的文档，baby出现在其中的1000个文档中。</p><p>则，IDF(baby) = In(10000000 / 1000)</p><p>所以，TF-IDF(baby) = TF(baby) * IDF(baby) = 0.03 * 4 = 0.12</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfVectorizer</span><br><span class="line">corpus = [</span><br><span class="line">    <span class="string">'This is the first document.'</span>,</span><br><span class="line">    <span class="string">'This document is the second document.'</span>,</span><br><span class="line">    <span class="string">'And this is the third one.'</span>,</span><br><span class="line">    <span class="string">'Is this the first document?'</span>,</span><br><span class="line">]</span><br><span class="line">vectorizer = TfidfVectorizer()</span><br><span class="line">X = vectorizer.fit_transform(corpus)</span><br><span class="line"></span><br><span class="line">print(vectorizer.get_feature_names())</span><br><span class="line">print(X)</span><br><span class="line">print(X.toarray())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">[<span class="string">'and'</span>, <span class="string">'document'</span>, <span class="string">'first'</span>, <span class="string">'is'</span>, <span class="string">'one'</span>, <span class="string">'second'</span>, <span class="string">'the'</span>, <span class="string">'third'</span>, <span class="string">'this'</span>]</span><br><span class="line">  (<span class="number">0</span>, <span class="number">1</span>)<span class="number">0.46979138557992045</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">2</span>)<span class="number">0.5802858236844359</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">6</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">3</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">0</span>, <span class="number">8</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">5</span>)<span class="number">0.5386476208856763</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">1</span>)<span class="number">0.6876235979836938</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">6</span>)<span class="number">0.281088674033753</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">3</span>)<span class="number">0.281088674033753</span></span><br><span class="line">  (<span class="number">1</span>, <span class="number">8</span>)<span class="number">0.281088674033753</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">4</span>)<span class="number">0.511848512707169</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">7</span>)<span class="number">0.511848512707169</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">0</span>)<span class="number">0.511848512707169</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">6</span>)<span class="number">0.267103787642168</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">3</span>)<span class="number">0.267103787642168</span></span><br><span class="line">  (<span class="number">2</span>, <span class="number">8</span>)<span class="number">0.267103787642168</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">1</span>)<span class="number">0.46979138557992045</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">2</span>)<span class="number">0.5802858236844359</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">6</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">3</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">  (<span class="number">3</span>, <span class="number">8</span>)<span class="number">0.38408524091481483</span></span><br><span class="line">[[<span class="number">0.</span>         <span class="number">0.46979139</span> <span class="number">0.58028582</span> <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.</span></span><br><span class="line">  <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.38408524</span>]</span><br><span class="line"> [<span class="number">0.</span>         <span class="number">0.6876236</span>  <span class="number">0.</span>         <span class="number">0.28108867</span> <span class="number">0.</span>         <span class="number">0.53864762</span></span><br><span class="line">  <span class="number">0.28108867</span> <span class="number">0.</span>         <span class="number">0.28108867</span>]</span><br><span class="line"> [<span class="number">0.51184851</span> <span class="number">0.</span>         <span class="number">0.</span>         <span class="number">0.26710379</span> <span class="number">0.51184851</span> <span class="number">0.</span></span><br><span class="line">  <span class="number">0.26710379</span> <span class="number">0.51184851</span> <span class="number">0.26710379</span>]</span><br><span class="line"> [<span class="number">0.</span>         <span class="number">0.46979139</span> <span class="number">0.58028582</span> <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.</span></span><br><span class="line">  <span class="number">0.38408524</span> <span class="number">0.</span>         <span class="number">0.38408524</span>]]</span><br></pre></td></tr></table></figure><h2 id="词性标注"><a class="markdownIt-Anchor" href="#词性标注"></a> 词性标注</h2><p>词性标注（Label）：基于机器学习的方法里，往往需要对词的词性进行标注。标注的目的是，表征词的一种隐状态，隐藏状态构成的转移就构成了状态转移序列。例如：苏宁易购/n 投资/v 了/u 国际米兰/n。其中，n代表名词，v代表动词，n,v都是标注。以此类推。</p><h2 id="句法分析待完善"><a class="markdownIt-Anchor" href="#句法分析待完善"></a> 句法分析（待完善）</h2><p>句法分析（syntactic parsing）是自然语言处理中的关键技术之一，其基本任务是确定句子的句法结构（syntactic structure）或句子中词汇之间的依存关系。</p><h2 id="语义分析待完善"><a class="markdownIt-Anchor" href="#语义分析待完善"></a> 语义分析（待完善）</h2><h2 id="篇章分析待完善"><a class="markdownIt-Anchor" href="#篇章分析待完善"></a> 篇章分析（待完善）</h2><h2 id="n-gram"><a class="markdownIt-Anchor" href="#n-gram"></a> n-gram</h2><p>unigram,bigram,trigram,是自然语言处理（NLP）中的问题。父词条：n-gram.</p><p>unigram: 单个word</p><p>bigram: 双word</p><p>trigram:3 word</p><p>比如：</p><p>西安交通大学：</p><p>unigram 形式为：西/安/交/通/大/学</p><p>bigram形式为： 西安/安交/交通/通大/大学</p><p>trigram形式为：西安交/安交通/交通大/通大学</p><h2 id="序列标注待完善"><a class="markdownIt-Anchor" href="#序列标注待完善"></a> 序列标注（待完善）</h2><h2 id="语言覆盖现象待完善"><a class="markdownIt-Anchor" href="#语言覆盖现象待完善"></a> 语言覆盖现象（待完善）</h2><h2 id="领域适应性待完善"><a class="markdownIt-Anchor" href="#领域适应性待完善"></a> 领域适应性（待完善）</h2><h2 id="crf条件随机场"><a class="markdownIt-Anchor" href="#crf条件随机场"></a> CRF(条件随机场)</h2>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 术语解释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本情感分析综述[哈工大2010]笔记</title>
      <link href="/post/f6969e4.html"/>
      <url>/post/f6969e4.html</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1><p>      文本情感分析又称意见挖掘，简单而言，是对带有情感色彩的主观性文本进行分析、处理、归纳和推理的过程。<strong>按照处理文本的粒度不同，情感分析可分为词语级、短语级、句子级、篇章级以及多篇章级</strong>等几个研究层次；<strong>按照处理文本的类别不同，可分为基于新闻评论的情感分析和基于产品评论的情感分析</strong>。文本情感分析可归纳为 3 项主要任务，即<strong>情感信息抽取、情感信息分类以及情感信息的检索与归纳</strong>。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/NLP/%E6%96%87%E6%9C%AC%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90%E7%BB%BC%E8%BF%B0%E5%9B%BE%E7%89%87/fg1.png" width="800" height="450"></center><p>        情感信息抽取是情感分析的最底层的任务，它旨在抽取情感评论文本中有意义的信息单元。<strong>其目的在于将无结构化的情感文本转化为计算机容易识别和处理的结构化文本</strong>，继而供情感分析上层的研究和应用服务。</p><hr><h1 id="情感信息抽取"><a class="markdownIt-Anchor" href="#情感信息抽取"></a> 情感信息抽取</h1><p>        有价值的情感信息单元主要有评价词语(如优秀、好用)、评价对象(如 GPS、屏幕分辨率)、观点持有者(如国家政府、台湾当局)等。某些组合搭配对于情感分析的上层任务如情感信息分类以及情感信息的检索与归纳有更直接的帮助，如评价搭配(评价对象和评价词语的搭配，如屏幕分辨率-高)、评价短语(程度副词及其修饰的评价词语的搭配，如不怎么好)等。</p><h2 id="评价词语"><a class="markdownIt-Anchor" href="#评价词语"></a> 评价词语</h2><p>        评价词语又称极性词、情感词,特指带有情感倾向性的词语。评价词语的抽取和判别往往是一个一体化的工作，主要分为<strong>基于语料库</strong>和<strong>基于词典</strong>两种方法。</p><p>        基于语料库的评价词语抽取和判别主要是利用大语料库的统计特性，观察一些现象来挖掘语料库中的评价词语并判断极性。基于语料库的方法最大的优点在于简单易行，缺点则在于可利用的评论语料库有限，同时评价词语在大语料库中的分布等现象并不容易归纳。</p><p>        基于词典的评价词语抽取及判别方法主要是使用词典中的词语之间的词义联系来挖掘评价词语。基于词典的方法的优点在于获取的评价词语的规模非常可观，但是由于很多词存在一词多义现象，构建的情感词典往往含有较多的歧义词。</p><h2 id="评价对象"><a class="markdownIt-Anchor" href="#评价对象"></a> 评价对象</h2><p>        评价对象是指某段评论中所讨论的主题,具体表现为评论文本中评价词语所修饰的对象。他们大多将评价对象限定在名词或名词短语(候选评价对象)的范畴内，进而对它们进行进一步的识别。</p><p>        一部分学者使用<strong>基于规则/模板的方法</strong>抽取评价对象。规则的制定通常要基于一系列的语言分析与预处理过程，如词性标注、命名实体识别、句法分析等。相应地，制定的规则也包括词序列规则、词性规则以及句法规则等形式。此类方法最主要的优点在于针对性强，可以直接针对待解决的问题或特定的语言现象制定规则/模板；而其缺点则在于规则/模板的可扩展性差，人工编写的工作量大，成本较高。</p><p>        有学者从另一个角度诠释了评价对象的抽取，他们<strong>将评价对象看作产品属性的一种表现形式</strong>。这种方法取得了较好的实验效果，超过了基于规则/模板的方法，但难点在于领域指示词的获取。</p><p>        有学者采用多粒度的话题模型挖掘产品领域情感文本中的评价对象，并将相似的评价对象进行聚类。这种方法理论上能够提高评价对象抽取的召回率，但遗憾的是，还没有实验将这种方法与上述传统的基于名词短语的方法进行对比。</p><h2 id="观点持有者"><a class="markdownIt-Anchor" href="#观点持有者"></a> 观点持有者</h2><p>        评论中的观点持有者一般是由命名实体(如人名或机构名)组成，因此可以借助于命名实体识别技术来获取观点持有者。此外，还有学者曾尝试借助语义角色标注来完成观点持有者的抽取。但是这些方法较为依赖自然语言处理的基础技术，有较低的语言覆盖现象和较差的领域适应性。还有人将观点持有者的抽取定义为分类任务,这种方法的关键在于分类器和特征的选取。</p><p>        以上的方法将观点持有者的抽取当作一个独立的任务。通过观察许多研究者发现，观点持有者一般是与观点同时出现的，所以可以将观点和观点持有者的识别作为一个任务同时解决。</p><h2 id="组合评价单元"><a class="markdownIt-Anchor" href="#组合评价单元"></a> 组合评价单元</h2><p>        在某些情况下，单独的评价词语存在一定的歧义性，如评 价词语“高”在以下 3 个句子中的使用:</p><ul><li><p>Sen 1:凯越的油耗真高.</p></li><li><p>Sen 2:捷达的性价比相当高.</p></li><li><p>Sen 3:这辆车有 1 米多高.</p></li></ul><p>        评价词语“高”在修饰不同的评价对象时表现出不同的极性。因此，仅考虑单独的 评价词语在情感分析中的应用是远远不够的。研究者们发现，有些包含评价词语的“组合评价单元”(如组合“油耗-高”、“相当-高”)对于处理情感分析的上层任务更有帮助。</p><h3 id="主观表达式"><a class="markdownIt-Anchor" href="#主观表达式"></a> 主观表达式</h3><p>        主观表达式(subjective clues)是指表示情感文本单元主观性的词语或词组。评价词语是主观表达式的一部分。此外，某些词语的组合(如 village idiot 或 get out of here)也能很明显地标识文本的主观性，虽然它们中的任何一个词语单独可能都并非评价词语。如何获取这些有意义的词组是主观表达式抽取的重点。</p><h3 id="评价短语"><a class="markdownIt-Anchor" href="#评价短语"></a> 评价短语</h3><p>        评价短语表现为一组连续出现的词组，但不同于主观表达式，该词组往往是由程度副词和评价词语组合而成，如“very good”等。因此，这种组合评价单元不仅顾及了主观表达式的情感极性，还考察了其修饰成分。这些修饰成分或加强或减弱或置反了主观表达式的情感极性，使得评价短语成为一种情感色彩丰富的组合评价单元。</p><h3 id="评价搭配"><a class="markdownIt-Anchor" href="#评价搭配"></a> 评价搭配</h3><p>        评价搭配是指评价词语及其所修饰的评价对象二者的搭配，表现为二元对〈评价对象,评价词语〉，如情感句 “凯越的油耗很高”中的“油耗-高”。情感句中出现的某些“主观表达式”和“评价短语”并非真正地表现出情感极性。如情感句 “车跑 得好快啊” 中的词语“好”并不存在情感极性，需要过滤掉。此外，还有一些“主观表达式”和“评价短语”存在一定的歧义，其极性需要根据上下文而确定。“评价搭配”则可以很好地解决上述两点问题。</p><hr><h1 id="情感信息分类"><a class="markdownIt-Anchor" href="#情感信息分类"></a> 情感信息分类</h1><h2 id="主客观信息"><a class="markdownIt-Anchor" href="#主客观信息"></a> 主客观信息</h2><p>        由于情感文本中夹杂着少量的客观信息而影响了情感分析的质量，因此将情感文本中的主观信息和客观信息进行分离变得非常必要。在很多情况下,情感文本的主客观识别比主观文本的情感分类更有难度。</p><p>        一部分学者通过考察文本内部是否含有情感知识来完成主客观信息分类。然而我们发现，许多客观句中也可能会包含评价词语。为了在更大程度上消除歧义性，很多学者挖掘并使用情感文本中的组合评价单元。此外,还有学者构建情感模板识别情感文本的 主客观性。以上这些基于情感知识的主客观分类方法的工作重心在于情感文本中情感知识的挖掘以及各种情感知识融合的方法研究。</p><p>        还有一部分学者将情感文本单元的主客观分类定义为一种二元分类任务，即对任意给定的情感文本单元，由分类器协助判断其主客观性。这种方法的关键在于分类器和分类特征的选取。基于特征分类的方法目前还是主客观信息分类的主流方法。这种方法定义明确，其根本问题在于特征的选取。因此,尝试使用更深层、更复杂的分类特征也许是这类方法的突破方向之所在。</p><h2 id="主观信息情感"><a class="markdownIt-Anchor" href="#主观信息情感"></a> 主观信息情感</h2><p>        主观信息情感任务按不同的文本粒度可分为词语级、短语级、句子级和篇章级等。一般而言，研究者将主观本文的极性分为褒义和贬义两类(thumbs up? thumbs down?)。</p><p>        两种研究思路：基于情感知识的方法以及基于特征分类的方法。相似地，前者主要是依靠一些已有的情感词典或领域词典以及主观文本中带有情感极性的组合评价单元进行计算，来获取主观文本的极性。后者主要是使用机器学习的方法，选取大量有意义的特征来完成分类任务。</p><hr><h1 id="情感信息的检索与归纳"><a class="markdownIt-Anchor" href="#情感信息的检索与归纳"></a> 情感信息的检索与归纳</h1><p>        情感分析技术与用户的交互主要集中于情感信息检索和情感信息归纳两项任务上。其中，情感信息检索旨在为用户检索出主题相关，且包含情感信息的文档；情感信息归纳则针对大量主题相关的情感文档，自动分析和归纳整理出情感分析结果提供给用户参考，以节省用户翻阅相关文档的时间。</p><h2 id="情感信息检索"><a class="markdownIt-Anchor" href="#情感信息检索"></a> 情感信息检索</h2><p>        情感信息检索要求检索回的文档同时满足两项准则: (1) 主题相关；(2) 具有情感倾向性。</p><ol><li>结合传统的信息检索模型进行主题相关的文档检索.即给定某一主题,检索出所有与其相关的文档。</li><li>相关文档的主客观识别。即针对某一主题的所有相关文档，判别它们的主客观性，并获取带有情感的主观性文档。</li><li>主题相关的情感(主观性)文档排序。</li></ol><h2 id="情感信息归纳"><a class="markdownIt-Anchor" href="#情感信息归纳"></a> 情感信息归纳</h2><p>        情感信息的归纳往往以情感文摘的形式存在。传统的基于事实性新闻语料的文摘旨在提取重要的事实性信息，并去除冗余信息。相比而言，情感文摘的处理对象为某一产品或某一事件的大量用户评论，因此这种文摘融入了更多的情感信息。它主要侧重于提取具有明显情感倾向性的主观信息，是对某一产品或某一事件的评论信息的归纳和汇总。针对产品类评论信息，情感文摘共有两种呈现方式：一种是基于产品属性的情感文摘，另一种是基于情感标签的情感文摘。</p><hr><h1 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h1><ol><li><a href="http://www.jos.org.cn/jos/ch/reader/view_abstract.aspx?file_no=3832" target="_blank" rel="noopener">http://www.jos.org.cn/jos/ch/reader/view_abstract.aspx?file_no=3832</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/post/e8eb0481.html"/>
      <url>/post/e8eb0481.html</url>
      
        <content type="html"><![CDATA[<p>二分查找</p><a id="more"></a><h1 id="二分查找两种写法"><a class="markdownIt-Anchor" href="#二分查找两种写法"></a> 二分查找两种写法</h1><h2 id="非递归"><a class="markdownIt-Anchor" href="#非递归"></a> 非递归</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(nums, target)</span>:</span></span><br><span class="line">    n = len(nums)</span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = n - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> nums[mid] &gt; target:</span><br><span class="line">            high = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search_2</span><span class="params">(nums, target)</span>:</span></span><br><span class="line">    n = len(nums)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> == n:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    mid = n // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> nums[mid] == target:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">elif</span> nums[mid] &gt; target:</span><br><span class="line">        <span class="keyword">return</span> binary_search_2(nums[:mid], target)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> binary_search_2(nums[mid + <span class="number">1</span>:], target)</span><br></pre></td></tr></table></figure><hr><h1 id="二分查找解题模版"><a class="markdownIt-Anchor" href="#二分查找解题模版"></a> 二分查找解题模版</h1><h2 id="模版1"><a class="markdownIt-Anchor" href="#模版1"></a> 模版1</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Python 伪代码1：当分支逻辑不能排除右边界时，选左中位数，如果选右中位数，会出现死循环</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search_1</span><span class="params">(left, right)</span>:</span></span><br><span class="line">  <span class="comment"># 如果选择右中位数，当区间只剩下 2 个元素的时候</span></span><br><span class="line">  <span class="comment"># 一旦进入 right = mid 这个分支，右边界不会收缩，代码进入死循环</span></span><br><span class="line">  <span class="keyword">while</span> left &lt; right:</span><br><span class="line">    <span class="comment"># 选择左中位数</span></span><br><span class="line">    <span class="comment"># mid = left + (right - left) // 2</span></span><br><span class="line">    <span class="comment"># left 和 right 一般都表示索引，使用 + 且无符号右移，在 left 和 right 都很大的时候，虽然整形溢出，但结果正确</span></span><br><span class="line">    mid = (left + right) &gt;&gt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> check(mid):</span><br><span class="line">      <span class="comment"># 先写可以排除中位数的逻辑</span></span><br><span class="line">      left = mid + <span class="number">1</span></span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">      <span class="comment"># 右边界不能排除，这半边逻辑不用记</span></span><br><span class="line">      <span class="comment"># 逻辑是：上一个分支的另一个边界收缩，但不排除中位数</span></span><br><span class="line">      right = mid</span><br><span class="line">    <span class="comment"># 退出循环的时候，视情况，是否需要单独判断 left（或者 right）这个索引表示的元素是否符合题意</span></span><br></pre></td></tr></table></figure><h2 id="模版2"><a class="markdownIt-Anchor" href="#模版2"></a> 模版2</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Python 伪代码2：当分支逻辑不能排除左边界时，选右中位数，如果选左中位数，会出现死循环</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search_1</span><span class="params">(left, right)</span>:</span></span><br><span class="line">  <span class="comment"># 如果选择左中位数，当区间只剩下 2 个元素的时候</span></span><br><span class="line">  <span class="comment"># 一旦进入 left = mid 这个分支，左边界不会收缩，代码进入死循环</span></span><br><span class="line">  <span class="keyword">while</span> left &lt; right:</span><br><span class="line">    <span class="comment"># 选择右中位数</span></span><br><span class="line">    <span class="comment"># mid = left + (right - left + 1) // 2</span></span><br><span class="line">    <span class="comment"># left 和 right 一般都表示索引，使用 + 且无符号右移，在 left 和 right 都很大的时候，虽然整形溢出，但结果正确</span></span><br><span class="line">    mid = (left + right) &gt;&gt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> check(mid):</span><br><span class="line">      <span class="comment"># 先写可以排除中位数的逻辑</span></span><br><span class="line">      right = mid - <span class="number">1</span></span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">      <span class="comment"># 左边界不能排除，这半边逻辑不用记</span></span><br><span class="line">      <span class="comment"># 逻辑是：上一个分支的另一个边界收缩，但不排除中位数</span></span><br><span class="line">      right = mid</span><br><span class="line">    <span class="comment"># 退出循环的时候，视情况，是否需要单独判断 left（或者 right）这个索引表示的元素是否符合题意</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习之优化算法</title>
      <link href="/post/e03223e1.html"/>
      <url>/post/e03223e1.html</url>
      
        <content type="html"><![CDATA[<p>关于优化算法SGD、Momentum、AdaGrad、RMSProp、Adam的介绍</p><a id="more"></a><h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1><p>        神经网络的学习的目的是找到使损失函数的值尽可能小的参数。这是寻找最优参数的问题，解决这个问题的过程称为最优化（optimization）。遗憾的是，神经网络的最优化问题非常难。这是因为参数空间非常复杂，无法轻易找到最优解（无法使用那种通过解数学式一下子就求得最小值的方法）。而且，在 深度神经网络中，参数的数量非常庞大，导致最优化问题更加复杂。</p><p>        为了找到最优参数，我们将参数的梯度（导数）作为了线索。 使用参数的梯度，沿梯度方向更新参数，并重复这个步骤多次，从而逐渐靠近最优参数，这个过程称为<strong>随机梯度下降法</strong>（stochastic gradient descent），简称<strong>SGD</strong>。SGD是一个简单的方法，不过比起胡乱地搜索参数空间，也算是“聪明”的方法。</p><p>        打个比方: 有一个性情古怪的探险家。他在广袤的干旱地带旅行，坚持寻找幽 深的山谷。他的目标是要到达最深的谷底（他称之为“至深之地”）。这 也是他旅行的目的。并且，他给自己制定了两个严格的“规定”：一个 是不看地图；另一个是把眼睛蒙上。因此，他并不知道最深的谷底在这个广袤的大地的何处，而且什么也看不见。在这么严苛的条件下，这位 探险家如何前往“至深之地”呢？他要如何迈步，才能迅速找到“至深 之地”呢？</p><p>      寻找最优参数时，我们所处的状况和这位探险家一样，是一个漆黑的世界。我们必须在没有地图、不能睁眼的情况下，在广袤、复杂的地形中寻找 “至深之地”。大家可以想象这是一个多么难的问题。</p><p>      在这么困难的状况下，地面的坡度显得尤为重要。探险家虽然看不到周 围的情况，但是能够知道当前所在位置的坡度（通过脚底感受地面的倾斜状况）。 于是，朝着当前所在位置的坡度最大的方向前进，就是SGD的策略。勇敢的探险家心里可能想着只要重复这一策略，总有一天可以到达“至深之地”。</p><hr><h1 id="sgd"><a class="markdownIt-Anchor" href="#sgd"></a> SGD</h1><p>        用数学式将SGD可以写成如下形式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mo>←</mo><mi>W</mi><mo>−</mo><mi>η</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">W \leftarrow W-\eta \frac{\partial L}{\partial W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>为需要更新的权重参数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>为损失函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>关于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>的梯度。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span></span></span></span>表示学习率，一般会取0.01或0.001这些事先决定好的值。式中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span>表示用右边的值更新左边的值。</p><p>缺点:</p><p>（1）SGD 因为更新比较频繁，会造成 cost function 有严重的震荡。</p><p>        SGD呈 “之”字形移动。这是一个相当低效的路径。也就是说， SGD的缺点是， 如果函数的形状非均向（anisotropic），比如呈延伸状，搜索的路径就会非常低效。因此，我们需要比单纯朝梯度方向前进的SGD更聪 明的方法。 SGD低效的根本原因是， 梯度的方向并没有指向最小值的方向。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%9B%BE%E7%89%87/SGD%E4%B9%8B%E5%AD%97.png" width="600" height="450"></center><p>（2）容易收敛到局部最优，并且容易被困在鞍点。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%9B%BE%E7%89%87/%E9%9E%8D%E7%82%B9.gif" width="600" height="450"></center><hr><h1 id="momentum"><a class="markdownIt-Anchor" href="#momentum"></a> Momentum</h1><p>        Momentum算法借用了物理中的动量概念，它模拟的是物体运动时的惯性，即更新的时候在一定程度上保留之前更新的方向，同时利用当前batch的梯度微调最终的更新方向。这样一来，可以在一定程度上增加稳定性，从而学习地更快，并且还有一定摆脱局部最优的能力：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mo>←</mo><mi>α</mi><mi>v</mi><mo>−</mo><mi>η</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace width="2em"></mspace><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>W</mi><mo>←</mo><mi>W</mi><mo>+</mo><mi>v</mi><mspace width="2em"></mspace><mspace width="2em"></mspace><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W \leftarrow \alpha v-\eta \frac{\partial L}{\partial W} \qquad (1)\\W \leftarrow W+v \qquad\qquad (2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><p>和前面的SGD一样， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>表示要更新的权重参数， 表示损失函数关于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>的梯度，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">η</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span></span></span></span>表示学习率。 这里新出现了一个变量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>，对应物理上的速度。 式（1）表示了物体在梯度方向上受力，在这个力的作用下，物体的速度增加这一物理法则。Momentum方法给人的感觉就像是小球在地面上滚动。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%9B%BE%E7%89%87/%E5%B0%8F%E7%90%83%E6%BB%9A%E5%8A%A8.png" width="800" height="130"></center><p>        式（1）中有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">αv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>这一项。在物体不受任何力时，该项承担使物体逐渐减速的任务（α设定为0.9之类的值），对应物理上的地面摩擦或空气阻力。</p><p>        和SGD相比， “之”字形的“程度”减轻了。这是因为虽然x轴方向上受到的力非常小，但是一直在同一方向上受力，所以朝同一个方向会有一定的加速。反过来，虽然y轴方向上受到的力很大，但是因为交互地受到正方向和反方向的力，它们会互相抵消，所以y轴方向上的速度不稳定。因此，和SGD时的情形相比， 可以更快地朝x轴方向靠近，减弱“之”字形的变动程度。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%9B%BE%E7%89%87/Momentum.png" width="600" height="450"></center><hr><h1 id="adagrad"><a class="markdownIt-Anchor" href="#adagrad"></a> AdaGrad</h1><p>        在神经网络的学习中，学习率（数学式中记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">η</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span></span></span></span>）的值很重要。学习率过小， 会导致学习花费过多时间；反过来，学习率过大，则会导致学习发散而不能 正确进行。</p><p>        在关于学习率的有效技巧中，有一种被称为学习率衰减（learning rate decay） 的方法，即随着学习的进行，使学习率逐渐减小。实际上，一开始“多” 学，然后逐渐“少”学的方法，在神经网络的学习中经常被使用。</p><p>        逐渐减小学习率的想法，相当于将“全体”参数的学习率值一起降低。 而AdaGrad进一步发展了这个想法，针对“一个一个”的参数，赋予其“定 制”的值。</p><p>        AdaGrad会为参数的每个元素适当地调整学习率， 与此同时进行学习 （AdaGrad的Ada来自英文单词Adaptive，即“适当的”的意思）。下面，让我们用数学式表示AdaGrad的更新方法。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>←</mo><mi>h</mi><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo>⨀</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mspace width="2em"></mspace><mi>W</mi><mo>←</mo><mi>W</mi><mo>−</mo><mi>η</mi><mfrac><mn>1</mn><mrow><msqrt><mi>h</mi></msqrt><mo>+</mo><mi>δ</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace width="2em"></mspace></mrow><annotation encoding="application/x-tex">h \leftarrow h+\frac{\partial L}{\partial W} \bigodot \frac{\partial L}{\partial W}  \\\qquad W \leftarrow W-\eta \frac{1}{\sqrt h + \delta } \frac{\partial L}{\partial W} \qquad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.30144em;vertical-align:-0.93em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.17778em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="padding-left:0.833em;">h</span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:2em;"></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>为梯度累积变量，它保存了以前的所有梯度值的平方和，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>的初始值为0。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⨀</mo></mrow><annotation encoding="application/x-tex">\bigodot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span></span></span></span>表示对应矩阵元素的乘法，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span></span></span></span>表示学习率，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>为很小的一个数值，是为了防止分母为0。然后，在更新参数时，通过乘以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><msqrt><mi>h</mi></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.383108em;vertical-align:-0.538em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5335085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.937845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault mtight" style="padding-left:0.833em;">h</span></span><span style="top:-2.8978450000000002em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.102155em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，就可以调整学习的尺度。这意味着， 参数的元素中变动较大（被大幅更新）的元素的学习率将变小。也就是说， 可以按参数的元素进行学习率衰减，使变动大的参数的学习率逐渐减小。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%9B%BE%E7%89%87/Adagrad.png" width="600" height="450"></center><p>        由图可知，函数的取值高效地向着最小值移动。由于y轴方 向上的梯度较大，因此刚开始变动较大，但是后面会根据这个较大的变动按 比例进行调整，减小更新的步伐。因此，y轴方向上的更新程度被减弱，“之” 字形的变动程度有所衰减。</p><hr><h1 id="rmsprop"><a class="markdownIt-Anchor" href="#rmsprop"></a> RMSProp</h1><p>        AdaGrad会记录过去所有梯度的平方和。因此，学习越深入，更新 的幅度就越小。实际上，如果无止境地学习，更新量就会变为 0， 完全不再更新。为了改善这个问题，可以使用 RMSProp 方法。RMSProp方法并不是将过去所有的梯度一视同仁地相加，而是逐渐 地遗忘过去的梯度，在做加法运算时将新梯度的信息更多地反映出来。 这种操作从专业上讲，称为“指数移动平均”，呈指数函数式地减小过去的梯度的尺度。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>←</mo><mi>p</mi><mo>⋅</mo><mi>h</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo>⨀</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mspace width="2em"></mspace><mi>W</mi><mo>←</mo><mi>W</mi><mo>−</mo><mi>η</mi><mfrac><mn>1</mn><msqrt><mrow><mi>h</mi><mo>+</mo><mi>δ</mi></mrow></msqrt></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace width="2em"></mspace></mrow><annotation encoding="application/x-tex">h \leftarrow p\cdot h + (1-p) \frac{\partial L}{\partial W} \bigodot \frac{\partial L}{\partial W}  \\\qquad W \leftarrow W-\eta \frac{1}{\sqrt {h + \delta} } \frac{\partial L}{\partial W} \qquad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.63889em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.30144em;vertical-align:-0.93em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.219445em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.890555em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-2.850555em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14944500000000005em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:2em;"></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>一般可取0.9，其它参数和AdaGrad一致。</p><hr><h1 id="adam"><a class="markdownIt-Anchor" href="#adam"></a> Adam</h1><p>        Momentum参照小球在碗中滚动的物理规则进行移动，AdaGrad为参数的每个元素适当地调整更新步伐。如果将这两个方法融合在一起会怎么样呢？这就是Adam方法的基本思路。直观地讲，Adam就是融合了Momentum和AdaGrad的方法。通过组合前面两个方法的优点，有望实现参数空间的高效搜索。此外，进行超参数的“偏置校正”也是Adam的特征。Adam结合了Adagrad善于处理稀疏梯度和RMSprop善于处理非平稳目标的优点。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><mi>μ</mi><mo>⋅</mo><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace linebreak="newline"></mspace><msub><mi>n</mi><mi>t</mi></msub><mo>=</mo><mi>ν</mi><mo>⋅</mo><msub><mi>n</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>ν</mi><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo>⨀</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mspace linebreak="newline"></mspace><msub><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mfrac><msub><mi>m</mi><mi>t</mi></msub><mrow><mn>1</mn><mo>−</mo><msup><mi>μ</mi><mi>t</mi></msup></mrow></mfrac><mspace linebreak="newline"></mspace><msub><mover accent="true"><mi>n</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mfrac><msub><mi>n</mi><mi>t</mi></msub><mrow><mn>1</mn><mo>−</mo><msup><mi>ν</mi><mi>t</mi></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mi>W</mi><mo>←</mo><mi>W</mi><mo>−</mo><mi>η</mi><mfrac><msub><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>t</mi></msub><mrow><msqrt><msub><mover accent="true"><mi>n</mi><mo>^</mo></mover><mi>t</mi></msub></msqrt><mo>+</mo><mi>δ</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">m_t = \mu \cdot m_{t-1} + (1-\mu) \frac{\partial L}{\partial W}  \\n_t = \nu \cdot n_{t-1} + (1-\nu) \frac{\partial L}{\partial W} \bigodot \frac{\partial L}{\partial W}   \\\hat m_t = \frac {m_t}{1-\mu ^t}  \\\hat n_t = \frac {n_t}{1-\nu ^t}  \\W \leftarrow W-\eta \frac{\hat m_t}{\sqrt {\hat n_t} + \delta } \frac{\partial L}{\partial W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.63889em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.06366em;">ν</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.06366em;">ν</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">m</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.988em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7195559999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">n</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.87689em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.06366em;">ν</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7195559999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.30144em;vertical-align:-0.93em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.25278em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">n</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">m</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">n_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别是对梯度的一阶据估计和二阶矩估计，可以看作是对期望<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">∣</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo stretchy="false">∣</mo></mrow><annotation encoding="application/x-tex">E \lvert {\frac{\partial L}{\partial W}} \rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">∣</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose">∣</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">∣</mo><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac><mo>⨀</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>W</mi></mrow></mfrac></mrow><mo stretchy="false">∣</mo></mrow><annotation encoding="application/x-tex">E \lvert {\frac{\partial L}{\partial W} \bigodot \frac{\partial L}{\partial W}} \rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">∣</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨀</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose">∣</span></span></span></span>的估计；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat m_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">m</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>n</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat n_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">n</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">n_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的校正，这样可以近似为对期望的无偏估计。可以看出，直接对梯度的矩估计对内存没有额外的要求，而且可以根据梯度进行动态调整，而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><msub><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>t</mi></msub><mrow><msqrt><msub><mover accent="true"><mi>n</mi><mo>^</mo></mover><mi>t</mi></msub></msqrt><mo>+</mo><mi>δ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">-\frac{\hat m_t}{\sqrt {\hat n_t} + \delta }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.434208em;vertical-align:-0.5379999999999999em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962079999999999em;"><span style="top:-2.5835585em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.866345em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathdefault mtight">n</span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.826345em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.173655em;"><span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathdefault mtight">m</span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>对学习率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span></span></span></span>形成了一个动态约束，而且有明确的范围。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%9B%BE%E7%89%87/Adam.png" width="600" height="450"></center><p>        如图，基于 Adam 的更新过程就像小球在碗中滚动一样。虽然 Momentun 也有类似的移动，但是相比之下， Adam的小球左右摇晃的程度有所减轻。这得益于学习的更新程度被适当地调整了。</p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ol><li><a href="https://book.douban.com/subject/30270959/" target="_blank" rel="noopener">《深度学习入门:基于Python的理论与实现》</a></li><li><a href="https://zhuanlan.zhihu.com/p/22252270" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22252270</a></li><li><a href="https://blog.csdn.net/u010089444/article/details/76725843" target="_blank" rel="noopener">https://blog.csdn.net/u010089444/article/details/76725843</a></li><li><a href="https://www.cnblogs.com/guoyaohua/p/8542554.html" target="_blank" rel="noopener">https://www.cnblogs.com/guoyaohua/p/8542554.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SGD </tag>
            
            <tag> Momentum </tag>
            
            <tag> AdaGrad </tag>
            
            <tag> RMSprop </tag>
            
            <tag> Adam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之最大熵模型[手写笔记]</title>
      <link href="/post/4fe40ba2.html"/>
      <url>/post/4fe40ba2.html</url>
      
        <content type="html"><![CDATA[<div class="row">    <embed src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-pdf/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9C%80%E5%A4%A7%E7%86%B5%E4%B8%8EEM%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最大熵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之SVM[手写笔记]</title>
      <link href="/post/36165d58.html"/>
      <url>/post/36165d58.html</url>
      
        <content type="html"><![CDATA[<div class="row">    <embed src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-pdf/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SVM%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E7%AC%94%E8%AE%B0.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/post/9daba997.html"/>
      <url>/post/9daba997.html</url>
      
        <content type="html"><![CDATA[<p>这是一个test</p><a id="more"></a><h2 id="dj-drop-a-beat"><a class="markdownIt-Anchor" href="#dj-drop-a-beat"></a> DJ drop a beat</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=27927186&auto=0&height=66"></iframe><!-- more --><h2 id="数学公式"><a class="markdownIt-Anchor" href="#数学公式"></a> 数学公式</h2><p><em><strong>我是一个test</strong></em></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mn>2</mn><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">tanh(x)=2sigmoid(2x)-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mstyle scriptlevel="0" displaystyle="true"><msup><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo fence="true">]</mo></mrow><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mstyle></mfrac></mrow><annotation encoding="application/x-tex">P = \frac{\sum_{i=1}^n (x_i- x)(y_i- y)}{\displaystyle \left[\sum_{i=1}^n (x_i-x)^2\sum_{i=1}^n (y_i-y)^2\right]^{1/2} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.689571em;vertical-align:-3.195569em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494002em;"><span style="top:-2.11em;"><span class="pstrut" style="height:4.0279em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.0279em;"><span style="top:-4.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.257899999999999em;"><span class="pstrut" style="height:4.0279em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.71761em;"><span class="pstrut" style="height:4.0279em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.195569em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A|B)=\frac{P(B|A)P(A)}{P(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这个可以显示</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>a</mi><mrow><mi>j</mi><msub><mi>S</mi><mi>j</mi></msub></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_{j1},a_{j2},...a_{jS_j}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0973199999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833100000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><p>显示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>a</mi><mrow><mi>j</mi><msub><mi>S</mi><mi>j</mi></msub></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_{j1},a_{j2},...a_{jS_j}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0973199999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833100000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><h2 id="代码测试"><a class="markdownIt-Anchor" href="#代码测试"></a> 代码测试</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代码测试</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        data = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            <span class="keyword">if</span> target - value <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">return</span> data[target-value] , index</span><br><span class="line">            data[value] = index</span><br></pre></td></tr></table></figure><h2 id="加载b站视频"><a class="markdownIt-Anchor" href="#加载b站视频"></a> 加载b站视频</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=45118498&cid=79010570&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><h2 id="加载pdf"><a class="markdownIt-Anchor" href="#加载pdf"></a> 加载pdf</h2><div class="row">    <embed src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-pdf/%E5%BC%80%E5%AD%A6%E5%89%8D%E5%BF%85%E8%AF%BB.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习之激活函数</title>
      <link href="/post/a611c275.html"/>
      <url>/post/a611c275.html</url>
      
        <content type="html"><![CDATA[<p>关于一些激活函数的介绍，如sigmoid、tanh、ReLU等。</p><a id="more"></a><h1 id="引入"><a class="markdownIt-Anchor" href="#引入"></a> 引入</h1><h2 id="什么是激活函数"><a class="markdownIt-Anchor" href="#什么是激活函数"></a> 什么是激活函数</h2><p>        所谓激活函数（Activation Function），就是在人工神经网络的神经元上运行的函数，负责将神经元的输入映射到输出端。</p><p>        神经网络中的每个神经元节点接受上一层神经元的输出值作为本神经元的输入值，并将输入值传递给下一层，输入层神经元节点会将输入属性值直接传递给下一层（隐层或输出层）。在多层神经网络中，上层节点的输出和下层节点的输入之间具有一个函数关系，这个函数称为激活函数（又称激励函数）。</p><h2 id="为什么要有激活函数"><a class="markdownIt-Anchor" href="#为什么要有激活函数"></a> 为什么要有激活函数</h2><p>        线性模型是机器学习领域中最基本也是最重要的工具 ，以逻辑回归和线性回归为例，无论通过闭解形式还是使用凸优化，它们都能高效且可靠地拟合数据 。 然而真实情况中，我们往往会遇到线性不可分问题（如 XOR 异或函数），需要非线性变换对数据的分布进行重新映射。对于深度神经网络，我们在每一层线性变换后叠加一个非线形激活函数，以避免多层网络等效单层线形函数，从而获得更强大的学习与拟合能力。</p><p>        如果不用激活函数，每一层输出都是上层输入的线性函数，无论神经网络有多少层，输出都是输入的线性组合，这种情况就是最原始的感知机（Perceptron）。我们希望我们的神经网络不仅仅可以学习和计算线性函数，而且还要比这复杂得多。同样是因为没有激活函数，我们的神经网络将无法学习和模拟其他复杂类型的数据，例如图像、视频、音频、语音等。</p><h2 id="举例说明"><a class="markdownIt-Anchor" href="#举例说明"></a> 举例说明</h2><p>        假如我们有个需求，一个二分类的问题，将下面的三角形和圆形进行正确的分类。</p><img src="/post/a611c275/1.png" title="一"><p>        如果我们用一个单层感知机，用它可以画出一条线，把平面分割开：</p><img src="/post/a611c275/2.png" title="二"> <p>        上图直线是由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w_1x_1+w_2x_2+b=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>得到，那么该感知器实现预测的功能步骤如下，就是我们已经训练好了一个感知器模型，后面对于要预测的样本点，带入模型中，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，那么就说明是直线的右侧，也就是正类（我们这里是三角形），如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，那么就说明是直线的左侧，也就是负类（我们这里是圆形），很容易能够看出，我给出的样本点根本不是线性可分的，一个感知器无论得到的直线怎么动，都不可能完全正确的将三角形与圆形区分出来，那么我们很容易想到用多个感知器来进行组合，以便获得更大的分类问题。</p><img src="/post/a611c275/3.png" title="三"> <p>        不管它怎么组合，最多就是线性方程的组合，最后得到的分类器本质还是一个线性方程，该处理不了的非线性问题，它还是处理不了。</p><img src="/post/a611c275/4.png" title="四"> <p>        在上面线性方程的组合过程中（在加入阶跃激活函数的时候），我们其实类似在做三条直线的组合，如下图：</p><img src="/post/a611c275/5.png" title="五"> <p>        在每一层叠加完之后，若我们加上一个激活函数（以sigmoid为例）：</p><img src="/post/a611c275/6.png" title="六"> <p>        通过这个激活函数映射之后，输出很明显就是一个非线性函数。同理，扩展到多个神经元组合的情况时候，表达能力就会更强，对应的组合图如下：</p><img src="/post/a611c275/7.png" title="七"> <p>        跟上面线性组合相对应的非线性组合如下：</p><img src="/post/a611c275/8.png" title="八"> <p>        最后，将这个非线性分类问题的处理结果会得到下面这个样子：</p><img src="/post/a611c275/9.png" title="九"> <hr><h1 id="常用的激活函数"><a class="markdownIt-Anchor" href="#常用的激活函数"></a> 常用的激活函数</h1><h2 id="sigmoid激活函数"><a class="markdownIt-Anchor" href="#sigmoid激活函数"></a> Sigmoid激活函数</h2><p>Sigmoid激活函数的形式为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex"> \sigma(x)=\frac{1}{1+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>对应的图像为</p><img src="/post/a611c275/10.png" title="十"> <p>其导数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma&#x27;(x)=\sigma(x)(1-\sigma(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>对应的图像为</p><img src="/post/a611c275/11.png" title="十一"> <p>Sigmoid有三大缺点：</p><ul><li><p>容易出现梯度消失</p><p>Sigmoid 激活函数的曲线如下图所示。 它将输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>映射到区间(0,1)，当z很大时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>趋近于1；当z很小时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>趋近于0。其导数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f&#x27;(z)=f(z)(1-f(z))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>在z很大或很小时都会趋近于0，造成梯度消失的现象。</p></li><li><p>函数输出并不是zero-centered</p><p>Sigmoid函数的输出值恒大于0，这会导致模型训练的收敛速度变慢。</p></li><li><p>幂运算相对来讲比较耗时</p><p>在ReLU函数中，需要做的仅仅是一个thresholding，相对于幂运算来讲会快很多。</p></li></ul><h2 id="tanh激活函数"><a class="markdownIt-Anchor" href="#tanh激活函数"></a> Tanh激活函数</h2><p>Tanh激活函数的形式为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">tanh(x)=\frac{e^x-e^{-x}}{e^x+e^{-x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.217661em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.448331em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>对应的图像为</p><img src="/post/a611c275/12.png" title="十二"> <p>其导数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">tanh(x)=1-(tanh(x))^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>对应的图像为</p><img src="/post/a611c275/13.png" title="十三"> <p>实际上，Tanh激活函数相当于Sigmoid的平移:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mn>2</mn><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">tanh(x)=2sigmoid(2x)-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>        Tanh激活函数解决了zero-centered的输出问题，然而，“梯度消失”的问题和幂运算的问题仍然存在。</p><h2 id="relu激活函数"><a class="markdownIt-Anchor" href="#relu激活函数"></a> ReLU激活函数</h2><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ReLU=max(0,x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></p><p>其图像为</p><img src="/post/a611c275/14.png" title="十四"> <p>导数图像为</p><img src="/post/a611c275/15.png" title="十五"> <p>优点：</p><ol><li>从计算的角度上，Sigmoid和Tanh激活函数均需要计算指数，复杂度高，而ReLU只需要一个阈值即可得到激活函数。</li><li>ReLU的非饱和性可以有效地解决梯度消失的问题，提供相对宽的激活边界。</li><li>ReLU的单侧抑制提供了网络的稀疏表达能力。</li></ol><p>局限性：</p><p>        ReLU 的局限性在于其训练过程中会导致神经元死亡的问题 这是由于函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ReLU= max(0,x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>导致负梯度在经过该 ReLU 单元时被置为0，且在之后也不被任何数据激活，即流经该神经元的梯度永远为0，不对任何数据产生响应。在实际训练中，如果学习率 (Learning Rate）设置较大，会导致超过一定比例的神经元不可逆死亡，进而参数梯度无法更新，整个训练过程失败。</p><p>        为解决这一问题，人们设计了ReLU的变种 Leakly ReLU ( LReLU )，其形式表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>α</mi><mtext> ⁣</mtext><mi>x</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)=max(\alpha\!x,x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:-0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><p>对应的图像为</p><img src="/post/a611c275/16.png" title="十六"> <p>        LReLU与ReLU的区别在于，当x&lt;0时，其值不为0，而是一个斜率为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> 的线形函数，一般 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> 为一个很小的正常数，这样既实现了单侧抑制，又保留了部分负梯度信息以致不完全丢失。丹另一方面， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> 值的选择增加了问题难度，需要较强的人工先验或多次重复训练以确定合适的参数值。</p><p>        基于此，参数化的 PReLU (Parametric ReLU ）应运而生。它与 LReLU 的主要区别是将负轴部分斜率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> 作为网络中一个可学习的参数，进行反向传播训练，与其他含参数网络层联合优化。而另一个 LReLU 的变种增加了“随机化”机制，具体地，在训练过程中，斜率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> 作为一个满足某种分布的随机采样，测试时再固定下来。Random ReLU ( RReLU ）在一定程度上能起到正则化的作用。</p><hr><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ol><li><a href="https://book.douban.com/subject/30285146/" target="_blank" rel="noopener">《百面机器学习》</a>, 葫芦娃著.</li><li><a href="https://zhuanlan.zhihu.com/p/25110450" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25110450</a></li><li><a href="https://blog.csdn.net/tyhj_sf/article/details/79932893" target="_blank" rel="noopener">https://blog.csdn.net/tyhj_sf/article/details/79932893</a></li><li><a href="https://zhuanlan.zhihu.com/p/25279356" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25279356</a></li><li><a href="https://baike.baidu.com/item/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/2520792?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/2520792?fr=aladdin</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激活函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之决策树</title>
      <link href="/post/11302.html"/>
      <url>/post/11302.html</url>
      
        <content type="html"><![CDATA[<p>关于决策树的一些介绍</p><a id="more"></a><h1 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h1><p>        决策树 (decision tree) 是一种基本的分类与回归方法。决策树的模型呈树形结构，在分类问题中，表示基于特征对实例进行分类的过程。决策树学习通常包括3个步骤：特征选择、决策树的生成、决策树的修剪。</p><p>        分类决策树模型是一种描述对实例进行分类的树形结构。决策树由结点和有向边组成。结点有两种类型：内部结点（表示特征或属性）和叶结点（表示类）。</p><p>如下面一个相亲准则的例子：</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/%E7%9B%B8%E4%BA%B2%E5%86%B3%E7%AD%96.png" width="800" height="450"></center><p>年龄、长相、收入和公务员为特征或属性，见和不见是决策的类。</p><p>再看一个预测小明打球的例子：</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/%E5%B0%8F%E6%98%8E%E6%89%93%E7%90%83.png" width="800" height="450"></center><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/%E6%89%93%E7%90%83%E5%86%B3%E7%AD%96.png" width="800" height="450"></center><p>        我们根据天气、湿度和风三个特征将小明的打球数据进行了决策树的构建。红色代表不打球，绿色代表打球。那么我们该如何进行这些特征的选择？也就是我们怎么知道选哪个特征才能更好的划分数据？</p><hr><h1 id="特征选择"><a class="markdownIt-Anchor" href="#特征选择"></a> 特征选择</h1><p>        特征选择在于选取对训练数据具有分类能力的特征。这样可以提高决策树学习的效率。如果利用一个特征进行分类的结果与随机分类的结果没有什么很大的差别，则称这个特征是没有分类能力的。经验上扔掉这样的特征对决策树学习的精度影响不大。通常特征选择的准则是信息增益、信息增益比或基尼指数。</p><h2 id="信息增益"><a class="markdownIt-Anchor" href="#信息增益"></a> 信息增益</h2><p>        介绍信息增益之前，先聊一聊信息熵 (简称熵) 的定义。熵 (entropy) 是表示随机变量不确定性的度量。设X是一个取有限个值的离散随机变量，其概率分布为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">P(X=x_i)=p_i, \ i=1,2,...,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span></span></span></span></span></p><p>则随机变量X的熵定义为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mi>i</mi><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H(X)=-\sum_i^np_ilogp_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>由定义可知，熵只依赖于X的分布，而与X的取值无关，所以也可将X的熵记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mi>i</mi><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H(p)=-\sum_i^np_ilogp_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>熵越大，随机变量的不确定性就越大。也可以理解成信息熵越大，混乱程度就越大，纯度 (purity) 越小。</p><p>例如，小明在6天中，3天去打球，3天不去打，则：不纯洁 (impure): 3是/3否</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>3</mn><mn>6</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>3</mn><mn>6</mn></mfrac><mo>−</mo><mfrac><mn>3</mn><mn>6</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>3</mn><mn>6</mn></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">H(S)=-\frac{3}{6}log\frac{3}{6}-\frac{3}{6}log\frac{3}{6}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>假如小明在4天中，4天都去打球了，则：纯洁 (pure)：4是/0否</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>4</mn><mn>4</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>4</mn><mn>4</mn></mfrac><mo>−</mo><mfrac><mn>0</mn><mn>4</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mfrac><mn>0</mn><mn>4</mn></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">H(S)=-\frac{4}{4}log\frac{4}{4}-\frac{0}{4}log\frac{0}{4}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p><em><strong>信息增益</strong></em></p><p>        信息增益是划分前样本数据集的不纯度(熵)和划分后样本数据集的不纯程度(熵)的差值。</p><p>        假设划分前样本数据集为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并用属性A来划分样本集S，则按属性A划分S的信息增益Gain(S,A)为样本集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>的熵减去按属性A划分S后的样本子集的熵：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>−</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><msub><mi>y</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(S,A)=Entropy(S)-Entropy_A(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></span></p><p>按属性A划分S后的样本子集的熵定义如下：假定属性A有k个不同的取值，从而将S划分为k个样本子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>S</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>k</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{S_1,S_2,...,S_k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，则按属性A划分S后的样本子集的信息熵为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><msub><mi>y</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>S</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Entropy_A(S)=\sum_{i=1}^k\frac{|S_i|}{|S|}Entropy(S_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|s_i|\ (i=1,2,...,k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>为样本子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中包含的样本数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>S</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|S|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">∣</span></span></span></span>为样本集S中包含的样本数。信息增益越大，说明使用特征A划分后的样本子集越纯，越有利于分类。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mi>S</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{|S_i|}{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>代表第i个分支的权重，样本越多越重要。</p><p>下面我们以周志华教授的西瓜数据集举例：</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/%E8%A5%BF%E7%93%9C%E6%95%B0%E6%8D%AE%E9%9B%86.png" width="800" height="450"></center><p>该数据集包含17个训练样例，结果有2个类别 (是好瓜、不是好瓜) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">|y|=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，其中正例占<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>=</mo><mfrac><mn>8</mn><mn>17</mn></mfrac></mrow><annotation encoding="application/x-tex">P_1=\frac{8}{17}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，反例占<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub><mo>=</mo><mfrac><mn>9</mn><mn>17</mn></mfrac></mrow><annotation encoding="application/x-tex">P_2=\frac{9}{17}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">7</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>. 根结点的信息熵为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mn>2</mn></munderover><msub><mi>p</mi><mi>k</mi></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><msub><mi>p</mi><mi>k</mi></msub><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>8</mn><mn>17</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>8</mn><mn>17</mn></mfrac><mo>+</mo><mfrac><mn>9</mn><mn>17</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>9</mn><mn>17</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0.998</mn></mrow><annotation encoding="application/x-tex">Entropy(D)=-\sum_{k=1}^2p_klog_2p_k=-(\frac{8}{17}log_2\frac{8}{17}+\frac{9}{17}log_2\frac{9}{17})=0.998</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1032260000000003em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.801113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">8</span></span></span></span></span></p><p>以属性“色泽”为例，其对应的3个数据子集分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>D</mi><mn>1</mn></msup><mo stretchy="false">(</mo><mi mathvariant="normal">色</mi><mi mathvariant="normal">泽</mi><mo>=</mo><mi mathvariant="normal">青</mi><mi mathvariant="normal">绿</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D^1(色泽=青绿)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">泽</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">青</span><span class="mord cjk_fallback">绿</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi mathvariant="normal">色</mi><mi mathvariant="normal">泽</mi><mo>=</mo><mi mathvariant="normal">乌</mi><mi mathvariant="normal">黑</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D^2(色泽=乌黑)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">泽</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">乌</span><span class="mord cjk_fallback">黑</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>D</mi><mn>3</mn></msup><mo stretchy="false">(</mo><mi mathvariant="normal">色</mi><mi mathvariant="normal">泽</mi><mo>=</mo><mi mathvariant="normal">浅</mi><mi mathvariant="normal">白</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D^3(色泽=浅白)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">泽</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">浅</span><span class="mord cjk_fallback">白</span><span class="mclose">)</span></span></span></span>. 子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>D</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">D^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>包含变化为{1,4,6,10,13,17}的6个样例，其中正例占<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><mfrac><mn>3</mn><mn>6</mn></mfrac></mrow><annotation encoding="application/x-tex">p_1=\frac{3}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，反例占<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>2</mn></msub><mo>=</mo><mfrac><mn>3</mn><mn>6</mn></mfrac></mrow><annotation encoding="application/x-tex">p_2=\frac{3}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>D</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">D^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>D</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">D^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>同理，按照色泽特征分类后的3个结点的信息熵为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><msup><mi>D</mi><mn>1</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>3</mn><mn>6</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>3</mn><mn>6</mn></mfrac><mo>+</mo><mfrac><mn>3</mn><mn>6</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>3</mn><mn>6</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>1.000</mn><mspace linebreak="newline"></mspace><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mn>6</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>4</mn><mn>6</mn></mfrac><mo>+</mo><mfrac><mn>2</mn><mn>6</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>2</mn><mn>6</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0.918</mn><mspace linebreak="newline"></mspace><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><msup><mi>D</mi><mn>3</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>1</mn><mn>5</mn></mfrac><mo>+</mo><mfrac><mn>4</mn><mn>5</mn></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>4</mn><mn>5</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0.722</mn></mrow><annotation encoding="application/x-tex">Entropy(D^1)=-(\frac{3}{6}log_2\frac{3}{6}+\frac{3}{6}log_2\frac{3}{6})=1.000\\Entropy(D^2)=-(\frac{4}{6}log_2\frac{4}{6}+\frac{2}{6}log_2\frac{2}{6})=0.918\\Entropy(D^3)=-(\frac{1}{5}log_2\frac{1}{5}+\frac{4}{5}log_2\frac{4}{5})=0.722</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">1</span><span class="mord">8</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">2</span><span class="mord">2</span></span></span></span></span></p><p>属于“色泽”的信息增益为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi mathvariant="normal">色</mi><mi mathvariant="normal">泽</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mn>3</mn></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>E</mi><mi>n</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>p</mi><mi>y</mi><mo stretchy="false">(</mo><msup><mi>D</mi><mi>v</mi></msup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mn>0.998</mn><mo>−</mo><mo stretchy="false">(</mo><mfrac><mn>6</mn><mn>17</mn></mfrac><mo>×</mo><mn>1.000</mn><mo>+</mo><mfrac><mn>6</mn><mn>17</mn></mfrac><mo>×</mo><mn>0.918</mn><mo>+</mo><mfrac><mn>5</mn><mn>17</mn></mfrac><mo>×</mo><mn>0.722</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(D,色泽)=Entropy(D)-\sum_{v=1}^3\frac{|D^v|}{|D|}Entorpy(D^v)\\=0.998-(\frac{6}{17}\times1.000+\frac{6}{17}\times0.918+\frac{5}{17}\times0.722)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">泽</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.068226em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">1</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">2</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><p>类似的，我们可以计算出其他特征的信息增益:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi mathvariant="normal">根</mi><mi mathvariant="normal">蒂</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.143</mn><mo separator="true">;</mo><mtext> </mtext><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi mathvariant="normal">敲</mi><mi mathvariant="normal">声</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.141</mn><mo separator="true">;</mo><mtext> </mtext><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi mathvariant="normal">纹</mi><mi mathvariant="normal">理</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.381</mn><mo separator="true">;</mo><mspace linebreak="newline"></mspace><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi mathvariant="normal">脐</mi><mi mathvariant="normal">部</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.289</mn><mo separator="true">;</mo><mtext> </mtext><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi mathvariant="normal">触</mi><mi mathvariant="normal">感</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.006.</mn></mrow><annotation encoding="application/x-tex">Gain(D,根蒂)=0.143;\ Gain(D,敲声)=0.141;\ Gain(D,纹理)=0.381;\\Gain(D,脐部)=0.289;\ Gain(D,触感)=0.006.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">根</span><span class="mord cjk_fallback">蒂</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">4</span><span class="mord">3</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">敲</span><span class="mord cjk_fallback">声</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">4</span><span class="mord">1</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">纹</span><span class="mord cjk_fallback">理</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">8</span><span class="mord">1</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">脐</span><span class="mord cjk_fallback">部</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">8</span><span class="mord">9</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">触</span><span class="mord cjk_fallback">感</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">6</span><span class="mord">.</span></span></span></span></span></p><p>显然，属性“纹理”的信息增益最大，于是它被选为划分属性。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/%E7%BA%B9%E7%90%86%E5%86%B3%E7%AD%96.png" width="800" height="450"></center><h2 id="信息增益率"><a class="markdownIt-Anchor" href="#信息增益率"></a> 信息增益率</h2><p>        以信息增益作为划分训练数据集的特征，存在偏向于选择取值较多的特征的问题。当特征的取值较多时，根据此特征划分更容易得到纯度更高的子集，因此划分之后的熵更低，由于划分前的熵是一定的，因此信息增益更大，所以信息增益比较偏向取值较多的特征。使用信息增益率可以对这一问题进行校正。</p><p><em><strong>信息增益率</strong></em></p><p>        特征A对训练数据集D的信息增益率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain\_ratio(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>定义为其信息增益<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>于训练数据集D关于特征A的值的熵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H_A(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>之比，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">Gain\_ratio(D,A)=\frac{Gain(D,A)}{H_A(D)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，$$H_A(D)=-\sum_{i=1}^n\frac{|D_i|}{|D|}log_2\frac{|D_i|}{|D|}$$，n是特征A取值的个数。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H_A(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>称为属性的“固有值”，属性A的可能取值数目越多（即n为大），则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H_A(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>的值通常会越大。</p><p>        需要注意的是，信息增益率准则对取值数目较少的属性有所偏好，因此，C4.5算法并不是直接选择增益率最大的候选划分属性，而是使用了一个启发式: 先从候选划分属性中找出信息增益高于平均水平的属性，再从中选择信息增益率最高的。</p><h2 id="基尼指数"><a class="markdownIt-Anchor" href="#基尼指数"></a> 基尼指数</h2><p>        基尼指数或基尼不纯度，它反映了从数据集D中随机抽取两个样本，其类别标记不一致的概率，因此，Gini(D)越小，则数据集D的纯度越高。CART决策树使用“基尼指数”来选择划分特征。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>p</mi><mi>k</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Gini(D)=\sum_{i=1}^Kp_k(1-p_k)=1-\sum_{k=1}^Kp_k^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示选中的样本属于k类别的概率，则这个样本被分错的概率是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1-p_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</p><p>        二类分类中基尼指数、熵之半<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\frac{1}{2}H(p))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>和分类误差率的关系:</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/%E5%9F%BA%E5%B0%BC%E6%AF%94%E8%BE%83.png" width="800" height="450"></center><hr><h1 id="决策树的生成"><a class="markdownIt-Anchor" href="#决策树的生成"></a> 决策树的生成</h1><table><thead><tr><th style="text-align:left">决策树算法</th><th style="text-align:left">算法描述</th></tr></thead><tbody><tr><td style="text-align:left">ID3算法</td><td style="text-align:left">其核心是在决策树的各级结点上，使用***信息增益***方法作为属性的选择标准，来帮助确定生成每个结点时所应采用的合适属性。</td></tr><tr><td style="text-align:left">C4.5算法</td><td style="text-align:left">C4.5决策树算法相对于ID3算法的重要改进是使用***信息增益率***来选择结点属性。C4.5算法可以克服ID3算法存在的不足：ID3算法只适用于离散的描述属性，而C4.5算法既能够处理离散的描述属性，又可以处理连续的描述属性。</td></tr><tr><td style="text-align:left">CART算法</td><td style="text-align:left">CART决策树是一种十分有效的非参数分类和回归方法，通过构建树、修剪树、评估树来构建一个二叉树。当终结点是连续变量时，该树为回归树；当终结点是分类变量时，该树为分类树。使用***基尼指数***代替了熵模型进行特征选择。</td></tr></tbody></table><table><thead><tr><th style="text-align:center">决策树算法</th><th style="text-align:center">支持</th><th>选择标准</th><th>特征类型</th><th>缺失值</th><th>过拟合</th></tr></thead><tbody><tr><td style="text-align:center">ID3</td><td style="text-align:center">分类</td><td>信息增益</td><td>离散值</td><td>无法处理</td><td>无法处理</td></tr><tr><td style="text-align:center">C4.5</td><td style="text-align:center">分类</td><td>信息增益率</td><td>离散值、连续值</td><td>可以处理</td><td>预剪枝、后剪枝</td></tr><tr><td style="text-align:center">CART</td><td style="text-align:center">分类(二叉树)、回归</td><td>Gini指数</td><td>离散值、连续值</td><td>可以处理</td><td>预剪枝、后剪枝</td></tr></tbody></table><hr><h1 id="决策树停止生长条件"><a class="markdownIt-Anchor" href="#决策树停止生长条件"></a> 决策树停止生长条件</h1><ol><li>当前节点包含的样本全属于同一类别，无需划分；</li><li>当前属性集为空，或时所有样本在所有属性上取值相同，无法划分；</li><li>当前结点包含的样本集合为空，不能划分。</li></ol><hr><h1 id="剪枝"><a class="markdownIt-Anchor" href="#剪枝"></a> 剪枝</h1><p>        决策树剪枝的基本策略有“预剪枝”和“后剪枝”。预剪枝是指在决策树生成过程中，对每个结点在划分前先进行估计，若当前结点的划分不能带来决策树泛化性能提升，则停止划分并将当前结点标记为叶结点；后剪枝则是先从训练集生成一棵完整的决策树，然后自底向上地对非叶结点进行考察，若将该结点对应的子树替换为叶结点能带来决策树泛化性能提升，则将该子树替换为叶结点。我们采用将数据集中预留一部分数据当作“验证集”以进行泛化性能评估。</p><h2 id="预剪枝"><a class="markdownIt-Anchor" href="#预剪枝"></a> 预剪枝</h2><p>        预剪枝就是在完全正确分类训练集之前，较早地停止树的生长。 具体在什么时候停止决策树的生长有多种不同的方法:</p><ol><li>一种最为简单的方法就是在决策树到达一定高度的情况下就停止树的生长</li><li>到达此结点的实例具有相同的特征向量，而不必一定属于同一类， 也可停止生长。</li><li>到达此结点的实例个数小于某一个阈值也可停止树的生长。</li><li>还有一种更为普遍的做法是计算每次扩张对系统性能的增益，如果这个增益值小于某个阈值则不进行扩展</li></ol><p>优点&amp;缺点</p><p>优点：由于预剪枝不必生成整棵决策树，且算法相对简单， 效率很高， 适合解决大规模问题。但是尽管这一方法看起来很直接， 但是 怎样精确地估计何时停止树的增长是相当困难的。</p><p>缺点：预剪枝有一个缺点， 即视野效果问题 。 也就是说在相同的标准下，也许当前的扩展会造成过度拟合训练数据，但是更进一步的扩展能够满足要求，也有可能准确地拟合训练数据。这将使得算法过早地停止决策树的构造。</p><h2 id="后剪枝"><a class="markdownIt-Anchor" href="#后剪枝"></a> 后剪枝</h2><p>        后剪枝，在已生成过拟合决策树上进行剪枝，可以得到简化版的剪枝决策树。</p><p>主要有四种方法（这里不展开详细解释）：</p><ol><li><p>REP-错误率降低剪枝</p></li><li><p>PEP-悲观剪枝</p></li><li><p>CCP-代价复杂度剪枝</p></li><li><p>MEP-最小错误剪枝</p></li></ol><hr><h1 id="决策树算法总结"><a class="markdownIt-Anchor" href="#决策树算法总结"></a> 决策树算法总结</h1><p><em><strong>决策树算法的优点</strong></em></p><p>1）简单直观，生成的决策树很直观。</p><p>2）基本不需要预处理，不需要提前归一化，处理缺失值。</p><p>3）使用决策树预测的代价是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。 n为样本数。</p><p>4）既可以处理离散值也可以处理连续值。很多算法只是专注于离散值或者连续值。</p><p>5）可以处理多维度输出的分类问题。</p><p>6）相比于神经网络之类的黑盒分类模型，决策树在逻辑上可以得到很好的解释</p><p>7）可以交叉验证的剪枝来选择模型，从而提高泛化能力。</p><p>8） 对于异常点的容错能力好，健壮性高。</p><p><em><strong>决策树算法的缺点</strong></em></p><p>1）决策树算法非常容易过拟合，导致泛化能力不强。可以通过设置节点最少样本数量和限制决策树深度来改进。</p><p>2）决策树会因为样本发生一点点的改动，就会导致树结构的剧烈改变。这个可以通过集成学习之类的方法解决。</p><p>3）寻找最优的决策树是一个NP难的问题，我们一般是通过启发式方法，容易陷入局部最优。可以通过集成学习之类的方法来改善（Bagging、随机森林、Boosting、GBDT、XGBDT）。</p><p>4）有些比较复杂的关系，决策树很难学习，比如异或。这个就没有办法了，一般这种关系可以换神经网络分类方法来解决。</p><p>5）如果某些特征的样本比例过大，生成决策树容易偏向于这些特征。这个可以通过调节样本权重来改善。</p><hr><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ol><li>《统计学习方法》, 李航著;</li><li>《机器学习》, 周志华著;</li><li><a href="https://zhuanlan.zhihu.com/p/59484953" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/59484953</a></li><li><a href="https://zhuanlan.zhihu.com/p/30296061" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30296061</a></li><li><a href="https://www.jianshu.com/p/d153130b813f" target="_blank" rel="noopener">https://www.jianshu.com/p/d153130b813f</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 决策树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的排序/查找算法的时间复杂度和空间复杂度</title>
      <link href="/post/19598.html"/>
      <url>/post/19598.html</url>
      
        <content type="html"><![CDATA[<p>关于排序算法和查找算法的时间/空间复杂度介绍</p><a id="more"></a><h3 id="排序算法的时间复杂度和空间复杂度"><a class="markdownIt-Anchor" href="#排序算法的时间复杂度和空间复杂度"></a> 排序算法的时间复杂度和空间复杂度</h3><table><thead><tr><th style="text-align:center">排序法</th><th style="text-align:center">最差时间分析</th><th style="text-align:center">平均时间复杂度</th><th style="text-align:center">稳定度</th><th style="text-align:center">空间复杂度</th></tr></thead><tbody><tr><td style="text-align:center">冒泡排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">插入排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">归并排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">选择排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">不稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">二叉树排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">不一定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">快速排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">不稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_2n)~O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">堆排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">不稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center">希尔排序</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlog_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">不稳定</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td></tr></tbody></table><h3 id="查找算法时间复杂度"><a class="markdownIt-Anchor" href="#查找算法时间复杂度"></a> 查找算法时间复杂度</h3><table><thead><tr><th style="text-align:center">查找</th><th style="text-align:center">平均时间复杂度</th><th style="text-align:center">查找条件</th></tr></thead><tbody><tr><td style="text-align:center">顺序查找</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">无序或有序队列</td></tr><tr><td style="text-align:center">二分查找</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">有序数组</td></tr><tr><td style="text-align:center">二叉排序树查找</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">二叉排序树</td></tr><tr><td style="text-align:center">哈希表法（散列表）</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">先创建哈希表（散列表）</td></tr><tr><td style="text-align:center">分块查找</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log_2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center">无序或有序队列</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之极大似然估计与贝叶斯估计</title>
      <link href="/post/36332.html"/>
      <url>/post/36332.html</url>
      
        <content type="html"><![CDATA[<p>关于朴素贝叶斯中的极大似然估计与贝叶斯估计的介绍</p><a id="more"></a><h1 id="一-贝叶斯定理与朴素贝叶斯"><a class="markdownIt-Anchor" href="#一-贝叶斯定理与朴素贝叶斯"></a> 一、贝叶斯定理与朴素贝叶斯</h1><p>        首先介绍一下贝叶斯定理，贝叶斯定理是关于随机事件A和B的条件概率的一则定理。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A|B)=\frac{P(B|A)P(A)}{P(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>        其中P(A|B)是在B发生的情况下A发生的可能性。</p><p>        在贝叶斯定理中，有以下名词概念需要注意：</p><ul><li><p>P(A|B)是在B条件下(B事件发生了)A发生的条件概率，又被称为A的后验概率 (Posterior probability)。</p></li><li><p>P(B|A)是在A条件下(A事件发生了)B发生的条件概率，又被称为B的后验概率 (Posterior probability)。</p></li><li><p>P(A)是A的先验概率 (Prior probability)。</p></li><li><p>P(B)是B的先验概率(Prior probability)。</p></li><li><p>P(B|A)/P(B)称为可能性函数 (Likelyhood)，这是一个调整因子，使得预估概率更接近真实概率。</p></li></ul><p>        朴素贝叶斯法 (Naive Bayes) 是基于贝叶斯定理与特征条件独立假设的分类方法。朴素贝叶斯对条件个概率分布做了条件独立性的假设。如下列公式，有n个特征:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X|Y=c_k)={P(x_1,x_2,x_3,...,x_n|Y=c_k)}=\prod_{i=1}^nP(x_i|Y=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>下面举个例子更好的理解朴素贝叶斯：</p><p>某个医院早上来了六个门诊的病人，他们的情况如下表所示：</p><table><thead><tr><th style="text-align:center">症状</th><th style="text-align:center">职业</th><th style="text-align:center">疾病</th></tr></thead><tbody><tr><td style="text-align:center">打喷嚏</td><td style="text-align:center">护士</td><td style="text-align:center">感冒</td></tr><tr><td style="text-align:center">打喷嚏</td><td style="text-align:center">农夫</td><td style="text-align:center">过敏</td></tr><tr><td style="text-align:center">头痛</td><td style="text-align:center">建筑工人</td><td style="text-align:center">脑震荡</td></tr><tr><td style="text-align:center">头痛</td><td style="text-align:center">建筑工人</td><td style="text-align:center">感冒</td></tr><tr><td style="text-align:center">打喷嚏</td><td style="text-align:center">教师</td><td style="text-align:center">感冒</td></tr><tr><td style="text-align:center">头痛</td><td style="text-align:center">教师</td><td style="text-align:center">脑震荡</td></tr></tbody></table><p>        现在又来了第七个病人，是一个打喷嚏的建筑工人。请问他患上感冒的概率有多大？</p><p>根据贝叶斯定理：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A|B)=\frac{P(B|A)P(A)}{P(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>可得</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mo>×</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mo>×</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mo>×</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(感冒|打喷嚏\times建筑工人)=\frac{P(打喷嚏\times建筑工人|感冒)P(感冒)}{P(打喷嚏\times建筑工人)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mord">∣</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mord">∣</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>        由朴素贝叶斯条件独立性的假设可知，&quot;打喷嚏&quot;和&quot;建筑工人&quot;这两个特征是独立的，因此，上面的等式就变成了:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(感冒|打喷嚏 and 建筑工人)=\frac{P(打喷嚏|感冒)P(建筑工人|感冒)P(感冒)}{P(打喷嚏)P(建筑工人)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mord">∣</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mord">∣</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mord">∣</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>计算可得:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mo>×</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>0.66</mn><mo>×</mo><mn>0.33</mn><mo>×</mo><mn>0.5</mn></mrow><mrow><mn>0.5</mn><mo>×</mo><mn>0.33</mn></mrow></mfrac><mo>=</mo><mn>0.66</mn></mrow><annotation encoding="application/x-tex">P(感冒|打喷嚏\times建筑工人)=\frac{0.66\times0.33\times0.5}{0.5\times0.33}=0.66</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mord">∣</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">6</span></span></span></span></span></p><p>        因此，这个打喷嚏的建筑工人，有66%的概率是得了感冒。这就是贝叶斯分类器的基本方法：在统计资料的基础上，依据某些特征，计算各个类别的概率，从而实现分类。</p><h1 id="二-极大似然估计"><a class="markdownIt-Anchor" href="#二-极大似然估计"></a> 二、极大似然估计</h1><p>        在实际问题中，由于数据的来源受限于有限的样本数据，先验概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(感冒)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span></span></span></span> 和条件概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(建筑工人|感冒)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mord">∣</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mclose">)</span></span></span></span>  是未知的。打个比方，我们现在的数据样本来源于某个地方的医院，而我们需要预测全国的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi mathvariant="normal">感</mi><mi mathvariant="normal">冒</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">打</mi><mi mathvariant="normal">喷</mi><mi mathvariant="normal">嚏</mi><mo>×</mo><mi mathvariant="normal">建</mi><mi mathvariant="normal">筑</mi><mi mathvariant="normal">工</mi><mi mathvariant="normal">人</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(感冒|打喷嚏\times建筑工人)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord cjk_fallback">感</span><span class="mord cjk_fallback">冒</span><span class="mord">∣</span><span class="mord cjk_fallback">打</span><span class="mord cjk_fallback">喷</span><span class="mord cjk_fallback">嚏</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">筑</span><span class="mord cjk_fallback">工</span><span class="mord cjk_fallback">人</span><span class="mclose">)</span></span></span></span> 的情况。根据仅有的样本数据进行预测时，一种可行的办法是我们需要先对先验概率和条件概率进行估计，然后再套用贝叶斯分类器。</p><p>        <font color="red"><em><strong>最大似然估计的目的就是：利用已知的样本结果，反推最有可能导致这样结果的参数值</strong></em></font>。</p><p>        极大似然估计是建立在极大似然原理的基础上的一个统计方法，是概率论在统计学中的应用。极大似然估计提供了一种给定观察数据来评估模型参数的方法，即：“<strong>模型已定，参数未知</strong>”。通过若干次试验，观察其结果，利用试验结果得到某个参数值能够使样本出现的概率为最大，则称为极大似然估计</p><p>举个例子:</p><p>        假如有一个罐子，里面有黑白两种颜色的球，数目多少不知，两种颜色的比例也不知。我们想知道罐中白球和黑球的比例，但我们不能把罐中的球全部拿出来数。现在我们可以每次任意从已经摇匀的罐中拿一个球出来，记录球的颜色，然后把拿出来的球再放回罐中。这个过程可以重复，我们可以用记录的球的颜色来估计罐中黑白球的比例。假如在前面的一百次重复记录中，有七十次是白球，请问罐中白球所占的比例最有可能是多少？很多人马上就有答案了：70%。</p><p>        这就是最大似然的思想。</p><h1 id="三-贝叶斯估计"><a class="markdownIt-Anchor" href="#三-贝叶斯估计"></a> 三、贝叶斯估计</h1><p>        用极大似然估计可能会出现所要估计的概率值为0的情况。这时会影响到后验概率的计算结果，使分类产生偏差。解决这一问题的方法是采用贝叶斯估计。</p><p>若某个先验概率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的极大似然估计是:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mi>N</mi></mfrac><mo separator="true">,</mo><mtext> </mtext><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">P(Y=c_k)=\frac{\sum_{i=1}^{N}I(y_i=c_k)}{N},\ k=1,2,...,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.356941em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span></span></p><p>设第j个特征 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>, 可能取值的集合为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>a</mi><mrow><mi>j</mi><msub><mi>S</mi><mi>j</mi></msub></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_{j1},a_{j2},...a_{jS_j}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0973199999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833100000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p>条件概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X^{(j)}=a_{jl}|Y=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的极大似然估计是:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mi>j</mi></msubsup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(X^{(j)}=a_{jl}|Y=c_k)=\frac{\sum_{i=1}^{N}I(x_i^{j}=a_{jl},y_i=c_k)}{\sum_{i=1}^{N}I(y_i=c_k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.841882em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">;</mo><mtext> </mtext><mi>l</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub><mo separator="true">;</mo><mtext> </mtext><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">j = 1,2,....,n;\ l=1,2,...,S_j;\ k=1,2,...,K.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord">.</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_i^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span> 是第i个样本的第j个特征；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{jl}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 个特征可能取的第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 个值; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span> 为指示函数。</p><p>条件概率的贝叶斯估计为:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mi>j</mi></msubsup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>S</mi><mi>j</mi></msub><mi>λ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(X^{(j)}=a_{jl}|Y=c_k)=\frac{\sum_{i=1}^{N}I(x_i^{j}=a_{jl},y_i=c_k)+λ}{\sum_{i=1}^{N}I(y_i=c_k)+S_jλ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.841882em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault">λ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>式中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">λ\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>. 等价于在随机变量各个取值的频数上赋予一个正数λ&gt;0. 当 λ=0 就是极大似然估计。常取 λ=1 ，这时称为拉普拉斯平滑。显然，对任何<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">l=1,2,...,S_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">k=1,2,...,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P_λ(X^{(j)}=a_{jl}|Y=c_k)&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>l</mi><mn>1</mn></mrow><msub><mi>S</mi><mi>j</mi></msub></munderover><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{l1}^{S_j}P(X^{(j)}=a_{jl}|Y=c_k)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2387690000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9366560000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.4083250000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>同样地，先验概率的贝叶斯估计是:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi></mrow><mrow><mi>N</mi><mo>+</mo><mi>K</mi><mi>λ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P_λ(Y=c_k)=\frac{\sum_{i=1}^{N}I(y_i=c_k)+λ}{N+Kλ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.440271em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">λ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>补充:</p><p>        指数函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(y_i=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的意思是：当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">y_i=c_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(y_i=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的返回值为1，否则返回0.</p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><ol><li><p>《<a href="https://book.douban.com/subject/10590856/" target="_blank" rel="noopener">统计学习方法</a>》，李航著.</p></li><li><p><a href="https://blog.csdn.net/c406495762/article/details/77341116" target="_blank" rel="noopener">Jack-Cui的CSDN博客-Python3《机器学习实战》学习笔记（四）：朴素贝叶斯基础篇之言论过滤器</a>.</p></li><li><p><a href="https://blog.csdn.net/zengxiantao1994/article/details/72787849" target="_blank" rel="noopener">知行流浪的CSDN博客-极大似然估计详解</a>.</p></li><li><p><a href="http://www.ruanyifeng.com/blog/2013/12/naive_bayes_classifier.html" target="_blank" rel="noopener">阮一峰的网络日志</a>.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
            <tag> Navie Bayes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-enumerate()函数与items()方法</title>
      <link href="/post/54907.html"/>
      <url>/post/54907.html</url>
      
        <content type="html"><![CDATA[<p>关于enumerate()函数与items()方法的介绍</p><a id="more"></a><h1 id="enumerate函数"><a class="markdownIt-Anchor" href="#enumerate函数"></a> enumerate()函数</h1><h2 id="描述"><a class="markdownIt-Anchor" href="#描述"></a> 描述</h2><p>        enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。</p><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><p><code>enumerate(sequence, [start=0])</code></p><h2 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h2><ul><li>sequence: 一个序列/迭代器或是其他迭代对象。</li><li>start: 下标起始位置。</li></ul><h2 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h2><p>        返回 enumerate() 枚举对象。</p><h2 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h2><p>示例1:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seq_list = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>]</span><br><span class="line">print(list(enumerate(seq_list)))    </span><br><span class="line">     </span><br><span class="line"><span class="comment"># 输出:   </span></span><br><span class="line">[(<span class="number">0</span>, <span class="string">'one'</span>), (<span class="number">1</span>, <span class="string">'two'</span>), (<span class="number">2</span>, <span class="string">'three'</span>)]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seq_list = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>]</span><br><span class="line"><span class="keyword">for</span> i, element <span class="keyword">in</span> enumerate(seq_list):</span><br><span class="line">    print(i, element)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:   </span></span><br><span class="line"><span class="number">0</span> one</span><br><span class="line"><span class="number">1</span> two</span><br><span class="line"><span class="number">2</span> three</span><br></pre></td></tr></table></figure><p>示例2:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seq_dict = &#123;<span class="string">'one'</span>:<span class="string">'a'</span>, <span class="string">'two'</span>:<span class="string">'b'</span>, <span class="string">'three'</span>:<span class="string">'c'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, element <span class="keyword">in</span> enumerate(seq_dict.keys()):</span><br><span class="line">    print(i, element)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line"><span class="number">0</span> one</span><br><span class="line"><span class="number">1</span> two</span><br><span class="line"><span class="number">2</span> three</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seq_dict = &#123;<span class="string">'one'</span>:<span class="string">'a'</span>, <span class="string">'two'</span>:<span class="string">'b'</span>, <span class="string">'three'</span>:<span class="string">'c'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, element <span class="keyword">in</span> enumerate(seq_dict.values()):</span><br><span class="line">    print(i, element)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line"><span class="number">0</span> a</span><br><span class="line"><span class="number">1</span> b</span><br><span class="line"><span class="number">2</span> c</span><br></pre></td></tr></table></figure><hr><h1 id="items方法"><a class="markdownIt-Anchor" href="#items方法"></a> items()方法</h1><h2 id="描述-2"><a class="markdownIt-Anchor" href="#描述-2"></a> 描述</h2><p>        items()方法主要是用于字典的，以列表形式返回可遍历的(键、值)元组数组。</p><h2 id="语法-2"><a class="markdownIt-Anchor" href="#语法-2"></a> 语法</h2><p><code>dict.items()</code></p><h2 id="返回值-2"><a class="markdownIt-Anchor" href="#返回值-2"></a> 返回值</h2><p>        以列表形式返回可遍历的(键、值)元组数组。</p><h2 id="实例-2"><a class="markdownIt-Anchor" href="#实例-2"></a> 实例</h2><p>示例1:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seq_dict = &#123;<span class="string">'one'</span>:<span class="string">'a'</span>, <span class="string">'two'</span>:<span class="string">'b'</span>, <span class="string">'three'</span>:<span class="string">'c'</span>&#125;</span><br><span class="line">print(seq_dict.items())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">dict_items([(<span class="string">'one'</span>, <span class="string">'a'</span>), (<span class="string">'two'</span>, <span class="string">'b'</span>), (<span class="string">'three'</span>, <span class="string">'c'</span>)])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">seq_dict = &#123;<span class="string">'one'</span>:<span class="string">'a'</span>, <span class="string">'two'</span>:<span class="string">'b'</span>, <span class="string">'three'</span>:<span class="string">'c'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> seq_dict.items():</span><br><span class="line">    print(key, value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">one a</span><br><span class="line">two b</span><br><span class="line">three c</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> enumerate() </tag>
            
            <tag> items() </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github上修改邮箱后找回之前的commit</title>
      <link href="/post/11633.html"/>
      <url>/post/11633.html</url>
      
        <content type="html"><![CDATA[<p>关于修改邮箱后commit记录消失如何找回的方法</p><a id="more"></a><p>        之前我在github的设置中更换了邮箱，然后自己的contribution页面明显少了一些绿点，因为之前每次所做的commit在本地上git绑定的是以前的邮箱，所以更换新邮箱之后commit记录就消失了。</p><p>        那么我们要如何找回这些commit呢？按照下面的步骤来，轻松找回它们。</p><h2 id="使用下面命令重新clone你的仓库"><a class="markdownIt-Anchor" href="#使用下面命令重新clone你的仓库"></a> 使用下面命令重新clone你的仓库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone --bare https://github.com/user/repo.git</span><br><span class="line">cd repo.git</span><br></pre></td></tr></table></figure><p>        这里的 <code>https://github.com/user/repo.git</code> 是指你想要找回commit的仓库。<br>        repo指你的仓库名称。</p><h2 id="使用-git-log-查看之前commit的email"><a class="markdownIt-Anchor" href="#使用-git-log-查看之前commit的email"></a> 使用 git log 查看之前commit的email</h2><p><code>git log</code></p><h2 id="替换下面脚本中的-old_email-correct_name-correct_email"><a class="markdownIt-Anchor" href="#替换下面脚本中的-old_email-correct_name-correct_email"></a> 替换下面脚本中的 OLD_EMAIL, CORRECT_NAME, CORRECT_EMAIL</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">git filter-branch --env-filter &apos;</span><br><span class="line"></span><br><span class="line">OLD_EMAIL=&quot;your-old-email@example.com&quot;</span><br><span class="line">CORRECT_NAME=&quot;Your Correct Name&quot;</span><br><span class="line">CORRECT_EMAIL=&quot;your-correct-email@example.com&quot;</span><br><span class="line"></span><br><span class="line">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span><br><span class="line">then</span><br><span class="line">    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;</span><br><span class="line">    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span><br><span class="line">then</span><br><span class="line">    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;</span><br><span class="line">    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;</span><br><span class="line">fi</span><br><span class="line">&apos; --tag-name-filter cat -- --branches --tags</span><br></pre></td></tr></table></figure><ul><li>OLD_EMAIL 就是使用 git log 查看到的email</li><li>CORRECT_NAME 填你现在使用的名称</li><li>CORRECT_EMAIL 填你现在使用的邮箱</li></ul><p>        然后运行脚本(复制到终端中，enter键运行)。</p><h2 id="运行下面命令将正确的历史记录推到github上"><a class="markdownIt-Anchor" href="#运行下面命令将正确的历史记录推到github上"></a> 运行下面命令，将正确的历史记录推到Github上</h2><p><code>git push --force --tags origin 'refs/heads/*'</code></p><h2 id="清除当前项目文件"><a class="markdownIt-Anchor" href="#清除当前项目文件"></a> 清除当前项目文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ..    //回到上一级</span><br><span class="line">rm -rf repo.git   //删除</span><br></pre></td></tr></table></figure><h2 id="git查看用户名和邮箱"><a class="markdownIt-Anchor" href="#git查看用户名和邮箱"></a> Git查看用户名和邮箱</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line"></span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure><h2 id="git修改全局的用户名和邮箱地址"><a class="markdownIt-Anchor" href="#git修改全局的用户名和邮箱地址"></a> Git修改全局的用户名和邮箱地址</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;username&quot;</span><br><span class="line"></span><br><span class="line">$ git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo完善及维护血泪史</title>
      <link href="/post/59292.html"/>
      <url>/post/59292.html</url>
      
        <content type="html"><![CDATA[<p>关于hexo搭建后优化完善的一些问题</p><a id="more"></a><h1 id="主页背景图片不能显示"><a class="markdownIt-Anchor" href="#主页背景图片不能显示"></a> 主页背景图片不能显示</h1><p>        2019.8.19日上午，昨天搭建好的博客又意外显示不出主页的图片和站点其他图片。百思不得其所，明明昨天还好好地，今天怎么又出现问题了。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Hexo/hexo%E5%AE%8C%E5%96%84%E5%8F%8A%E7%BB%B4%E6%8A%A4%E8%A1%80%E6%B3%AA%E5%8F%B2/%E6%9C%AA%E6%98%BE%E7%A4%BA%E4%B8%BB%E9%A1%B5%E5%9B%BE%E7%89%87.png" width="800" height="450"></center><p>        正常显示应该是这样的:</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Hexo/hexo%E5%AE%8C%E5%96%84%E5%8F%8A%E7%BB%B4%E6%8A%A4%E8%A1%80%E6%B3%AA%E5%8F%B2/%E4%B8%BB%E9%A1%B5%E8%83%8C%E6%99%AF.png" width="800" height="450"></center><p>        我在本地localhost打开博客是没有问题的，图片正常显示，说明问题是出在了github上。<br>(背景图用的是jon-bg.jpg)</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Hexo/hexo%E5%AE%8C%E5%96%84%E5%8F%8A%E7%BB%B4%E6%8A%A4%E8%A1%80%E6%B3%AA%E5%8F%B2/intro_%E6%9C%AC%E5%9C%B0.png" width="300" height="450"></center><p>        于是我去github上我存放图片的文件夹中看了一下，果然，缺少了主页显示的图片，只剩下一张20多kb的图。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Hexo/hexo%E5%AE%8C%E5%96%84%E5%8F%8A%E7%BB%B4%E6%8A%A4%E8%A1%80%E6%B3%AA%E5%8F%B2/intro.jpg" width="800" height="200"></center><p>        难道hexo deploy部署的时候比较大的图上传不上去吗？抱着这个疑问我测试了几次，只有一张27kb的图片部署成功了。</p><p>        我又google了一下，github上传文件限制是100M啊，为什么我十几兆的一张图片部署不上去呢？我怀疑问题应该不是出在图片大小的上面。</p><p>        我每次重新部署是用hexo clean &amp;&amp; hexo g -d, 就是 clean genarater deploy 一步到位，我就一顿乱操作（还尝试过用 git add 来把图片上传上去，当然是不可能的😄），把指令拆开，没加hexo clean这一步，只写了 hexo g 生成静态文件, 然后 hexo d 部署到github上去, 就在这时候！！！奇迹发生了。。。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Hexo/hexo%E5%AE%8C%E5%96%84%E5%8F%8A%E7%BB%B4%E6%8A%A4%E8%A1%80%E6%B3%AA%E5%8F%B2/%E6%84%8F%E5%A4%96%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F.png" width="800" height="450"></center> <p>        本着以“测试工程师”的心态，又试了一遍 hexo clean &amp;&amp; hexo g -d 命令，结果github上的图片又被删了。</p><center><img src="https://chenhao-1300052108.cos.ap-beijing.myqcloud.com/ch-Pic/Hexo/hexo%E5%AE%8C%E5%96%84%E5%8F%8A%E7%BB%B4%E6%8A%A4%E8%A1%80%E6%B3%AA%E5%8F%B2/%E5%8F%88%E8%A2%AB%E5%88%A0%E9%99%A4.png" width="800" height="200"></center><p>        <em><strong>以上测试说明 hexo clean 指令可能会删除github上大的图片，或者说运行 hexo clean &amp;&amp; hexo g -d 指令时，不能生成比较大的图片的静态文件，所以在部署的时候未上传到github上，才导致了我上述的问题发生。</strong></em></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结：</h2><p>        如果需要更新背景图片，我总结了一套指令方案:</p><ol><li>hexo clean 会把原本部署在github上较大的图片给删除掉</li><li>删除掉之后，我想重新上传图片的话，就需要按照以下操作:<ul><li>hexo s 先运行本地服务，打开网页之后，再关闭服务</li><li>hexo g 运行该命令生成静态文件，千万不要加上clean</li><li>hexo d 将本地上的文件（github上没有的）部署到github上</li><li>hexo s 再次运行本地服务</li><li>现在可以打开github pages的网址（或者直接查看github博客仓库里面的文件），你会发现ok了</li></ul></li></ol><hr><h1 id="博客中插入图片未能显示"><a class="markdownIt-Anchor" href="#博客中插入图片未能显示"></a> 博客中插入图片未能显示</h1><p>        写这篇博客插入图片的时候遇到了这样的问题，所以也顺带记录下来。先是看了一篇插入博客图片的教程:</p><ol><li><p>把主页配置文件_config.yml里的post_asset_folder: 这个选项设置为true;</p></li><li><p>在你hexo目录下执行这样一句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件;</p></li><li><p>等待一小段时间后，再运行hexo n &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹;</p></li><li><p>最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：<br><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p></li></ol><p>        按照上面的步骤操作到了第四步，使用markdown命令插入图片后，打开博客网页发现图片没有显示出来，就是这样:</p><img src="/post/59292/插入图片未显示.png" title="test"> <p>        然后又是一波 Google and Baidu , 找到了解决方案:</p><ol><li><p>安装插件：<br><code>npm install https://github.com/7ym0n/hexo-asset-image --save</code><br>这是个修改过的插件，经测试无问题，使用这个插件来引入图片，而不是网上那些方法里说的用传统md语法相对路径的方法。</p></li><li><p>插入图片时用这种方式：<br><code><img src="/post/59292/插入图片格式.png" title="This is an test image"></code><br>其中test.jpg就是你要引用的图片，我这里就是test.jpg，后面的This is an test image是图片描述，可以自己修改。</p></li></ol><p>        最后，博客中的图片就成功显示了。</p><p>        另外，还有一种插入图片的方法，并且能够调整图片的位置，长宽等参数:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;</span><br><span class="line">&lt;img src=&quot;test.jpg&quot; width=500 height=300&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><ul><li>center 表示图片居中</li><li>width、height 分别表示图片的宽度和高度</li><li>test.jpg 则是你要插入的图片</li></ul><p>        问题终于解决了，不知道下一个新坑是什么呢😂</p><hr><h1 id="文件名称改动引发的博客页面404"><a class="markdownIt-Anchor" href="#文件名称改动引发的博客页面404"></a> 文件名称改动引发的博客页面404</h1><p>        写完第二部分后，我手贱的将本文档的文件名称和存储图片的同名文件夹名称改了首字母，原本是 <em><strong>hexo完善及维护血泪史</strong></em> ， 由于本人有强迫症，就改成了 <em><strong>Hexo完善及维护血泪史</strong></em>，然后hexo g, hexo d, 打开github pages，发现本博文一点开就是404 not found，在本地的服务打开网页又没有问题。难受呀，我是bug制造机吗？</p><p>        经过 苦思冥想，茶饭不思，昼夜难眠 之后，洗完澡后，打开电脑，打开github，查看那个博客的文件夹，果不其然！</p><img src="/post/59292/hexo血泪.png" title="test"> <p>       github上这个文件及图片文件夹名称没有更新，其原因是：在本地上文件的内容本身是没有改变的，只是改变了名字，所以在部署到github上时，该文件并没有更新，然后本地的文件确改变了名称，这导致了“线上”和“线下”的不匹配，然后打开github pages就是404了。</p><hr><h1 id="hexo插入数学公式无法显示问题"><a class="markdownIt-Anchor" href="#hexo插入数学公式无法显示问题"></a> Hexo插入数学公式无法显示问题</h1><h2 id="step-1-use-kramed-instead-of-marked"><a class="markdownIt-Anchor" href="#step-1-use-kramed-instead-of-marked"></a> Step 1: Use Kramed instead of Marked</h2><p>卸载 Marked and 安装 Kramed, 按照下面的命令操作:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-renderer-marked --save</span><br><span class="line">$ npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>然后进入<code>&lt;your-project-dir&gt;/node_modules/hexo-renderer-kramed/lib/renderer.js</code>将下面代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// Change inline math rule</span><br><span class="line">function formatText(text) &#123;</span><br><span class="line">    // Fit kramed&apos;s rule: $$ + \1 + $$</span><br><span class="line">    return text.replace(/`\$(.*?)\$`/g, &apos;$$$$$1$$$$&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改成:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// Change inline math rule</span><br><span class="line">function formatText(text) &#123;</span><br><span class="line">    return text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="step-2-stop-using-hexo-math"><a class="markdownIt-Anchor" href="#step-2-stop-using-hexo-math"></a> Step 2: Stop Using hexo-math</h2><p>首先，如果你已经安装过 hexo-math，将它卸载：<br><code>$ npm uninstall hexo-math --save</code><br>然后安装 hexo-renderer-mathjax ：<br><code>$ npm install hexo-renderer-mathjax --save</code></p><h2 id="step-3-update-mathjax-cdn-url"><a class="markdownIt-Anchor" href="#step-3-update-mathjax-cdn-url"></a> Step 3: Update Mathjax CDN URL</h2><p>打开文件<code>&lt;path-to-your-project&gt;/node_modules/hexo-renderer-mathjax/mathjax.html</code>.<br>然后，将包含CDN URL的 <code>&lt;script&gt;</code> 标记更改为以下内容:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>最后，保存文件并关闭。</p><h2 id="step-4-remember-to-activate-mathjax-for-your-post"><a class="markdownIt-Anchor" href="#step-4-remember-to-activate-mathjax-for-your-post"></a> Step 4: Remember to Activate Mathjax for Your Post</h2><p>如果你要使用Mathjax来编辑数学公式，那么在你的post里将mathjax设置为true。如下所示:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Testing Mathjax with Hexo</span><br><span class="line">category: Uncategorized</span><br><span class="line">date: 2019/08/21</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><hr><h1 id="添加了评论插件"><a class="markdownIt-Anchor" href="#添加了评论插件"></a> 添加了评论插件</h1><hr><h1 id="将hexo博客也挂载到了coding上这样加载速度更快"><a class="markdownIt-Anchor" href="#将hexo博客也挂载到了coding上这样加载速度更快"></a> 将Hexo博客也挂载到了Coding上，这样加载速度更快</h1><hr><h1 id="绑定了域名国内访问是访问coding上的国外访问是访问github上的"><a class="markdownIt-Anchor" href="#绑定了域名国内访问是访问coding上的国外访问是访问github上的"></a> 绑定了域名，国内访问是访问Coding上的，国外访问是访问Github上的</h1><hr><h1 id="添加了百度谷歌收录谷歌已收录百度还没收录百度贼慢"><a class="markdownIt-Anchor" href="#添加了百度谷歌收录谷歌已收录百度还没收录百度贼慢"></a> 添加了百度谷歌收录（谷歌已收录，百度还没收录（百度贼慢））</h1><hr><h1 id="测试添加网易云音乐模块"><a class="markdownIt-Anchor" href="#测试添加网易云音乐模块"></a> 测试添加网易云音乐模块</h1><hr><h1 id="添加了文章顶置功能"><a class="markdownIt-Anchor" href="#添加了文章顶置功能"></a> 添加了文章顶置功能</h1><hr><h1 id="添加本站运行时间"><a class="markdownIt-Anchor" href="#添加本站运行时间"></a> 添加本站运行时间</h1><hr><h1 id="valine评论邮箱通知失败没弄好"><a class="markdownIt-Anchor" href="#valine评论邮箱通知失败没弄好"></a> Valine评论邮箱通知失败，没弄好</h1><hr><h1 id="原来的archer主题被我玩坏了更换了melody主题"><a class="markdownIt-Anchor" href="#原来的archer主题被我玩坏了更换了melody主题"></a> 原来的archer主题被我玩坏了，更换了melody主题</h1>]]></content>
      
      
      <categories>
          
          <category> Tutorials </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-sort()与sorted()</title>
      <link href="/post/9217.html"/>
      <url>/post/9217.html</url>
      
        <content type="html"><![CDATA[<p>关于容易混淆的sort()与sorted()介绍</p><a id="more"></a><h2 id="sort与sorted两者的区别"><a class="markdownIt-Anchor" href="#sort与sorted两者的区别"></a> sort()与sorted()两者的区别:</h2><ul><li>sort 是应用在 list 上的方法，sorted 可以对所有可迭代的对象进行排序操作。</li><li>list 的 sort 方法返回的是对已经存在的列表进行操作，而内建函数 sorted 方法返回的是一个新的 list，而不是在原来的基础上进行的操作。</li></ul><hr><h2 id="sort方法"><a class="markdownIt-Anchor" href="#sort方法"></a> sort()方法:</h2><h3 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h3><p><code>list.sort(key=None, reverse=False)</code></p><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h3><ul><li>key: 用于进行比较的元素，取自于可迭代对象中，指定迭代对象中的一个元素来进行排序，如列表中字列表的第一个元素。</li><li>reverse: reverse默认为False，表示升序，为True时则表示降序。</li></ul><h3 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h3><p>无</p><h3 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h3><p>注：sort()方法只能应用于列表对象，不能用于字典对象。</p><p>示例1: 测试sort()的返回值</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list_ep = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">print(list_ep.sort())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line"><span class="literal">None</span></span><br><span class="line"><span class="comment"># 说明sort()没有返回值。</span></span><br></pre></td></tr></table></figure><p>示例2: 升序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list_ep = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">list_ep.sort()</span><br><span class="line">print(list_ep)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>示例3: 降序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list_ep = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">list_ep.sort(reverse = <span class="literal">True</span>)</span><br><span class="line">print(list_ep)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>示例4: 指定参数key值进行排序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取列表的第二个元素</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">takeSecond</span><span class="params">(elem)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> elem[<span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line">list_ep = [(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">5</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">3</span>), (<span class="number">6</span>, <span class="number">5</span>)]</span><br><span class="line">list_ep.sort(key=takeSecond)</span><br><span class="line">print(list_ep)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[(<span class="number">5</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">4</span>), (<span class="number">6</span>, <span class="number">5</span>)]</span><br></pre></td></tr></table></figure><hr><h2 id="sorted方法"><a class="markdownIt-Anchor" href="#sorted方法"></a> sorted()方法:</h2><h3 id="语法-2"><a class="markdownIt-Anchor" href="#语法-2"></a> 语法</h3><p><code>sorted(iterable, key=None, reverse=False)</code></p><h3 id="参数-2"><a class="markdownIt-Anchor" href="#参数-2"></a> 参数</h3><ul><li>iterable: 可迭代对象</li><li>key: 用于进行比较的元素，取自于可迭代对象中，指定迭代对象中的一个元素来进行排序。</li><li>reverse: reverse默认为False，表示升序，为True时则表示降序。</li></ul><h3 id="返回值-2"><a class="markdownIt-Anchor" href="#返回值-2"></a> 返回值</h3><p>排好序的列表（也就是说返回的是一个列表，尽管是对字典进行排序）</p><h3 id="实例-2"><a class="markdownIt-Anchor" href="#实例-2"></a> 实例</h3><p>示例1: 对列表进行降序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list_ep = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">a = sorted(list_ep, reverse=<span class="literal">True</span>)</span><br><span class="line">print(list_ep)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该例子也说明了sorted()未对原来的列表list_ep进行改动，同时它的返回值a是一个列表</span></span><br></pre></td></tr></table></figure><p>示例2: 对字典进行排序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict_1=&#123;<span class="string">'a'</span>:<span class="number">2</span>,<span class="string">'e'</span>:<span class="number">3</span>,<span class="string">'f'</span>:<span class="number">8</span>,<span class="string">'d'</span>:<span class="number">4</span>&#125;</span><br><span class="line">dict_2 = sorted(dict_1,reverse=<span class="literal">True</span>)</span><br><span class="line">print(dict_2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[<span class="string">'f'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>, <span class="string">'a'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这种对键进行排序，是根据键所对应的值进行排序。</span></span><br></pre></td></tr></table></figure><p>示例3: 对字典的key进行排序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict_1=&#123;<span class="string">'a'</span>:<span class="number">2</span>,<span class="string">'e'</span>:<span class="number">3</span>,<span class="string">'f'</span>:<span class="number">8</span>,<span class="string">'d'</span>:<span class="number">4</span>&#125;</span><br><span class="line">list_1= sorted(dict1.keys())</span><br><span class="line">print(list_1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>]</span><br></pre></td></tr></table></figure><p>示例4: 对字典的value进行排序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict_1=&#123;<span class="string">'a'</span>:<span class="number">2</span>,<span class="string">'e'</span>:<span class="number">3</span>,<span class="string">'f'</span>:<span class="number">8</span>,<span class="string">'d'</span>:<span class="number">4</span>&#125;</span><br><span class="line">list_1= sorted(dict1.values())</span><br><span class="line">print(list_1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>]</span><br></pre></td></tr></table></figure><p>示例5: 指定参数key值进行排序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">array = [&#123;<span class="string">"age"</span>:<span class="number">20</span>,<span class="string">"name"</span>:<span class="string">"a"</span>&#125;,&#123;<span class="string">"age"</span>:<span class="number">25</span>,<span class="string">"name"</span>:<span class="string">"b"</span>&#125;,&#123;<span class="string">"age"</span>:<span class="number">10</span>,<span class="string">"name"</span>:<span class="string">"c"</span>&#125;]</span><br><span class="line">array = sorted(array, key=<span class="keyword">lambda</span> x:x[<span class="string">"age"</span>])</span><br><span class="line">print(array)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[&#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'c'</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">20</span>, <span class="string">'name'</span>: <span class="string">'a'</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">25</span>, <span class="string">'name'</span>: <span class="string">'b'</span>&#125;]</span><br></pre></td></tr></table></figure><p>示例6: 多列排序(先按照成绩降序排序，相同成绩的按照名字升序排序)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">array = [&#123;<span class="string">'name'</span>:<span class="string">'alice'</span>, <span class="string">'score'</span>:<span class="number">38</span>&#125;, &#123;<span class="string">'name'</span>:<span class="string">'bob'</span>, <span class="string">'score'</span>:<span class="number">18</span>&#125;, </span><br><span class="line">         &#123;<span class="string">'name'</span>:<span class="string">'darl'</span>, <span class="string">'score'</span>:<span class="number">28</span>&#125;, &#123;<span class="string">'name'</span>:<span class="string">'christ'</span>, <span class="string">'score'</span>:<span class="number">28</span>&#125;,</span><br><span class="line">         &#123;<span class="string">'name'</span>:<span class="string">'ach'</span>, <span class="string">'score'</span>:<span class="number">18</span>&#125;]</span><br><span class="line">array = sorted(array, key=<span class="keyword">lambda</span> x:(-x[<span class="string">'score'</span>], x[<span class="string">'name'</span>]))</span><br><span class="line">print(array)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出:</span></span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'alice'</span>, <span class="string">'score'</span>: <span class="number">38</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'christ'</span>, <span class="string">'score'</span>: <span class="number">28</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'darl'</span>, <span class="string">'score'</span>: <span class="number">28</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'ach'</span>, <span class="string">'score'</span>: <span class="number">18</span>&#125;, &#123;<span class="string">'name'</span>: <span class="string">'bob'</span>, <span class="string">'score'</span>: <span class="number">18</span>&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sort() </tag>
            
            <tag> sorted() </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
